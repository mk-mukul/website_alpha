{"version":3,"sources":["components/Header.js","containers/profile/Profile.js","containers/home/Home.js","containers/addLink/AddLink.js","containers/inbox/components/Friend.js","containers/inbox/components/Message.js","containers/inbox/components/ChatWindow.js","containers/inbox/Inbox.js","components/Loading.js","routes/LoginRouter.js","routes/MainRouter.js","containers/auth/Signin.js","containers/auth/Signup.js","containers/public/LinkPage.js","containers/public/PublicPage.js","containers/public/LinkWebsite.js","App.js","reportWebVitals.js","index.js","script/link_page.js"],"names":["Header","props","useState","navToggle","setNavToggle","navToggler","className","to","onClick","id","process","params","data","user_name","Profile","user","name","email","phone","Cookies","remove","window","location","reload","Home","user_data","href","firstRun","initLinks","AddLinks","links","setLinks","useEffect","update","addLink","title","link","newLink","target","onDelete","filter","e","a","token","get","fetch","method","headers","Accept","Authorization","body","JSON","stringify","console","log","alert","Links","length","map","ind","OneLink","AddLink","setTitle","setLink","onSubmit","preventDefault","htmlFor","type","value","onChange","Friend","active","i","actives","to_user_name","chat_id","lastMsg","val","LastMsg","format","time","fontSize","message","Message","classes","classes2","reply","own","friend","last","isTime","setIsTime","isReply","setIsReply","ref","scrollRef","selectMsg","ChatWindow","msg","setMsg","userName","setUserName","currentChat","setCurrentChat","messages","setMeassages","inMsg","setInMsg","inMsgLive","setInMsgLive","from_user_name","msgLive","setMsgLive","chatData","setChatData","selectedMsg","setSelectedMsg","setActives","isActive","setIsActives","socket","useRef","current","io","on","emit","user_id","users","prev","getChat","chat_data","chats_of","with","owner","fetchData","submit","Date","updateChat","scrollIntoView","behavior","placeholder","currentTarget","onKeyDownCapture","key","res","json","Inbox","addFrndInp","setAddFrndInp","chats_id","friends","setFriends","_id","updateFriends","path","pathname","split","slice","chat_window","setChat_windoe","chat_list","setChat_list","addFriend","addChat","sortTime","exact","render","match","chats","sort","b","Loading","LoginRouter","state","loading","status","this","setState","React","Component","UserFound","MainRouter","URL","Signin","islogin","password","set","username","error","Signup","LinkPage","class","CourseCard","course","Timing","section","ClassLink","PublicPage","Card","LinkWebsite","App","querry","search","join","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","start","setInterval","months","days","currentDate","day","getDay","hour","getHours","toString","minute","getMinutes","second","getSeconds","date","getDate","month","getMonth","courses","querySelectorAll","liveClasses","todayClasses","forEach","innerText","temp","classTime","indexOf","innerHTML","setAttribute","timer","clearInterval","script"],"mappings":"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","file":"static/js/main.a554bb64.chunk.js","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nexport const Header = (props) => {\r\n\r\n  const [navToggle, setNavToggle] = useState(\"hidden\");\r\n  const navToggler = () =>{\r\n    if (navToggle === \"\") {\r\n      setNavToggle(\"hidden\");\r\n    }\r\n    else{\r\n      setNavToggle(\"\");\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n        <nav className={ props.className + \" fixed top-0 w-full flex items-center bg-background-801 p-2 flex-wrap\"}>\r\n          <NavLink to=\"#\" className=\"px-2 mr-4 inline-flex items-center\">\r\n            <span className=\"text-xl text-light-101 font-bold uppercase tracking-wide\" data-target=\"#navigation\">Alpha</span>\r\n          </NavLink>\r\n          <button className=\"nav-toggler text-light-101 inline-flex p-2 hover:bg-background-301 lg:hidden ml-auto\" onClick={()=>navToggler()}>\r\n            <MenuIcon />\r\n          </button>\r\n          <div className={navToggle+\" top-nav w-full lg:inline-flex lg:flex-grow lg:w-auto\"} id=\"navigation\"  onClick={()=>navToggler()}>\r\n            <div className=\"lg:inline-flex lg:flex-row lg:ml-auto flex flex-col\">\r\n              <NavLink to={process.env.PUBLIC_URL + \"/\"} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded font-medium text-light-101 hover:text-dark-801 hover:bg-primary-101\">\r\n                <span>Home</span>\r\n              </NavLink>\r\n              <NavLink  to={process.env.PUBLIC_URL + \"/inbox/\"} params={{ data: props.user_name }} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded font-medium text-light-101 hover:text-dark-801 hover:bg-primary-101\">\r\n                <span>Inbox</span>\r\n              </NavLink>\r\n              <NavLink to={process.env.PUBLIC_URL + \"/profile/\"} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded font-medium text-light-101 hover:text-dark-801 hover:bg-primary-101\">\r\n                <span>{props.user_name}</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    </>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const Profile = (props) => {\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n    window.location.reload()\r\n  };\r\n  const user = props.user;\r\n  return (\r\n    <div className=\"min-h-screen text-primary-101\">\r\n      <div className=\"mt-16\">\r\n        <h1>Hii... {user.name}</h1>\r\n        <h4>Name : {user.name}</h4>\r\n        <h4>User Name : {user.user_name}</h4>\r\n        <h4>email : {user.email}</h4>\r\n        <h4>Phone No : {user.phone}</h4>\r\n      </div>\r\n      <Link to={process.env.PUBLIC_URL+\"/\"}>\r\n        <button className=\"bg-background-401 hover:bg-background-501\"\r\n          onClick={() => {\r\n            logout();\r\n          }}\r\n        >\r\n          Log out\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport const Home = (props) => {\r\n  const user = props.data.user;\r\n  const data = props.data.user_data;\r\n  return (\r\n    <div className=\"min-h-screen text-primary-101\">\r\n      <div className=\"mt-16 font-medium\">\r\n        <h1 className=\"font-semibold\">Hello {user.name} !</h1>\r\n        <h2> Welcome to the Website Alpha</h2>\r\n      </div>\r\n      <div>\r\n        {data.data[0] ? (\r\n          <>\r\n            <p>\r\n              Your link is available{\" \"}\r\n              <a className=\"hover:text-blue-300\" href={process.env.PUBLIC_URL + \"/page/\" + data.user_name}>\r\n                Here\r\n              </a>\r\n            </p>\r\n            <Link\r\n              to={process.env.PUBLIC_URL + \"/links/\"}\r\n              params={{ data: data }}\r\n            >\r\n              <button className=\"bg-background-401 hover:bg-background-501\">Update Links</button>\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <p>You have not saved anything yet</p>\r\n            <Link\r\n              to={process.env.PUBLIC_URL + \"/links/\"}\r\n              params={{ data: data }}\r\n            >\r\n              <button className=\"bg-background-401 hover:bg-background-501\">Add Links</button>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst UPDATE_URL = process.env.REACT_APP_SERVER + \"/update/link\";\r\nlet firstRun = true;\r\nlet initLinks = [];\r\n\r\nexport const AddLinks = (props) => {\r\n  if (firstRun) {\r\n    initLinks = props.data.user_data.data;\r\n    firstRun = false;\r\n  }\r\n\r\n  const onDelete = (link) => {\r\n    setLinks(\r\n      links.filter((e) => {\r\n        return e !== link;\r\n      })\r\n    );\r\n  };\r\n\r\n  const addLink = (title, link) => {\r\n    const newLink = {\r\n      title: title,\r\n      link: link,\r\n    };\r\n    setLinks([...links, newLink]);\r\n  };\r\n\r\n  const [links, setLinks] = useState(initLinks);\r\n\r\n  useEffect(() => {\r\n    update(links);\r\n    initLinks = links;\r\n  }, [links]);\r\n\r\n  return (\r\n    <div className=\"mt-16 grid justify-center justify-items-center\">\r\n      <AddLink addLink={addLink} />\r\n      <h3>\r\n        Your link is available on{\" \"}\r\n        <a\r\n          href={\r\n            process.env.PUBLIC_URL + \"/page/\" + props.data.user_data.user_name\r\n          }\r\n          target=\"blank\"\r\n        >\r\n          {process.env.PUBLIC_URL + \"/page/\" + props.data.user_data.user_name}\r\n        </a>\r\n      </h3>\r\n      <Links links={links} onDelete={onDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst update = async (links) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(UPDATE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        // public\r\n        data: links,\r\n      }),\r\n    });\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nconst Links = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"grid justify-center justify-items-center\">\r\n        <h3>Your Links</h3>\r\n        {props.links.length === 0\r\n          ? \"No links to display\"\r\n          : props.links.map((link, ind) => {\r\n              return (\r\n                <OneLink key={ind} link={link} onDelete={props.onDelete} />\r\n              );\r\n            })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst OneLink = ({ link, onDelete }) => {\r\n  return (\r\n    <>\r\n      <div className=\"grid justify-items-center pt-5\">\r\n        <div className=\"flex flex-wrap\">\r\n          <h3 className=\"mx-2\">{link.title}</h3>\r\n          <button\r\n            onClick={() => {\r\n              onDelete(link);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <a href={link.link} target=\"blank\">\r\n            {link.link}\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddLink = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !link) {\r\n      alert(\"Title or Link cannot be blank\");\r\n    } else {\r\n      props.addLink(title, link);\r\n      setTitle(\"\");\r\n      setLink(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form className=\"form\" onSubmit={submit}>\r\n          <h2>Add a Link</h2>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link</label>\r\n            <input\r\n              type=\"text\"\r\n              value={link}\r\n              onChange={(e) => {\r\n                setLink(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Add Link</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"timeago.js\";\r\nimport CheckRoundedIcon from \"@mui/icons-material/CheckRounded\";\r\n\r\nexport const Friend = (props) => {\r\n  var active = false;\r\n  for (let i = 0; i < props.actives.length; i++) {\r\n    active =\r\n      props.actives[i].user_name === props.data.to_user_name ? true : false;\r\n    if (active) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to={props.data.chat_id} className=\"\">\r\n        <div className=\"flex cursor-pointer mt-0.5 px-2 py-2 hover:bg-background-301 text-light-101\">\r\n          <div className=\"h-10 w-10 flex-shrink-0 relative rounded-full bg-light-301\">\r\n            {active ? (\r\n              <>\r\n                <div className=\"h-2.5 w-2.5 rounded-full absolute bottom-0 right-1 bg-green-400\"></div>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          {[props.data.lastMsg].map((val, ind) => {\r\n            return (\r\n              <LastMsg\r\n                key={ind}\r\n                to_user_name={props.data.to_user_name}\r\n                user_name={props.user_name}\r\n                lastMsg={val}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nconst LastMsg = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"pl-2 flex-grow w-20\">\r\n        <div className=\"flex justify-between\">\r\n          <h4 className=\"font-medium text-sm truncate\">{props.to_user_name}</h4>\r\n          <p className=\"text-xs text-light-401 truncate\">\r\n            {props.lastMsg ? format(props.lastMsg.time) : \"\"}\r\n          </p>\r\n        </div>\r\n        {props.lastMsg ? (\r\n          <div className=\"text-sm flex text-light-401\">\r\n            {props.lastMsg.name === props.user_name ? (\r\n              <>\r\n                <CheckRoundedIcon fontSize=\"small\"/>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <p className=\"truncate\">{props.lastMsg.message}</p>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { format } from \"timeago.js\";\r\nimport ReplyIcon from \"@mui/icons-material/Reply\";\r\n\r\nexport const Message = (props) => {\r\n  // let name = \"\";\r\n  let classes = \"middle\";\r\n  let classes2 = \"\";\r\n  let reply = \"\";\r\n  if (props.data) {\r\n    // name = props.own ? \"\" : props.data.name;\r\n    classes = props.own ? \" flex-row-reverse pl-6\" : \"pr-6\";\r\n    classes2 = props.own ? \"bg-background-501\" : \"bg-background-401\";\r\n  }\r\n  if (props.data.reply) {\r\n    reply = props.data.reply.name === props.user ? \"bg-background-501\" : \"bg-background-401\";\r\n  }\r\n  if (props.friend) {\r\n    classes2 = \"bg-background-201\";\r\n  }\r\n\r\n  const [isTime, setIsTime] = useState(props.last);\r\n  const time = () => {\r\n    isTime ? setIsTime(false) : setIsTime(true);\r\n  };\r\n  useEffect(() => {\r\n    setIsTime(props.last)\r\n  }, [props.last])\r\n\r\n  const [isReply, setIsReply] = useState(\"truncate\");\r\n  const showReply = () => {\r\n    isReply ? setIsReply(\"\") : setIsReply(\"truncate\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div ref={props.scrollRef} className={\"w-full clear-both mb-1 px-2\"}>\r\n        <div className={\"flex \" + classes}>\r\n          <div\r\n            className={\r\n              \" overflow-x-hidden px-1 py-1 rounded-xl cursor-default \" +\r\n              classes2\r\n            }\r\n          >\r\n            {props.data.reply ? (\r\n              <div onClick={()=>showReply()}\r\n                className={\r\n                  \" px-3 pb-1 border-black rounded-xl cursor-default \" + reply\r\n                }\r\n              >\r\n                <p className=\"text-xs text-light-701\">\r\n                  {props.data.reply.name === props.user\r\n                    ? \"you\"\r\n                    : props.data.reply.name}\r\n                </p>\r\n                <p className={\"text-xs text-light-501 pb-0.5 \" + isReply}>\r\n                  {props.data.reply.message}\r\n                </p>\r\n                <hr className=\"border-white opacity-20\" />\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div className=\"px-2.5 py-0.5 text-light-201 text-sm\" onClick={()=>{time()}}>\r\n              <p>{props.data.message}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex text-white opacity-10 hover:opacity-80 flex-col mx-1 justify-center\"\r\n            onClick={() => {\r\n              props.selectMsg(props.data);\r\n            }}\r\n          >\r\n            <ReplyIcon />\r\n          </div>\r\n        </div>\r\n        <p\r\n          className={\r\n            props.own\r\n              ? \"justify-end flex text-xsm p-0 m-0\"\r\n              : \"justify-start flex text-xsm p-0 m-0\"\r\n          }\r\n        >\r\n          <span className=\"text-white opacity-80 cursor-default\">\r\n            {props.friend ? <label>typing...</label> : <></>}\r\n            {!isTime ? (\r\n              <></>\r\n            ) : (\r\n              <>\r\n                {/* <label className=\"text-xs text-white opacity-70\">{name} </label> */}\r\n                {props.data.time ? format(props.data.time) : \"\"}\r\n              </>\r\n            )}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ArrowBackIosNewRoundedIcon from \"@mui/icons-material/ArrowBackIosNewRounded\";\r\nimport ClearRoundedIcon from \"@mui/icons-material/ClearRounded\";\r\nimport { Message } from \"./Message\";\r\nimport Cookies from \"js-cookie\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/add/chats/\";\r\nconst SEND_URL = process.env.REACT_APP_SERVER + \"/update/chat\";\r\n\r\nexport const ChatWindow = (props) => {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [userName, setUserName] = useState(null);\r\n  const [currentChat, setCurrentChat] = useState(\"\");\r\n  const [messages, setMeassages] = useState([]);\r\n  const [inMsg, setInMsg] = useState(null);\r\n  const [inMsgLive, setInMsgLive] = useState(null);\r\n  const [msgLive, setMsgLive] = useState({\r\n    from_user_name: \"\",\r\n    message: \"\",\r\n  });\r\n  const [chatData, setChatData] = useState(null);\r\n  const [selectedMsg, setSelectedMsg] = useState(null);\r\n  const [actives, setActives] = useState([]);\r\n  const [isActive, setIsActives] = useState(false);\r\n\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  // get message from socket io\r\n  useEffect(() => {\r\n    socket.current = io(URL);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      // console.log(data)\r\n      setInMsg(data);\r\n      setMsgLive({ from_user_name: \"\", message: \"\" });\r\n    });\r\n    socket.current.on(\"getMsgLive\", (data) => {\r\n      setInMsgLive(data);\r\n    });\r\n  }, []);\r\n\r\n  // inform socket io that user has joined\r\n  useEffect(() => {\r\n    if (userName) {\r\n      socket.current.emit(\"addUser\", { user_name: userName, user_id: \"data\" });\r\n    }\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      setActives(users)\r\n    });\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    setIsActives(false);\r\n    for (let i = 0; i < actives.length; i++) {\r\n      if (actives[i].user_name === currentChat) {\r\n        setIsActives(true);\r\n      }\r\n    }\r\n  }, [currentChat, actives]);\r\n\r\n  // display live typing...\r\n  useEffect(() => {\r\n    if (inMsgLive && currentChat === inMsgLive.from_user_name) {\r\n      setMsgLive(inMsgLive);\r\n    }\r\n  }, [inMsgLive, currentChat]);\r\n\r\n  // desplay new message\r\n  useEffect(() => {\r\n    if (inMsg && currentChat === inMsg.from_user_name) {\r\n      setMeassages((prev) => [...prev, inMsg]);\r\n    }\r\n  }, [inMsg, currentChat]);\r\n\r\n  // fetch chat data\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const data = await getChat(props.chat_id);\r\n      setChatData(data);\r\n      setMeassages(data.chat_data);\r\n      setCurrentChat(data.chats_of.with);\r\n      setUserName(data.chats_of.owner);\r\n    }\r\n    fetchData();\r\n  }, [props.chat_id]);\r\n\r\n  // send message\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (msg) {\r\n      socket.current.emit(\"sendMessage\", {\r\n        from_user_name: userName,\r\n        to_user_name: currentChat,\r\n        name: userName,\r\n        message: msg,\r\n        reply: selectedMsg,\r\n        time: new Date(),\r\n      });\r\n      const data = {\r\n        message: msg,\r\n        name: userName,\r\n        reply: selectedMsg,\r\n        time: new Date(),\r\n      };\r\n      updateChat(currentChat, data);\r\n      setMeassages([...messages, data]);\r\n      setMsg(\"\");\r\n      setSelectedMsg(null);\r\n    }\r\n  };\r\n\r\n  // send live typing...\r\n  useEffect(() => {\r\n    const to_user_name = currentChat;\r\n    socket.current.emit(\"sendMsgLive\", {\r\n      from_user_name: userName,\r\n      to_user_name: to_user_name,\r\n      name: to_user_name,\r\n      message: msg,\r\n      reply: selectedMsg,\r\n    });\r\n  }, [msg, currentChat, userName, selectedMsg]);\r\n\r\n  // automatic scroll\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, msgLive]);\r\n\r\n  // set delected message for reply\r\n  const selectMsg = (data) => {\r\n    // console.log(data)\r\n    setSelectedMsg(data);\r\n  };\r\n\r\n  const info = () => {\r\n    console.log(currentChat);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!chatData ? (\r\n        <>\r\n          <span className=\"flex justify-center text-6xl mt-16 text-primary-101 p-3 opacity-50 cursor-default\">\r\n            Loading...\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"fixed w-full z-10 sm:w-96 flex items-center justify-between py-2 px-3 bg-background-801 text-primary-101\">\r\n            <Link\r\n              to={process.env.PUBLIC_URL + \"/inbox/\"}\r\n              className=\" cursor-pointer\"\r\n            >\r\n              <ArrowBackIosNewRoundedIcon />\r\n            </Link>\r\n            <div className=\"relative grid justify-items-center\">\r\n              <h3>{currentChat}</h3>\r\n              {isActive?<div className=\"text-xsm\">online</div>:<></>}\r\n            </div>\r\n            <div onClick={() => info()} className=\"cursor-pointer\">\r\n              <InfoIcon />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"flex-grow pt-16 pb-2 overflow-y-auto\"\r\n            id=\"scrollBottom\"\r\n          >\r\n            {messages.map((val, ind) => {\r\n              return (\r\n                <Message\r\n                  key={ind}\r\n                  last={messages.length === ind + 1}\r\n                  user={userName}\r\n                  data={val}\r\n                  own={userName === val.name}\r\n                  scrollRef={scrollRef}\r\n                  selectMsg={selectMsg}\r\n                />\r\n              );\r\n            })}\r\n            {msgLive.message ? (\r\n              <>\r\n                <Message\r\n                  user={userName}\r\n                  friend={currentChat}\r\n                  data={msgLive}\r\n                  scrollRef={scrollRef}\r\n                />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          {selectedMsg ? (\r\n            <>\r\n              <div className=\"clear-both px-3 py-1 bg-background-301\">\r\n                <div className=\"flex text-sm justify-between text-light-301 opacity-60\">\r\n                  {selectedMsg.name === userName ? \"you\" : selectedMsg.name}\r\n                  <div\r\n                    onClick={() => {\r\n                      setSelectedMsg(null);\r\n                    }}\r\n                    className=\"mr-1\"\r\n                  >\r\n                    <ClearRoundedIcon />\r\n                  </div>\r\n                </div>\r\n                <div className=\"truncate text-sm text-light-101 \">\r\n                  {selectedMsg.message}\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <form\r\n            className=\" bottom-0 sm:static w-full flex \"\r\n            id=\"chats-send-container\"\r\n          >\r\n            <input\r\n              className=\"flex-grow p-2.5\"\r\n              type=\"text\"\r\n              placeholder=\" Message...\"\r\n              value={msg}\r\n              onChange={(e) => setMsg(e.currentTarget.value)}\r\n              id=\"chats-messageInp\"\r\n              onKeyDownCapture={(e) => (e.key === \"Enter\" ? submit(e) : null)}\r\n            />\r\n            <button\r\n              className=\"px-4 border-none rounded-none text-light-101 bg-background-301\"\r\n              id=\"chats-btn\"\r\n              onClick={(e) => {\r\n                submit(e);\r\n              }}\r\n            >\r\n              <SendIcon />\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst getChat = async (chat_id) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL + chat_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    });\r\n    const messages = await res.json();\r\n    //   console.log(messages);\r\n    return messages;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"user not found\");\r\n  }\r\n};\r\n\r\nconst updateChat = async (to_user_name, message) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(SEND_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        to_user_name,\r\n        message,\r\n      }),\r\n    });\r\n    // const result = await res.json();\r\n    // console.log(res);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Friend } from \"./components/Friend\";\r\nimport { ChatWindow } from \"./components/ChatWindow\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/add/chats\";\r\n\r\nexport const Inbox = (props) => {\r\n  const [addFrndInp, setAddFrndInp] = useState(\"\");\r\n  const [actives, setActives] = useState([]);\r\n  const [friends, setFriends] = useState(props.user.chats_id);\r\n  const [inMsg, setInMsg] = useState(null);\r\n\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io(URL);\r\n    socket.current.emit(\"addUser\", {\r\n      user_name: props.user.user_name,\r\n      user_id: props.user._id,\r\n    });\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      setActives(users);\r\n    });\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setInMsg(data);\r\n    });\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    if (inMsg) {\r\n      const arr = friends;\r\n      const i = updateFriends(arr, inMsg);\r\n      setInMsg(null);\r\n      if (i!==-1) {\r\n        setFriends([...friends], friends[i].lastMsg = inMsg);\r\n      }\r\n    }\r\n  }, [inMsg, friends]);\r\n\r\n  const path = window.location.pathname.split(\"/\").slice(2, 4);\r\n\r\n  const [chat_window, setChat_windoe] = useState(\"hidden\");\r\n  const [chat_list, setChat_list] = useState(\"flex\");\r\n  useEffect(() => {\r\n    if (path[0] === \"inbox\" && path[1]) {\r\n      setChat_windoe(\"flex\");\r\n      setChat_list(\"hidden\");\r\n    } else {\r\n      setChat_windoe(\"hidden\");\r\n      setChat_list(\"flex\");\r\n    }\r\n  }, [path]);\r\n\r\n  const addFriend = async (e) => {\r\n    e.preventDefault();\r\n    if (addFrndInp) {\r\n      console.log(addFrndInp);\r\n      const chat = await addChat(addFrndInp);\r\n      if (chat) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n    window.location.reload()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"flex sm:pt-16 h-screen sm:pb-2 justify-center\">\r\n        <div className=\"flex h-full w-auto sm:border-2\">\r\n          <div\r\n            className={\r\n              chat_list +\r\n              \" chat_list z-50 sm:z-0 h-screen sm:h-auto w-screen sm:w-auto bg-background-701 sm:border-r-2 sm:flex flex-col\"\r\n            }\r\n          >\r\n            <div className=\"fixed z-50 w-full font-semibold sm:relative flex justify-between bg-background-801 text-light-101 px-3 py-3\">\r\n              <Link to={process.env.PUBLIC_URL + \"/profile/\"}>\r\n                <div className=\"h-6 w-6 relative rounded-full bg-white\"></div>\r\n              </Link>\r\n              <h3>{props.user.user_name}</h3>\r\n              <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n                <LogoutIcon\r\n                  className=\"cursor-pointer\"\r\n                  onClick={() => logout()}\r\n                />\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"overflow-y-auto w-screen sm:w-60 pt-12 sm:pt-0\">\r\n              {friends ? (\r\n                sortTime(friends).map((val, ind) => {\r\n                  return (\r\n                    <Friend\r\n                      key={val.chat_id}\r\n                      data={val}\r\n                      user_name={props.user.user_name}\r\n                      actives={actives}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div className=\"flex flex-col m-1\">\r\n                <input\r\n                  className=\"rounded-sm\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter friend's user name\"\r\n                  value={addFrndInp}\r\n                  onChange={(e) => setAddFrndInp(e.currentTarget.value)}\r\n                />\r\n                <button\r\n                  className=\"mt-1 bg-background-301 text-light-101\"\r\n                  onClick={(e) => {\r\n                    addFriend(e);\r\n                  }}\r\n                >\r\n                  Add friend\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              chat_window +\r\n              \" sm:flex h-screen sm:h-auto z-50 sm:z-0 flex-col w-screen sm:w-96 bg-background-701\"\r\n            }\r\n          >\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path={process.env.PUBLIC_URL + \"/inbox/\"}\r\n                render={() => {\r\n                  return (\r\n                    <>\r\n                      <span className=\"flex justify-center text-6xl mt-16 text-primary-101 p-3 opacity-50 cursor-default\">\r\n                        open a chat\r\n                      </span>\r\n                    </>\r\n                  );\r\n                }}\r\n              />\r\n              <Route\r\n                exact\r\n                path={process.env.PUBLIC_URL + \"/inbox/:id\"}\r\n                render={(props) => {\r\n                  return (\r\n                    <>\r\n                      <ChatWindow chat_id={props.match.params.id} />\r\n                    </>\r\n                  );\r\n                }}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst addChat = async (chat_id) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: chat_id,\r\n      }),\r\n    });\r\n    const messages = await res.json();\r\n    return messages;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"user not found\");\r\n  }\r\n};\r\n\r\nconst sortTime = (chats_id) => {\r\n  const chats = chats_id;\r\n  chats.sort((a, b) => {\r\n    if (a.lastMsg && b.lastMsg) {\r\n      return a.lastMsg.time < b.lastMsg.time\r\n        ? 1\r\n        : b.lastMsg.time < a.lastMsg.time\r\n        ? -1\r\n        : 0;\r\n    } else if (a.lastMsg && !b.lastMsg) {\r\n      return -1;\r\n    } else if (!a.lastMsg && b.lastMsg) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n  return chats;\r\n};\r\n\r\nconst updateFriends = (friends, message) => {\r\n  for (let i = 0; i < friends.length; i++) {\r\n    if (friends[i].to_user_name === message.from_user_name) {\r\n      // friends[i].lastMsg = message;\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n  // console.log(friends);\r\n  // return friends;\r\n};\r\n\r\n// inMsg format\r\n// {\r\n//   from_user_name: \"test\",\r\n//   to_user_name: \"mukul\",\r\n//   message: \"rendom msg from test\",\r\n//   name: \"test\",\r\n//   reply: null,\r\n//   time: \"2021-10-04T11:54:59.450Z\",\r\n// }\r\n","import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <>\r\n            <section className=\"grid justify-center h-screen bg-background-101\">\r\n                <div className=\"text-4xl text-light-101\">\r\n                    Loading...\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Header } from \"../components/Header\";\r\nimport { Profile } from \"../containers/profile/Profile\";\r\nimport { Home } from \"../containers/home/Home\";\r\nimport { AddLinks } from \"../containers/addLink/AddLink\";\r\nimport { Inbox } from \"../containers/inbox/Inbox\";\r\nimport { Loading } from \"../components/Loading\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/\";\r\nexport default class LoginRouter extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n    status: null,\r\n  };\r\n  async componentDidMount() {\r\n    const token = this.props.token;\r\n    if (token) {\r\n      // Fetch data for home page\r\n      try {\r\n        const res = await fetch(URL, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"*/*\",\r\n            Authorization: token,\r\n          },\r\n        });\r\n        const data = await res.json();\r\n        this.setState({\r\n          data: data,\r\n          loading: false,\r\n          status: res.status,\r\n        });\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            {this.state.status === 200 ? (\r\n              <UserFound data={this.state.data} token={this.props.token} />\r\n            ) : (\r\n              <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserFound = (props) => {\r\n  const data = props.data;\r\n  return (\r\n    <>\r\n      <Header user_name={data.user.user_name} className=\"z-10\" />\r\n      <section className=\"grid justify-center align-middle h-full bg-background-101\">\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/\"}\r\n          render={() => {\r\n            return (\r\n              <>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Home data={data} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/links/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <AddLinks data={data} token={props.token} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/profile/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Profile user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    path={process.env.PUBLIC_URL + \"/inbox/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Inbox user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                </Switch>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginRouter from \"./LoginRouter\";\r\n\r\nexport const MainRouter = () => {\r\n  const token = Cookies.get(\"token\");\r\n\r\n  return (\r\n    <>\r\n      {token ? (\r\n        <>\r\n          <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n          <LoginRouter token={token} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/signin\";\r\n\r\nexport default class Signin extends React.Component {\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    user_name: \"\",\r\n    password: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: this.state.user_name,\r\n        password: this.state.password,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      const token = \"Bearer \" + data.token;\r\n      await Cookies.set(\"token\", token);\r\n      this.setState({ username: \"\", password: \"\", islogin: true });\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n      this.setState({ user_name: \"\", password: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"w-screen min-h-screen flex justify-center items-center text-light-101 bg-background-101\">\r\n              <div className=\"flex items-center w-56 flex-col\">\r\n                <h2 className=\"mb-2 font-medium\">Log In</h2>\r\n                <div className=\"grid gap-2 w-full bg-background-201 text-dark-901 px-3 py-6 rounded-md shadow-xl\">\r\n                  <div className=\"w-full\">\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-light-201\"\r\n                      type=\"text\"\r\n                      placeholder=\" username\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-light-201\"\r\n                      type=\"password\"\r\n                      placeholder=\" Password\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.submit(e) : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <button className=\"w-full mt-4 p-0 bg-background-401 text-light-101\"\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Log In\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-light-101 mt-4\">\r\n                  {\"Don't have an account?? \"}\r\n                  <Link\r\n                    className=\"hover:text-blue-800 font-medium\"\r\n                    to={process.env.PUBLIC_URL + \"/signup/\"}\r\n                  >\r\n                    Sign Up\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/signup\";\r\n\r\nexport default class Signup extends React.Component {\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    name: \"\",\r\n    user_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        user_name: this.state.user_name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        phone: this.state.phone,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      alert(\"account created please login\");\r\n      this.setState({\r\n        name: \"\",\r\n        user_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        phone: 0,\r\n        islogin: true,\r\n      });\r\n    } else {\r\n      alert(data.error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"w-screen min-h-screen flex justify-center items-center text-light-101 bg-background-101\">\r\n              <div className=\"flex items-center w-56 flex-col\">\r\n                <h2 className=\"mb-2 font-medium\">Sign Up</h2>\r\n                <div className=\"grid gap-2 w-full bg-background-201 text-dark-901 px-3 py-6 rounded-md shadow-xl\">\r\n                  <div className=\"w-full\">\r\n                    <label className=\"text-xs text-light-201\" htmlFor=\"name\">\r\n                      Name\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"text\"\r\n                      placeholder=\" Alpha\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.setState({ name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <label\r\n                      className=\"text-xs text-light-201\"\r\n                      htmlFor=\"user_name\"\r\n                    >\r\n                      User Name\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"text\"\r\n                      placeholder=\" alpha\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <label\r\n                      className=\"text-xs text-light-201\"\r\n                      htmlFor=\"user_name\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"text\"\r\n                      placeholder=\" example@alpha.in\"\r\n                      value={this.state.email}\r\n                      onChange={(e) => {\r\n                        this.setState({ email: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <label\r\n                      className=\"text-xs text-light-201\"\r\n                      htmlFor=\"password\"\r\n                    >\r\n                      Password\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"text\"\r\n                      placeholder=\" Password\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <label className=\"text-xs text-light-201\" htmlFor=\"phone\">\r\n                      Phone No\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"number\"\r\n                      placeholder=\" 123...\"\r\n                      value={this.state.phone}\r\n                      onChange={(e) => {\r\n                        this.setState({ phone: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <button\r\n                      className=\"w-full mt-4 p-0 bg-background-401 text-light-101\"\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Signup\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-light-101 mt-4\">\r\n                  {\"Already have an account?? \"}\r\n                  <Link\r\n                    className=\"hover:text-blue-800 font-medium\"\r\n                    to={process.env.PUBLIC_URL + \"/signin/\"}\r\n                  >\r\n                    Log In\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\r\nimport \"../../script/link_page\"\r\n\r\n\r\nexport const LinkPage = (props) => {\r\n    const data = props.data;\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n                <header>\r\n                    <nav>\r\n                        <div>\r\n                            <h1>BTech 20</h1>\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            <div id=\"time\"></div>\r\n                            <div id=\"date\"></div>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n                <section className=\"body\">\r\n                    <div className=\"color_code\">\r\n                        <h5 className=\"live\">Running...</h5>\r\n                        <h5 className=\"leftToday\">Left</h5>\r\n                        <h5 className=\"today_class\">Todays Class</h5>\r\n                        <h5 className=\"status\">Not for Today</h5>\r\n                    </div>\r\n                    <h2>Semester 3</h2>\r\n\r\n                    <h2 className=\"running\">No Class is Running Now </h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2 className=\"today\">No Classes are Left Today</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide2\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2>All Class Timing and Link</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"course status\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CourseCard = (props) => {\r\n    return (<>\r\n        <div className={props.class}>\r\n            <h3>{props.data.course}</h3>\r\n            {\r\n                props.data.time.map((val, ind) => {\r\n                    return (\r\n                        <Timing\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst Timing = (props) => {\r\n    return (\r\n        <>\r\n            <h4 className=\"time\">{props.data.time}</h4>\r\n            {\r\n                props.data.section.map((val, ind) => {\r\n                    return (\r\n                        <ClassLink\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst ClassLink = (props) => {\r\n    return (<>\r\n        <h5>\r\n            <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n        </h5>\r\n    </>)\r\n}\r\n","import \"../../script/link_page\"\r\n\r\nexport const PublicPage = (props) => {\r\n    const data = props.data;\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n\r\n                <section className=\"body\">\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <Card\r\n                                        key={ind}\r\n                                        data={val}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Card = (props) => {\r\n    return (<>\r\n        <div className=\"status course\">\r\n            <a href={props.data.link} target=\"blank\">{props.data.title}</a>\r\n        </div>\r\n    </>)\r\n}","import React from \"react\";\r\nimport { LinkPage } from \"./LinkPage\";\r\nimport { PublicPage } from \"../public/PublicPage\";\r\nimport { Loading } from \"../../components/Loading\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/link/\";\r\nexport default class LinkWebsite extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await fetch(URL + this.props.id);\r\n    if (res.status === 404) {\r\n      this.setState({ loading: false });\r\n    } else {\r\n      const data = await res.json();\r\n      this.setState({ data: data, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            {this.state.data ? (\r\n              <>\r\n                {this.props.id !== \"btech20\" ? (\r\n                  <div className=\"min-h-screen bg-background-101\">\r\n                    <PublicPage data={this.state.data} />\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"min-h-screen bg-background-401\">\r\n                    <LinkPage data={this.state.data} />\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <section className=\"main_body\">\r\n                  <h2>Page not found</h2>\r\n                </section>\r\n                {/* <Redirect to=\"/\" /> */}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\r\nimport \"./style/link_page.css\";\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { MainRouter } from \"./routes/MainRouter\";\r\nimport Signin from \"./containers/auth/Signin\";\r\nimport Signup from \"./containers/auth/Signup\";\r\nimport LinkWebsite from \"./containers/public/LinkWebsite\";\r\n\r\nexport const App = () => {\r\n  let querry = window.location.search.split(\"?\").slice(1, 2).join();\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {querry ? <Redirect to={process.env.PUBLIC_URL + querry} /> : <></>}\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signin/\"}\r\n            component={Signin}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signup/\"}\r\n            component={Signup}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/page/:id\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite id={props.match.params.id} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <MainRouter path={process.env.PUBLIC_URL + \"/\"} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// /*\r\n\r\nconst script = () => {\r\n  let months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  let currentDate = new Date();\r\n  let day = currentDate.getDay();\r\n  let hour = currentDate.getHours();\r\n  if (hour.toString().length < 2) {\r\n    hour = \"0\" + hour;\r\n  }\r\n\r\n  let minute = currentDate.getMinutes();\r\n  if (minute.toString().length < 2) {\r\n    minute = \"0\" + minute;\r\n  }\r\n\r\n  let second = currentDate.getSeconds();\r\n  if (second.toString().length < 2) {\r\n    second = \"0\" + second;\r\n  }\r\n\r\n  let date = currentDate.getDate();\r\n  if (date.toString().length < 2) {\r\n    date = \"0\" + date;\r\n  }\r\n\r\n  let month = currentDate.getMonth();\r\n\r\n  // let year = currentDate.getFullYear();\r\n\r\n  let time = hour + \":\" + minute;\r\n\r\n  let courses = document.querySelectorAll(\"#link-page .course\");\r\n\r\n  let liveClasses = document.querySelectorAll(\"#link-page .hide\");\r\n\r\n  let todayClasses = document.querySelectorAll(\"#link-page .hide2\");\r\n\r\n  courses.forEach((val, i) => {\r\n    // console.log(val)\r\n    val.innerText.split(\"\\n\").forEach((val, temp) => {\r\n      if (val[val.length - 3] === \":\") {\r\n        let classTimes = val.split(\",\");\r\n        classTimes.forEach((value, ind) => {\r\n          let classTime = value.split(\" \");\r\n          if (\r\n            time < classTime[classTime.length - 3] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".today\")[0].innerHTML =\r\n              \"Today's Classes Left\";\r\n            todayClasses[i].setAttribute(\"class\", \"course leftToday\");\r\n          }\r\n          if (\r\n            time >= classTime[classTime.length - 3] &&\r\n            time < classTime[classTime.length - 1] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".running\")[0].innerHTML =\r\n              \"Classes Running...\";\r\n            liveClasses[i].setAttribute(\"class\", \"course live\");\r\n          }\r\n          if (classTime.indexOf(days[day]) !== -1) {\r\n            courses[i].setAttribute(\"class\", \"course today_class\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const timer = setInterval(() => {\r\n    currentDate = new Date();\r\n    day = currentDate.getDay();\r\n    hour = currentDate.getHours();\r\n    if (hour.toString().length < 2) {\r\n      hour = \"0\" + hour;\r\n    }\r\n\r\n    minute = currentDate.getMinutes();\r\n    if (minute.toString().length < 2) {\r\n      minute = \"0\" + minute;\r\n    }\r\n\r\n    second = currentDate.getSeconds();\r\n    if (second.toString().length < 2) {\r\n      second = \"0\" + second;\r\n    }\r\n    try {\r\n      document.getElementById(\"time\").innerText =\r\n        hour + \":\" + minute + \":\" + second;\r\n      document.getElementById(\"date\").innerText =\r\n        days[day] + \", \" + months[month] + \" \" + date;\r\n    } catch {\r\n      //   console.log(\"timer timer\")\r\n      clearInterval(timer);\r\n    }\r\n\r\n    if (\r\n      (minute.toString() === \"00\" || minute.toString() === \"30\") &&\r\n      second.toString() === \"00\"\r\n    ) {\r\n      window.location.reload();\r\n    }\r\n  }, 1000);\r\n\r\n  // console.log(\"hello\")\r\n};\r\n\r\n\r\nconst start = setInterval(() => {\r\n  const load = document.getElementById(\"time\");\r\n  if (load) {\r\n    script();\r\n    clearInterval(start)\r\n  }\r\n}, 100);\r\n\r\n\r\n// */"],"sourceRoot":""}