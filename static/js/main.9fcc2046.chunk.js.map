{"version":3,"sources":["containers/Header.js","containers/Profile.js","containers/Home.js","containers/AddData.js","containers/Inbox.js","routes/LoginRouter.js","routes/MainRouter.js","containers/auth/Signin.js","containers/auth/Signup.js","containers/LinkPage.js","containers/PublicPage.js","containers/LinkWebsite.js","containers/Test.js","App.js","reportWebVitals.js","index.js","script/link_page.js"],"names":["Header","props","useState","navToggle","setNavToggle","navToggler","className","to","onClick","id","process","params","data","user_name","Profile","user","name","email","phone","Cookies","remove","Home","user_data","href","firstRun","initLinks","AddData","links","setLinks","useEffect","update","addLink","title","link","newLink","target","onDelete","filter","e","a","token","get","fetch","method","headers","Accept","Authorization","body","JSON","stringify","console","log","alert","Links","length","map","ind","OneLink","AddLink","setTitle","setLink","onSubmit","preventDefault","htmlFor","type","value","onChange","Inbox","msg","setMsg","currentChat","setCurrentChat","addFrndInp","setAddFrndInp","inMsg","setInMsg","from_user_name","message","inMsgLive","setInMsgLive","messages","setMeassages","socket","useRef","scrollRef","current","io","on","time","to_user_name","emit","prev","users","scrollIntoView","behavior","chat_window","setChat_windoe","chat_list","setChat_list","openChat","getChat","addFriend","window","location","reload","chats_id","val","placeholder","currentTarget","submit","Date","updateChat","back","Message","classes","classes2","own","ref","format","ChatWindow","friend","onKeyDownCapture","key","chat_id","res","json","Friend","LoginRouter","state","loading","status","this","setState","React","Component","UserFound","path","render","exact","MainRouter","URL","Signin","islogin","password","set","username","error","Signup","LinkPage","class","CourseCard","course","Timing","section","ClassLink","PublicPage","Card","LinkWebsite","Test","App","querry","search","split","slice","join","component","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","start","setInterval","months","days","currentDate","day","getDay","hour","getHours","toString","minute","getMinutes","second","getSeconds","date","getDate","month","getMonth","courses","querySelectorAll","liveClasses","todayClasses","forEach","i","innerText","temp","classTime","indexOf","innerHTML","setAttribute","timer","clearInterval","script"],"mappings":"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","file":"static/js/main.9fcc2046.chunk.js","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { IconName } from \"react-icons/vsc\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nexport const Header = (props) => {\r\n\r\n  const [navToggle, setNavToggle] = useState(\"hidden\");\r\n  const navToggler = () =>{\r\n    if (navToggle === \"\") {\r\n      setNavToggle(\"hidden\");\r\n      // console.log(navToggle)\r\n    }\r\n    else{\r\n      // console.log(navToggle, \"else\")\r\n      setNavToggle(\"\");\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n        <nav className={ props.className + \" fixed top-0 w-full flex items-center bg-mukul-400 p-2 flex-wrap\"}>\r\n          <NavLink to=\"#\" className=\"px-2 mr-4 inline-flex items-center\">\r\n            <span className=\"text-xl text-white font-bold uppercase tracking-wide\" data-target=\"#navigation\">Alpha</span>\r\n          </NavLink>\r\n          <button className=\"nav-toggler text-white inline-flex p-2 hover:bg-gray-900 lg:hidden ml-auto\" onClick={()=>navToggler()}>\r\n            <MenuIcon />\r\n          </button>\r\n          <div className={navToggle+\" top-nav w-full lg:inline-flex lg:flex-grow lg:w-auto\"} id=\"navigation\"  onClick={()=>navToggler()}>\r\n            <div className=\"lg:inline-flex lg:flex-row lg:ml-auto flex flex-col\">\r\n              <NavLink to={process.env.PUBLIC_URL + \"/\"} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\">\r\n                <span>Home</span>\r\n              </NavLink>\r\n              <NavLink  to={process.env.PUBLIC_URL + \"/inbox/\"} params={{ data: props.user_name }} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\">\r\n                <span>Inbox</span>\r\n              </NavLink>\r\n              <NavLink to={process.env.PUBLIC_URL + \"/profile/\"} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\">\r\n                <span>{props.user_name}</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    </>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const Profile = (props) => {\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n  };\r\n  const user = props.user;\r\n  // console.log(user);\r\n  return (\r\n    <>\r\n      <div className=\"mt-16\">\r\n        <h1> Login Successful </h1>\r\n        <h4>Name : {user.name}</h4>\r\n        <h4>User Name : {user.user_name}</h4>\r\n        <h4>email : {user.email}</h4>\r\n        <h4>Phone No : {user.phone}</h4>\r\n      </div>\r\n      <Link to={process.env.PUBLIC_URL+\"/\"}>\r\n        <button\r\n          onClick={() => {\r\n            logout();\r\n          }}\r\n        >\r\n          Log out\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { Route, Switch} from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\n// import { Header } from \"./Header\";\r\n// import \"../style/header.css\";\r\n// import { LinkPage } from \"./LinkPage\";\r\n// import \"../style/home.css\";\r\n// import { Profile } from \"./Profile\";\r\n\r\n\r\nexport const Home = (props) => {\r\n  const user = props.data.user;\r\n  const data = props.data.user_data;\r\n  // console.log(data)\r\n  return (<div>\r\n\r\n    <div className=\"mt-16\">\r\n      <h1>Hello {user.name}</h1>\r\n      <h2> Welcome to the Website Alpha</h2>\r\n    </div>\r\n    <div>\r\n      {data.data[0] ?\r\n      <>\r\n      <p>Your link is available <a href={process.env.PUBLIC_URL+\"/page/\"+data.user_name}>Here</a></p>\r\n      <Link to={process.env.PUBLIC_URL+\"/add_data/\"} params={{data: data}} ><button>Add Links</button></Link>\r\n      </>\r\n      :\r\n      <>\r\n      <p>You have not saved anything yet</p>\r\n      <Link to={process.env.PUBLIC_URL+\"/add_data/\"} params={{data: data}} ><button>Add Links</button></Link>\r\n      </>}\r\n    </div>\r\n  </div>)\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst UPDATE_URL = process.env.REACT_APP_SERVER + \"/update/link\";\r\n\r\n// console.log(UPDATE_URL)\r\n// console.log(process.env.PUBLIC_URL)\r\n\r\nlet firstRun = true;\r\nlet initLinks = [];\r\n\r\nexport const AddData = (props) => {\r\n  // console.log(props.data.user_data.user_name)\r\n\r\n  // let initLinks = props.data.user_data.data;\r\n\r\n  if (firstRun) {\r\n    // console.log(\"first run\")\r\n    initLinks = props.data.user_data.data;\r\n    firstRun = false;\r\n  }\r\n\r\n  const onDelete = (link) => {\r\n    // console.log(\"deleting the link \");\r\n    setLinks(\r\n      links.filter((e) => {\r\n        return e !== link;\r\n      })\r\n    );\r\n  };\r\n\r\n  const addLink = (title, link) => {\r\n    const newLink = {\r\n      title: title,\r\n      link: link,\r\n    };\r\n    setLinks([...links, newLink]);\r\n    // console.log(newLink)\r\n  };\r\n\r\n  const [links, setLinks] = useState(initLinks);\r\n\r\n  useEffect(() => {\r\n    update(links);\r\n    initLinks = links;\r\n  }, [links]);\r\n\r\n  return (\r\n    <div className=\"mt-16 grid justify-center justify-items-center\">\r\n      <AddLink addLink={addLink} />\r\n      <h3>\r\n        Your link is available on{\" \"}\r\n        <a\r\n          href={\r\n            process.env.PUBLIC_URL + \"/page/\" + props.data.user_data.user_name\r\n          }\r\n          target=\"blank\"\r\n        >\r\n          {process.env.PUBLIC_URL + \"/page/\" + props.data.user_data.user_name}\r\n        </a>\r\n      </h3>\r\n      <Links links={links} onDelete={onDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst update = async (links) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(UPDATE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        // public\r\n        data: links,\r\n      }),\r\n    });\r\n    // const user_data = await res.json();\r\n    // console.log(user_data.data);\r\n    // return user_data.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nconst Links = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"grid justify-center justify-items-center\">\r\n        <h3>Your Links</h3>\r\n        {props.links.length === 0\r\n          ? \"No links to display\"\r\n          : props.links.map((link, ind) => {\r\n              return (\r\n                <OneLink key={ind} link={link} onDelete={props.onDelete} />\r\n              );\r\n            })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst OneLink = ({ link, onDelete }) => {\r\n  return (\r\n    <>\r\n      <div className=\"grid justify-items-center pt-5\">\r\n        <div className=\"flex flex-wrap\">\r\n          <h3 className=\"mx-2\">{link.title}</h3>\r\n          <button\r\n            onClick={() => {\r\n              onDelete(link);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <a href={link.link} target=\"blank\">\r\n            {link.link}\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddLink = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !link) {\r\n      alert(\"Title or Link cannot be blank\");\r\n    } else {\r\n      props.addLink(title, link);\r\n      setTitle(\"\");\r\n      setLink(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form className=\"form\" onSubmit={submit}>\r\n          <h2>Add a Link</h2>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link</label>\r\n            <input\r\n              type=\"text\"\r\n              value={link}\r\n              onChange={(e) => {\r\n                setLink(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Add Link</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\n\r\n{\"data\": [{\"title\": \"hello\",\r\n    \"link\": \"hello.com\"\r\n},\r\n{\"title\": \"hello2\",\r\n    \"link\": \"hello2.com\"\r\n}\r\n],\r\n\"public\" : true\r\n}\r\n\r\n\r\n*/\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport ArrowBackIosNewRoundedIcon from \"@mui/icons-material/ArrowBackIosNewRounded\";\r\nimport { format } from \"timeago.js\";\r\n// import TimeAgo from \"timeago-react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { io } from \"socket.io-client\";\r\n// import { animateScroll } from 'react-scroll'\r\n\r\n// import \"../style/chats.css\";\r\nimport \"../script/chats\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/add/chats\";\r\nconst SEND_URL = process.env.REACT_APP_SERVER + \"/update/chat\";\r\n// console.log(URL)\r\n\r\nexport const Inbox = (props) => {\r\n  // console.log(props.user.chats_id);\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [addFrndInp, setAddFrndInp] = useState(\"\");\r\n  const [inMsg, setInMsg] = useState(null);\r\n  const [inMsgLive, setInMsgLive] = useState({from_user_name: \"\", message: \"\"});\r\n  const [messages, setMeassages] = useState([]);\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io(URL);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setInMsg({\r\n        message: data.message,\r\n        name: data.from_user_name,\r\n        time: data.time,\r\n      });\r\n      setInMsgLive({from_user_name: \"\", message: \"\"});\r\n    });\r\n    socket.current.on(\"getMsgLive\", (data) => {\r\n      setInMsgLive(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const to_user_name = currentChat;\r\n    // console.log(to_user_name)\r\n    socket.current.emit(\"sendMsgLive\", {\r\n      from_user_name: props.user.user_name,\r\n      to_user_name: to_user_name,\r\n      message: msg,\r\n    });\r\n  }, [msg, currentChat, props.user.user_name]);\r\n\r\n  useEffect(() => {\r\n    if (inMsg && currentChat === inMsg.name) {\r\n      setMeassages((prev) => [...prev, inMsg]);\r\n    }\r\n  }, [inMsg, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", props.user.user_name);\r\n    // console.log(socket)\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      // console.log(users);\r\n    });\r\n  }, [props.user]);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (msg) {\r\n      const to_user_name = currentChat;\r\n      socket.current.emit(\"sendMessage\", {\r\n        from_user_name: props.user.user_name,\r\n        to_user_name: to_user_name,\r\n        message: msg,\r\n        time: new Date(),\r\n      });\r\n\r\n      const data = {\r\n        message: msg,\r\n        name: props.user.user_name,\r\n        time: new Date(),\r\n      };\r\n      updateChat(currentChat, data);\r\n      setMeassages([...messages, data]);\r\n      setMsg(\"\");\r\n      // console.log(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, inMsgLive]);\r\n\r\n  const [chat_window, setChat_windoe] = useState(\"hidden\");\r\n  const [chat_list, setChat_list] = useState(\"flex\");\r\n  const openChat = async (user_name) => {\r\n    const messages = await getChat(user_name);\r\n    setCurrentChat(user_name);\r\n    setChat_windoe(\"flex\");\r\n    setChat_list(\"hidden\");\r\n    setMeassages(messages);\r\n  };\r\n  const back = () => {\r\n    // console.log(\"i am back\")\r\n    setChat_windoe(\"hidden\");\r\n    setChat_list(\"flex\");\r\n  };\r\n\r\n  const addFriend = async (e) => {\r\n    e.preventDefault();\r\n    if (addFrndInp) {\r\n      console.log(addFrndInp);\r\n      const chat = await getChat(addFrndInp);\r\n      if (chat) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"flex sm:pt-16 h-screen justify-center\">\r\n        <div className=\"flex h-full sm:border-2 rounded-lg\">\r\n          <div\r\n            className={\r\n              chat_list +\r\n              \" chat_list mt-16 sm:mt-0 w-screen sm:w-auto bg-gray-500 sm:flex flex-col\"\r\n            }\r\n          >\r\n            <div className=\"grid justify-center bg-gray-700 text-white px-1 py-3\">\r\n              <h2>{props.user.user_name}</h2>\r\n            </div>\r\n            <div className=\"overflow-y-auto\">\r\n              {props.user.chats_id.map((val, ind) => {\r\n                return <Friend key={ind} data={val} openChat={openChat} />;\r\n              })}\r\n              <div className=\"flex flex-col m-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter friend's user name\"\r\n                  value={addFrndInp}\r\n                  onChange={(e) => setAddFrndInp(e.currentTarget.value)}\r\n                />\r\n                <button\r\n                  className=\"m-1\"\r\n                  onClick={(e) => {\r\n                    addFriend(e);\r\n                  }}\r\n                >\r\n                  Add friend\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              chat_window +\r\n              \" sm:flex h-screen sm:h-auto z-50 sm:z-0 flex-col w-screen sm:w-96 bg-blue-600\"\r\n            }\r\n          >\r\n            {currentChat ? (\r\n              <>\r\n                <ChatWindow\r\n                  currentChat={currentChat}\r\n                  messages={messages}\r\n                  scrollRef={scrollRef}\r\n                  user={props.user.user_name}\r\n                  msg={msg}\r\n                  setMsg={setMsg}\r\n                  submit={submit}\r\n                  back={back}\r\n                  inMsgLive={inMsgLive}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"flex justify-center text-6xl mt-16 text-white p-3 opacity-50 cursor-default\">\r\n                  open a chat\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Message = (props) => {\r\n  let name = \"\";\r\n  let classes = \"middle\";\r\n  let classes2 = \"\";\r\n  if (props.data) {\r\n    name = props.own ? \"\" : props.data.name;\r\n    classes = props.own ? \"float-right clear-both\" : \"float-left clear-both\";\r\n    classes2 = props.own ? \"bg-gray-300\" : \"bg-white\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.data ? (\r\n        <div ref={props.scrollRef} className={\"message_box \" + classes}>\r\n          <label className=\"text-xs text-white opacity-40\">{name}</label>\r\n          <div\r\n            className={\"overflow-x-hidden px-3.5 py-1.5 rounded-xl \" + classes2}\r\n          >\r\n            {props.data.message}\r\n            <br />\r\n            {/* <TimeAgo date={props.data.time} /> */}\r\n          </div>\r\n          <p\r\n            className={\r\n              props.own\r\n                ? \"justify-end flex text-xs p-0 m-0\"\r\n                : \"justify-start flex text-xsm p-0 m-0\"\r\n            }\r\n          >\r\n            <span className=\"text-white opacity-80\">\r\n              {props.data.time ? format(props.data.time) : \"\"}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div ref={props.scrollRef} className={\"message_box float-left clear-both\"}>\r\n          <label className=\"text-xs text-white opacity-40\">{props.inMsgLive.from_user_name}</label>\r\n          <div\r\n            className={\"overflow-x-hidden px-3.5 py-1.5 rounded-xl bg-gray-200\"}\r\n          >\r\n            {props.inMsgLive.message}\r\n            <br />\r\n            {/* <TimeAgo date={props.data.time} /> */}\r\n          </div>\r\n          <p\r\n            className={\r\n              props.own\r\n                ? \"justify-end flex text-xs p-0 m-0\"\r\n                : \"justify-start flex text-xsm p-0 m-0\"\r\n            }\r\n          >\r\n            <span className=\"text-white opacity-80\">\r\n              {props.inMsgLive ? \"typing...\" : \"\"}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChatWindow = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"fixed w-full z-10 sm:w-96 flex justify-center p-3 bg-gray-700 text-white\">\r\n        <div\r\n          onClick={() => {\r\n            props.back();\r\n          }}\r\n          className=\"sm:hidden absolute left-3 text-white cursor-pointer\"\r\n        >\r\n          <ArrowBackIosNewRoundedIcon />\r\n        </div>\r\n        <h2>{props.currentChat}</h2>\r\n      </div>\r\n      <div className=\"flex-grow pt-16 overflow-y-auto\" id=\"scrollBottom\">\r\n        {props.messages.map((val, ind) => {\r\n          return (\r\n            //   <div>\r\n            <Message\r\n              key={ind}\r\n              user={props.user}\r\n              data={val}\r\n              own={props.user === val.name}\r\n              scrollRef={props.scrollRef}\r\n            />\r\n            //   </div>\r\n          );\r\n        })}\r\n        {props.inMsgLive.from_user_name === props.currentChat && props.inMsgLive.message ? (\r\n          <>\r\n            <Message\r\n              friend={props.currentChat}\r\n              inMsgLive={props.inMsgLive}\r\n              scrollRef={props.scrollRef}\r\n            />\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <form className=\"flex h-12\" id=\"chats-send-container\">\r\n        <input\r\n          className=\"flex-grow p-2.5\"\r\n          type=\"text\"\r\n          placeholder=\" Message...\"\r\n          value={props.msg}\r\n          onChange={(e) => props.setMsg(e.currentTarget.value)}\r\n          id=\"chats-messageInp\"\r\n          onKeyDownCapture={(e) => (e.key === \"Enter\" ? props.submit(e) : null)}\r\n        />\r\n        <button\r\n          className=\"px-4 border-none rounded-none\"\r\n          id=\"chats-btn\"\r\n          onClick={(e) => {\r\n            props.submit(e);\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst updateChat = async (to_user_name, message) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(SEND_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        to_user_name,\r\n        message,\r\n      }),\r\n    });\r\n    // const result = await res.json();\r\n    // console.log(res);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nconst getChat = async (chat_id) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: chat_id,\r\n      }),\r\n    });\r\n    const messages = await res.json();\r\n    // console.log(messages);\r\n    return messages;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"user not found\");\r\n  }\r\n};\r\n\r\nconst Friend = (props) => {\r\n  // console.log(props.data.to_user_name);\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          props.openChat(props.data.to_user_name);\r\n        }}\r\n      >\r\n        <div className=\"flex sm:justify-center cursor-pointer mt-0.5 px-4 py-2 bg-gray-300\">\r\n          <h3>{props.data.to_user_name}</h3>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport { Header } from \"../containers/Header\";\r\n// import \"../style/header.css\";\r\n// import \"../style/home.css\";\r\nimport { Profile } from \"../containers/Profile\";\r\nimport { Home } from \"../containers/Home\";\r\nimport { AddData } from \"../containers/AddData\";\r\nimport { Inbox } from \"../containers/Inbox\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/\";\r\n// console.log(URL)\r\nexport default class LoginRouter extends React.Component {\r\n  // const token = \"Bearer \" + props.route.params.token;\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n    status: null,\r\n  };\r\n\r\n  // logout = () => {\r\n  //   Cookies.remove(\"token\");\r\n  // };\r\n  async componentDidMount() {\r\n    const token = this.props.token;\r\n    if (token) {\r\n      // Fetch data for home page\r\n      const res = await fetch(URL, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"*/*\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      const data = await res.json();\r\n      this.setState({\r\n        data: data,\r\n        loading: false,\r\n        status: res.status,\r\n      });\r\n      // console.log(res.status);\r\n      // console.log(data);\r\n      // console.log(this.state.user);\r\n      // console.log(this.state.data);\r\n      // Cookies.remove(\"token\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.data)\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <section className=\"main_body\"> Loading... </section>\r\n        ) : (\r\n          <>\r\n            {this.state.status === 200 ? (\r\n              <UserFound data={this.state.data} token={this.props.token} />\r\n              ) : (\r\n              <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserFound = (props) => {\r\n  // console.log(props);\r\n  const data = props.data;\r\n  return (\r\n    <>\r\n      <Header user_name={data.user.user_name} className=\"z-10\" />\r\n      <section className=\"grid justify-center align-middle h-full bg-mukul-100\">\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/\"}\r\n          render={() => {\r\n            return (\r\n              <>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Home data={data} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/add_data/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <AddData data={data} token={props.token} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/profile/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Profile user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    path={process.env.PUBLIC_URL + \"/inbox/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Inbox user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  {/* <Route exact path=\"/inbox\" component={Inbox} /> */}\r\n                </Switch>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React, {} from \"react\";\r\nimport { Redirect} from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginRouter from \"./LoginRouter\";\r\n\r\n\r\nexport const MainRouter = () =>{\r\n    const token = Cookies.get(\"token\");\r\n    \r\n\r\n    return(<> \r\n        {token ? \r\n        <>\r\n        <Redirect to={process.env.PUBLIC_URL+\"/inbox/\"} />\r\n        <LoginRouter token={token}/> \r\n        </>\r\n        :\r\n        <>\r\n        <Redirect to={process.env.PUBLIC_URL+\"/signin/\"} />\r\n        </>\r\n        }\r\n    </>)\r\n}","import React from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\n// const cookies = require(\"js-cookie\");\r\n\r\n// import \"fetch\"\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/signin\";\r\n// console.log(URL)\r\n\r\nexport default class Signin extends React.Component {\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    user_name: \"\",\r\n    password: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: this.state.user_name,\r\n        password: this.state.password,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      const token = \"Bearer \" + data.token;\r\n      await Cookies.set(\"token\", token);\r\n      this.setState({ username: \"\", password: \"\", islogin: true });\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n      this.setState({ user_name: \"\", password: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"main_body\">\r\n              <div className=\"form\">\r\n                <h2 className=\"form-heading\">Login</h2>\r\n                <div className=\"signin-form\">\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.submit(e) : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <button\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <Link\r\n                  className=\"form-link\"\r\n                  to={process.env.PUBLIC_URL + \"/signup/\"}\r\n                >\r\n                  Click to make an account\r\n                </Link>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\n// import Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n// const cookies = require(\"js-cookie\");\r\n\r\n// import \"fetch\"\r\nconst URL = process.env.REACT_APP_SERVER+\"/signup\";\r\n\r\nexport default class Signup extends React.Component {\r\n  // const token = \"Bearer \" + props.route.params.token;\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    name: \"\",\r\n    user_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // // Fetch data for home page\r\n      // method: \"GET\",\r\n      // headers: {\r\n      //   Accept: \"*/*\",\r\n      //   Authorization: token,\r\n      // },\r\n\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        user_name: this.state.user_name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        phone: this.state.phone,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      // const token = \"Bearer \" + data.token;\r\n      //   await Cookies.set(\"token\", token);\r\n      alert(\"account created please login\");\r\n      this.setState({\r\n        name: \"\",\r\n        user_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        phone: 0,\r\n        islogin: true,\r\n      });\r\n      // console.log(token)\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n    }\r\n    // alert(data.error)\r\n    // console.log(data.token)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL+\"/signin/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"main_body\">\r\n              <div className=\"form\">\r\n                <h2 className=\"form-heading\">Sign UP</h2>\r\n                <div className=\"signup-form\">\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.setState({ name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">Email</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.email}\r\n                      onChange={(e) => {\r\n                        this.setState({ email: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"phone\">Phone No</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={this.state.phone}\r\n                      onChange={(e) => {\r\n                        this.setState({ phone: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <button\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Signup\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <Link className=\"form-link\" to={process.env.PUBLIC_URL+\"/signin/\"}>\r\n                  Already have an account ?? Login\r\n                </Link>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\r\n// import \"../style/link_page.css\"\r\nimport \"../script/link_page\"\r\n\r\n\r\nexport const LinkPage = (props) => {\r\n    const data = props.data;\r\n    //   console.log(data);\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n                <header>\r\n                    <nav>\r\n                        <div>\r\n                            <h1>BTech 20</h1>\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            <div id=\"time\"></div>\r\n                            <div id=\"date\"></div>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n                <section className=\"body\">\r\n                    <div className=\"color_code\">\r\n                        <h5 className=\"live\">Running...</h5>\r\n                        <h5 className=\"leftToday\">Left</h5>\r\n                        <h5 className=\"today_class\">Todays Class</h5>\r\n                        <h5 className=\"status\">Not for Today</h5>\r\n                    </div>\r\n                    <h2>Semester 3</h2>\r\n\r\n                    <h2 className=\"running\">No Class is Running Now </h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2 className=\"today\">No Classes are Left Today</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide2\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2>All Class Timing and Link</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"course status\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CourseCard = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <div className={props.class}>\r\n            <h3>{props.data.course}</h3>\r\n            {\r\n                props.data.time.map((val, ind) => {\r\n                    return (\r\n                        <Timing\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst Timing = (props) => {\r\n    // console.log(props.data)\r\n    return (\r\n        <>\r\n            <h4 className=\"time\">{props.data.time}</h4>\r\n            {\r\n                props.data.section.map((val, ind) => {\r\n                    return (\r\n                        <ClassLink\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst ClassLink = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <h5>\r\n            <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n        </h5>\r\n    </>)\r\n}\r\n","\r\n// import \"../style/link_page.css\"\r\nimport \"../script/link_page\"\r\n\r\n\r\nexport const PublicPage = (props) => {\r\n    const data = props.data;\r\n    //   console.log(data);\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n\r\n                <section className=\"body\">\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <Card\r\n                                        key={ind}\r\n                                        data={val}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Card = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <div className=\"status course\">\r\n            <a href={props.data.link} target=\"blank\">{props.data.title}</a>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n// const Timing = (props) => {\r\n//     // console.log(props.data)\r\n//     return (\r\n//         <>\r\n//             <h4 className=\"time\">{props.data.time}</h4>\r\n//             {\r\n//                 props.data.section.map((val, ind) => {\r\n//                     return (\r\n//                         <ClassLink\r\n//                             key={ind}\r\n//                             data={val}\r\n//                         />\r\n//                     )\r\n//                 })\r\n//             }\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// const ClassLink = (props) => {\r\n//     // console.log(props.data)\r\n//     return (<>\r\n//         <h5>\r\n//             <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n//         </h5>\r\n//     </>)\r\n// }\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { LinkPage } from \"./LinkPage\";\r\nimport { PublicPage } from \"./PublicPage\";\r\n// import { Redirect} from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER+\"/link/\";\r\n// console.log(URL)\r\n\r\nexport default class LinkWebsite extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // console.log(this.props.id)\r\n    const res = await fetch(URL + this.props.id);\r\n    if (res.status === 404) {\r\n      this.setState({ loading: false });\r\n    } else {\r\n      const data = await res.json();\r\n      this.setState({ data: data, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <section className=\"main_body\">\r\n            <h2> Loading... </h2>\r\n          </section>\r\n        ) : (\r\n          <>\r\n            {this.state.data ? (\r\n              <>\r\n                {this.props.id !== \"btech20\" ? (\r\n                  <div>\r\n                    <PublicPage data={this.state.data} />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <LinkPage data={this.state.data} />\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <section className=\"main_body\">\r\n                  <h2>Page not found</h2>\r\n                </section>\r\n                {/* <Redirect to=\"/\" /> */}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\n\r\n\r\nexport const Test = (props) => {\r\n\r\n  // console.log(data)\r\n  return (<>\r\n    <div className=\"w-56 h-56 sm:bg-gray-300 md:bg-gray-400\">\r\n      Hello Test\r\n    </div>\r\n    <a href=\"https://whatsapp.com\">This is link</a>\r\n    <button className=\"m-4 block\">This is button</button>\r\n    <input type=\"text\" />\r\n  </>)\r\n}\r\n","// import \"./style/main.css\";\r\n// import \"./style/header.css\";\r\n// import \"./style/home.css\";\r\nimport \"./style/link_page.css\";\r\n// import \"./style/chats.css\";\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // useLocation,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport { MainRouter } from \"./routes/MainRouter\";\r\nimport Signin from \"./containers/auth/Signin\";\r\nimport Signup from \"./containers/auth/Signup\";\r\n// import Home from \"./containers/Home\";\r\nimport LinkWebsite from \"./containers/LinkWebsite\";\r\n// import { Profile } from \"./containers/Profile\";\r\nimport { Test } from \"./containers/Test\";\r\n\r\n\r\nexport const App = () => {\r\n  // console.log(process.env.PUBLIC_URL)\r\n  let querry = window.location.search.split(\"?\").slice(1, 2).join();\r\n  // console.log(window.location);\r\n  // console.log(querry);\r\n  // console.log(querry2);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {querry ? <Redirect to={process.env.PUBLIC_URL + querry} /> : <></>}\r\n        <Switch>\r\n          {/* <Route exact path=\"/\" render={() => {\r\n                // console.log(data)\r\n                return (\r\n                  <>\r\n                    <MainRouter token={this.state.token}/>\r\n                  </>\r\n                );\r\n              }}/> */}\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signin/\"}\r\n            component={Signin}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signup/\"}\r\n            component={Signup}\r\n          />\r\n          {/* <Route exact path=\"/profile\" component={Profile} /> */}\r\n          {/* <Route exact path=\"/signup\" component={Signup} /> */}\r\n          {/* <Route exact path=\"/home\" component={Home} /> */}\r\n          {/* <Route exact path=\"/link/:id\" component={LinkWebsite} /> */}\r\n\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/page/:id\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite id={props.match.params.id} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/test/\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <Test/>\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n\r\n          {/* <Route\r\n            exact\r\n            path=\"/page/:id\"\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite\r\n                    id={props.match.params.id}\r\n                  />\r\n                </>\r\n              );\r\n            }}\r\n          /> */}\r\n\r\n          <MainRouter path={process.env.PUBLIC_URL + \"/\"} />\r\n\r\n          {/* <Redirect to={process.env.PUBLIC_URL} /> */}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// /*\r\n\r\nconst script = () => {\r\n  let months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  let currentDate = new Date();\r\n  let day = currentDate.getDay();\r\n  let hour = currentDate.getHours();\r\n  if (hour.toString().length < 2) {\r\n    hour = \"0\" + hour;\r\n  }\r\n\r\n  let minute = currentDate.getMinutes();\r\n  if (minute.toString().length < 2) {\r\n    minute = \"0\" + minute;\r\n  }\r\n\r\n  let second = currentDate.getSeconds();\r\n  if (second.toString().length < 2) {\r\n    second = \"0\" + second;\r\n  }\r\n\r\n  let date = currentDate.getDate();\r\n  if (date.toString().length < 2) {\r\n    date = \"0\" + date;\r\n  }\r\n\r\n  let month = currentDate.getMonth();\r\n\r\n  // let year = currentDate.getFullYear();\r\n\r\n  let time = hour + \":\" + minute;\r\n\r\n  let courses = document.querySelectorAll(\"#link-page .course\");\r\n\r\n  let liveClasses = document.querySelectorAll(\"#link-page .hide\");\r\n\r\n  let todayClasses = document.querySelectorAll(\"#link-page .hide2\");\r\n\r\n  courses.forEach((val, i) => {\r\n    // console.log(val)\r\n    val.innerText.split(\"\\n\").forEach((val, temp) => {\r\n      if (val[val.length - 3] === \":\") {\r\n        let classTimes = val.split(\",\");\r\n        classTimes.forEach((value, ind) => {\r\n          let classTime = value.split(\" \");\r\n          if (\r\n            time < classTime[classTime.length - 3] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".today\")[0].innerHTML =\r\n              \"Today's Classes Left\";\r\n            todayClasses[i].setAttribute(\"class\", \"course leftToday\");\r\n          }\r\n          if (\r\n            time >= classTime[classTime.length - 3] &&\r\n            time < classTime[classTime.length - 1] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".running\")[0].innerHTML =\r\n              \"Classes Running...\";\r\n            liveClasses[i].setAttribute(\"class\", \"course live\");\r\n          }\r\n          if (classTime.indexOf(days[day]) !== -1) {\r\n            courses[i].setAttribute(\"class\", \"course today_class\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const timer = setInterval(() => {\r\n    currentDate = new Date();\r\n    day = currentDate.getDay();\r\n    hour = currentDate.getHours();\r\n    if (hour.toString().length < 2) {\r\n      hour = \"0\" + hour;\r\n    }\r\n\r\n    minute = currentDate.getMinutes();\r\n    if (minute.toString().length < 2) {\r\n      minute = \"0\" + minute;\r\n    }\r\n\r\n    second = currentDate.getSeconds();\r\n    if (second.toString().length < 2) {\r\n      second = \"0\" + second;\r\n    }\r\n    try {\r\n      document.getElementById(\"time\").innerText =\r\n        hour + \":\" + minute + \":\" + second;\r\n      document.getElementById(\"date\").innerText =\r\n        days[day] + \", \" + months[month] + \" \" + date;\r\n    } catch {\r\n      //   console.log(\"timer timer\")\r\n      clearInterval(timer);\r\n    }\r\n\r\n    if (\r\n      (minute.toString() === \"00\" || minute.toString() === \"30\") &&\r\n      second.toString() === \"00\"\r\n    ) {\r\n      window.location.reload();\r\n    }\r\n  }, 1000);\r\n\r\n  // console.log(\"hello\")\r\n};\r\n\r\n\r\nconst start = setInterval(() => {\r\n  const load = document.getElementById(\"time\");\r\n  if (load) {\r\n    script();\r\n    clearInterval(start)\r\n  }\r\n}, 100);\r\n\r\n\r\n// */"],"sourceRoot":""}