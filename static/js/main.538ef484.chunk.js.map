{"version":3,"sources":["components/Header.js","containers/profile/Profile.js","containers/home/Home.js","containers/addLink/AddLink.js","containers/inbox/components/Friend.js","containers/inbox/components/Message.js","containers/inbox/components/ChatWindow.js","containers/inbox/Inbox.js","routes/LoginRouter.js","routes/MainRouter.js","containers/auth/Signin.js","containers/auth/Signup.js","containers/public/LinkPage.js","containers/public/PublicPage.js","containers/public/LinkWebsite.js","containers/Test.js","App.js","reportWebVitals.js","index.js","script/link_page.js"],"names":["Header","props","useState","navToggle","setNavToggle","navToggler","className","to","onClick","id","process","params","data","user_name","Profile","user","name","email","phone","Cookies","remove","Home","user_data","href","firstRun","initLinks","AddLinks","links","setLinks","useEffect","update","addLink","title","link","newLink","target","onDelete","filter","e","a","token","get","fetch","method","headers","Accept","Authorization","body","JSON","stringify","console","log","alert","Links","length","map","ind","OneLink","AddLink","setTitle","setLink","onSubmit","preventDefault","htmlFor","type","value","onChange","Friend","chat_id","to_user_name","Message","classes","classes2","own","ref","scrollRef","message","time","format","inMsgLive","from_user_name","ChatWindow","msg","setMsg","userName","setUserName","currentChat","setCurrentChat","messages","setMeassages","inMsg","setInMsg","setInMsgLive","msgLive","setMsgLive","socket","useRef","chatData","setChatData","current","io","on","emit","user_id","prev","getChat","chat_data","chats_of","with","owner","fetchData","submit","Date","updateChat","scrollIntoView","behavior","val","friend","placeholder","currentTarget","onKeyDownCapture","key","res","json","Inbox","addFrndInp","setAddFrndInp","_id","users","path","window","location","pathname","split","slice","chat_window","setChat_windoe","chat_list","setChat_list","addFriend","addChat","reload","chats_id","exact","render","match","LoginRouter","state","loading","status","this","setState","React","Component","UserFound","MainRouter","URL","Signin","islogin","password","set","username","error","Signup","LinkPage","class","CourseCard","course","Timing","section","ClassLink","PublicPage","Card","LinkWebsite","Test","App","querry","search","join","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","start","setInterval","months","days","currentDate","day","getDay","hour","getHours","toString","minute","getMinutes","second","getSeconds","date","getDate","month","getMonth","courses","querySelectorAll","liveClasses","todayClasses","forEach","i","innerText","temp","classTime","indexOf","innerHTML","setAttribute","timer","clearInterval","script"],"mappings":"yTAOaA,EAAS,SAACC,GAErB,MAAkCC,mBAAS,UAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAa,WAEfD,EADgB,KAAdD,EACW,SAKA,KAKjB,OACE,mCACI,sBAAKG,UAAYL,EAAMK,UAAY,mEAAnC,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,qCAA1B,SACE,sBAAMA,UAAU,uDAAuD,cAAY,cAAnF,qBAEF,wBAAQA,UAAU,6EAA6EE,QAAS,kBAAIH,KAA5G,SACE,cAAC,IAAD,MAEF,qBAAKC,UAAWH,EAAU,wDAAyDM,GAAG,aAAcD,QAAS,kBAAIH,KAAjH,SACE,sBAAKC,UAAU,sDAAf,UACE,cAAC,IAAD,CAASC,GAAIG,kBAA8BJ,UAAU,4FAArD,SACE,0CAEF,cAAC,IAAD,CAAUC,GAAIG,wBAAoCC,OAAQ,CAAEC,KAAMX,EAAMY,WAAaP,UAAU,4FAA/F,SACE,2CAEF,cAAC,IAAD,CAASC,GAAIG,0BAAsCJ,UAAU,4FAA7D,SACE,+BAAOL,EAAMY,yBCrChBC,EAAU,SAACb,GACtB,IAGMc,EAAOd,EAAMc,KAEnB,OACE,qCACE,sBAAKT,UAAU,QAAf,UACE,oDACA,yCAAYS,EAAKC,QACjB,8CAAiBD,EAAKF,aACtB,0CAAaE,EAAKE,SAClB,6CAAgBF,EAAKG,YAEvB,cAAC,IAAD,CAAMX,GAAIG,kBAAV,SACE,wBACEF,QAAS,WAffW,IAAQC,OAAO,UAcX,2BCNKC,EAAO,SAACpB,GACnB,IAAMc,EAAOd,EAAMW,KAAKG,KAClBH,EAAOX,EAAMW,KAAKU,UAExB,OAAQ,gCAEN,sBAAKhB,UAAU,QAAf,UACE,wCAAWS,EAAKC,QAChB,kEAEF,8BACGJ,EAAKA,KAAK,GACX,qCACA,wDAA0B,mBAAGW,KAAMb,uBAAgCE,EAAKC,UAA9C,qBAC1B,cAAC,IAAD,CAAMN,GAAIG,wBAAkCC,OAAQ,CAACC,KAAMA,GAA3D,SAAmE,oDAGnE,qCACA,gEACA,cAAC,IAAD,CAAML,GAAIG,wBAAkCC,OAAQ,CAACC,KAAMA,GAA3D,SAAmE,0D,QCxBrEY,GAAW,EACXC,EAAY,GAEHC,EAAW,SAACzB,GAKnBuB,IAEFC,EAAYxB,EAAMW,KAAKU,UAAUV,KACjCY,GAAW,GAGb,IAkBA,EAA0BtB,mBAASuB,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAOA,OALAC,qBAAU,WACRC,EAAOH,GACPF,EAAYE,IACX,CAACA,IAGF,sBAAKrB,UAAU,iDAAf,UACE,cAAC,EAAD,CAASyB,QAlBG,SAACC,EAAOC,GACtB,IAAMC,EAAU,CACdF,MAAOA,EACPC,KAAMA,GAERL,EAAS,GAAD,mBAAKD,GAAL,CAAYO,QAclB,2DAC4B,IAC1B,mBACEX,KACEb,uBAAoCT,EAAMW,KAAKU,UAAUT,UAE3DsB,OAAO,QAJT,SAMGzB,uBAAoCT,EAAMW,KAAKU,UAAUT,eAG9D,cAAC,EAAD,CAAOc,MAAOA,EAAOS,SAvCR,SAACH,GAEhBL,EACED,EAAMU,QAAO,SAACC,GACZ,OAAOA,IAAML,aAwCfH,EAAM,uCAAG,WAAOH,GAAP,eAAAY,EAAA,6DACPC,EAAQrB,IAAQsB,IAAI,SADb,kBAILC,MAnEShC,0DAmES,CACtBiC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAeN,GAEjBO,KAAMC,KAAKC,UAAU,CAEnBrC,KAAMe,MAbC,uDAoBXuB,QAAQC,IAAR,MACAC,MAAM,wBArBK,yDAAH,sDAyBNC,EAAQ,SAACpD,GACb,OACE,mCACE,sBAAKK,UAAU,2CAAf,UACE,4CACwB,IAAvBL,EAAM0B,MAAM2B,OACT,sBACArD,EAAM0B,MAAM4B,KAAI,SAACtB,EAAMuB,GACrB,OACE,cAAC,EAAD,CAAmBvB,KAAMA,EAAMG,SAAUnC,EAAMmC,UAAjCoB,YAQxBC,EAAU,SAAC,GAAwB,IAAtBxB,EAAqB,EAArBA,KAAMG,EAAe,EAAfA,SACvB,OACE,mCACE,sBAAK9B,UAAU,iCAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsB2B,EAAKD,QAC3B,wBACExB,QAAS,WACP4B,EAASH,IAFb,uBAQF,4BACE,mBAAGV,KAAMU,EAAKA,KAAME,OAAO,QAA3B,SACGF,EAAKA,eAQZyB,EAAU,SAACzD,GACf,MAA0BC,mBAAS,IAAnC,mBAAO8B,EAAP,KAAc2B,EAAd,KACA,EAAwBzD,mBAAS,IAAjC,mBAAO+B,EAAP,KAAa2B,EAAb,KAWA,OACE,mCACE,8BACE,uBAAMtD,UAAU,OAAOuD,SAbd,SAACvB,GACdA,EAAEwB,iBACG9B,GAAUC,GAGbhC,EAAM8B,QAAQC,EAAOC,GACrB0B,EAAS,IACTC,EAAQ,KAJRR,MAAM,kCAUJ,UACE,4CACA,sBAAK9C,UAAU,YAAf,UACE,uBAAOyD,QAAQ,QAAf,uBACA,uBACEC,KAAK,OACLC,MAAOjC,EACPkC,SAAU,SAAC5B,GACTqB,EAASrB,EAAEH,OAAO8B,aAIxB,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,QAAf,kBACA,uBACEC,KAAK,OACLC,MAAOhC,EACPiC,SAAU,SAAC5B,GACTsB,EAAQtB,EAAEH,OAAO8B,aAIvB,wBAAQD,KAAK,SAAb,8B,QCrKGG,G,OAAS,SAAClE,GAEnB,OACE,mCAME,cAAC,IAAD,CAAMM,GAAIN,EAAMW,KAAKwD,QAAS9D,UAAU,WAAxC,SACE,qBAAKA,UAAU,qEAAf,SACE,6BAAKL,EAAMW,KAAKyD,uB,yBCZfC,EAAU,SAACrE,GACpB,IAAIe,EAAO,GACPuD,EAAU,SACVC,EAAW,GAOf,OANIvE,EAAMW,OACRI,EAAOf,EAAMwE,IAAM,GAAKxE,EAAMW,KAAKI,KACnCuD,EAAUtE,EAAMwE,IAAM,yBAA2B,wBACjDD,EAAWvE,EAAMwE,IAAM,cAAgB,YAIvC,mCACGxE,EAAMW,KACL,sBAAK8D,IAAKzE,EAAM0E,UAAWrE,UAAW,eAAiBiE,EAAvD,UACE,uBAAOjE,UAAU,gCAAjB,SAAkDU,IAClD,sBACEV,UAAW,8CAAgDkE,EAD7D,UAGGvE,EAAMW,KAAKgE,QACZ,0BAGF,mBACEtE,UACEL,EAAMwE,IACF,mCACA,sCAJR,SAOE,sBAAMnE,UAAU,wBAAhB,SACGL,EAAMW,KAAKiE,KAAOC,YAAO7E,EAAMW,KAAKiE,MAAQ,UAKnD,sBAAKH,IAAKzE,EAAM0E,UAAWrE,UAAW,oCAAtC,UACE,uBAAOA,UAAU,gCAAjB,SAAkDL,EAAM8E,UAAUC,iBAClE,sBACE1E,UAAW,yDADb,UAGGL,EAAM8E,UAAUH,QACjB,0BAGF,mBACEtE,UACEL,EAAMwE,IACF,mCACA,sCAJR,SAOE,sBAAMnE,UAAU,wBAAhB,SACGL,EAAM8E,UAAY,YAAc,aC5CpCE,EAAa,SAAChF,GAEzB,MAAsBC,mBAAS,IAA/B,mBAAOgF,EAAP,KAAYC,EAAZ,KACA,EAAgCjF,mBAAS,MAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAAsCnF,mBAAS,IAA/C,mBAAOoF,EAAP,KAAoBC,EAApB,KACA,EAAiCrF,mBAAS,IAA1C,mBAAOsF,EAAP,KAAiBC,EAAjB,KACA,EAA0BvF,mBAAS,MAAnC,mBAAOwF,EAAP,KAAcC,EAAd,KACA,EAAkCzF,mBAAS,MAA3C,mBAAO6E,EAAP,KAAkBa,EAAlB,KACA,EAA8B1F,mBAAS,CACrC8E,eAAgB,GAChBJ,QAAS,KAFX,mBAAOiB,EAAP,KAAgBC,EAAhB,KAIMC,EAASC,mBACTrB,EAAYqB,mBAElB,EAAgC9F,mBAAS,MAAzC,mBAAO+F,EAAP,KAAiBC,EAAjB,KAEArE,qBAAU,WACRkE,EAAOI,QAAUC,aAtBT1F,+CAuBRqF,EAAOI,QAAQE,GAAG,cAAc,SAACzF,GAE/B+E,EAAS,CACPf,QAAShE,EAAKgE,QACd5D,KAAMJ,EAAKoE,eACXH,KAAMjE,EAAKiE,OAGbiB,EAAW,CAAEd,eAAgB,GAAIJ,QAAS,QAE5CmB,EAAOI,QAAQE,GAAG,cAAc,SAACzF,GAI/BgF,EAAa,CACXZ,eAAgBpE,EAAKoE,eACrBJ,QAAShE,EAAKgE,eAIjB,IAEH/C,qBAAU,WACJuD,GACFW,EAAOI,QAAQG,KAAK,UAAW,CAAEzF,UAAWuE,EAAUmB,QAAS,WAEhE,CAACnB,IAEJvD,qBAAU,WAEJkD,GAAaO,IAAgBP,EAAUC,gBACzCc,EAAWf,KAKZ,CAACA,EAAWO,IAEfzD,qBAAU,WAEJ6D,GAASJ,IAAgBI,EAAM1E,MACjCyE,GAAa,SAACe,GAAD,4BAAcA,GAAd,CAAoBd,SAElC,CAACA,EAAOJ,IAIXzD,qBAAU,WAAM,4CACd,4BAAAU,EAAA,sEACqBkE,EAAQxG,EAAMmE,SADnC,OACQxD,EADR,OAEEsF,EAAYtF,GAIZ6E,EAAa7E,EAAK8F,WAClBnB,EAAe3E,EAAK+F,SAASC,MAC7BvB,EAAYzE,EAAK+F,SAASE,OAR5B,4CADc,uBAAC,WAAD,wBAWdC,KACC,CAAC7G,EAAMmE,UAEV,IAAM2C,EAAS,SAACzE,GAEd,GADAA,EAAEwB,iBACEoB,EAAK,CACPa,EAAOI,QAAQG,KAAK,cAAe,CACjCtB,eAAgBI,EAChBf,aAAciB,EACdV,QAASM,EACTL,KAAM,IAAImC,OAGZ,IAAMpG,EAAO,CACXgE,QAASM,EACTlE,KAAMoE,EACNP,KAAM,IAAImC,MAEZC,EAAW3B,EAAa1E,GACxB6E,EAAa,GAAD,mBAAKD,GAAL,CAAe5E,KAE3BuE,EAAO,MAsBX,OAdAtD,qBAAU,WACR,IAAMwC,EAAeiB,EAErBS,EAAOI,QAAQG,KAAK,cAAe,CACjCtB,eAAgBI,EAChBf,aAAcA,EACdO,QAASM,MAEV,CAACA,EAAKI,EAAaF,IAEtBvD,qBAAU,WAAO,IAAD,EACd,UAAA8C,EAAUwB,eAAV,SAAmBe,eAAe,CAAEC,SAAU,aAC7C,CAAC3B,EAAUK,IAGZ,mCACII,EAOA,qCACE,sBAAK3F,UAAU,2EAAf,UACE,cAAC,IAAD,CACEC,GAAIG,wBACJJ,UAAU,sDAFZ,SAIE,cAAC,IAAD,MAEF,6BAAKgF,OAEP,sBAAKhF,UAAU,4CAA4CG,GAAG,eAA9D,UACG+E,EAASjC,KAAI,SAAC6D,EAAK5D,GAClB,OAEE,aADA,CACC,EAAD,CAEEzC,KAAMqE,EACNxE,KAAMwG,EACN3C,IAAKW,IAAagC,EAAIpG,KACtB2D,UAAWA,GAJNnB,MASVqC,EAAQjB,QACP,mCACE,cAAC,EAAD,CACEyC,OAAQ/B,EACRP,UAAWc,EACXlB,UAAWA,MAIf,gCAGJ,uBAAMrE,UAAU,kCAAkCG,GAAG,uBAArD,UACE,uBACEH,UAAU,kBACV0D,KAAK,OACLsD,YAAY,cACZrD,MAAOiB,EACPhB,SAAU,SAAC5B,GAAD,OAAO6C,EAAO7C,EAAEiF,cAActD,QACxCxD,GAAG,mBACH+G,iBAAkB,SAAClF,GAAD,MAAkB,UAAVA,EAAEmF,IAAkBV,EAAOzE,GAAK,QAE5D,wBACEhC,UAAU,gCACVG,GAAG,YACHD,QAAS,SAAC8B,GACRyE,EAAOzE,IAJX,wBApDJ,mCACE,sBAAMhC,UAAU,8EAAhB,6BAmEJmG,EAAO,uCAAG,WAAOrC,GAAP,mBAAA7B,EAAA,6DACRC,EAAQrB,IAAQsB,IAAI,SADZ,kBAGMC,MArMNhC,yDAqMsB0D,EAAS,CACzCzB,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAeN,KARP,cAGNkF,EAHM,gBAWWA,EAAIC,OAXf,cAWNnC,EAXM,yBAaLA,GAbK,kCAeZtC,QAAQC,IAAR,MACAC,MAAM,kBAhBM,0DAAH,sDAoBP6D,EAAU,uCAAG,WAAO5C,EAAcO,GAArB,eAAArC,EAAA,6DACXC,EAAQrB,IAAQsB,IAAI,SADT,kBAITC,MAzNOhC,0DAyNS,CACpBiC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAeN,GAEjBO,KAAMC,KAAKC,UAAU,CACnBoB,eACAO,cAbW,uDAmBf1B,QAAQC,IAAR,MACAC,MAAM,wBApBS,yDAAH,wDC5MHwE,EAAQ,SAAC3H,GAKpB,MAAoCC,mBAAS,IAA7C,mBAAO2H,EAAP,KAAmBC,EAAnB,KAOM/B,EAASC,mBAkCfnE,qBAAU,WAERkE,EAAOI,QAAUC,aArDT1F,+CAsDRqF,EAAOI,QAAQG,KAAK,UAAW,CAACzF,UAAWZ,EAAMc,KAAKF,UAAW0F,QAAStG,EAAMc,KAAKgH,MACrFhC,EAAOI,QAAQE,GAAG,YAAY,SAAC2B,GAC7B9E,QAAQC,IAAI6E,QAEb,CAAC/H,EAAMc,OA6BV,IAAMkH,EAAOC,OAAOC,SAASC,SAASC,MAAM,KAAKC,MAAM,EAAE,GAIzD,EAAsCpI,mBAAS,UAA/C,mBAAOqI,EAAP,KAAoBC,EAApB,KACA,EAAkCtI,mBAAS,QAA3C,mBAAOuI,EAAP,KAAkBC,EAAlB,KACA7G,qBAAU,WACM,UAAVoG,EAAK,IAAgBA,EAAK,IAE5BO,EAAe,QACfE,EAAa,YAEbF,EAAe,UACfE,EAAa,WAEd,CAACT,IAQJ,IAAMU,EAAS,uCAAG,WAAOrG,GAAP,SAAAC,EAAA,yDAChBD,EAAEwB,kBACE+D,EAFY,uBAGd3E,QAAQC,IAAI0E,GAHE,SAIKe,EAAQf,GAJb,eAMZK,OAAOC,SAASU,SANJ,2CAAH,sDAWf,OACE,mCACE,yBAASvI,UAAU,wCAAnB,SACE,sBAAKA,UAAU,qCAAf,UACE,sBACEA,UACEmI,EACA,2EAHJ,UAME,qBAAKnI,UAAU,uDAAf,SACE,6BAAKL,EAAMc,KAAKF,cAGlB,sBAAKP,UAAU,kBAAf,UACGL,EAAMc,KAAK+H,SAASvF,KAAI,SAAC6D,EAAK5D,GAC7B,OAAO,cAAC,EAAD,CAAkB5C,KAAMwG,GAAX5D,MAEtB,sBAAKlD,UAAU,oBAAf,UACE,uBACE0D,KAAK,OACLsD,YAAY,2BACZrD,MAAO4D,EACP3D,SAAU,SAAC5B,GAAD,OAAOwF,EAAcxF,EAAEiF,cAActD,UAEjD,wBACE3D,UAAU,MACVE,QAAS,SAAC8B,GACRqG,EAAUrG,IAHd,iCAYN,qBACEhC,UACEiI,EACA,gFAHJ,SAME,eAAC,IAAD,WACE,cAAC,IAAD,CACEQ,OAAK,EACLd,KAAMvH,wBACNsI,OAAQ,WACN,OACE,mCACE,sBAAM1I,UAAU,8EAAhB,8BAOR,cAAC,IAAD,CACEyI,OAAK,EACLd,KAAMvH,2BACNsI,OAAQ,SAAC/I,GAGP,OACE,mCACE,cAAC,EAAD,CACEmE,QAASnE,EAAMgJ,MAAMtI,OAAOF,uBA4C9CmI,EAAO,uCAAG,WAAOxE,GAAP,mBAAA7B,EAAA,6DACRC,EAAQrB,IAAQsB,IAAI,SADZ,kBAGMC,MAzONhC,wDAyOqB,CAC/BiC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAeN,GAEjBO,KAAMC,KAAKC,UAAU,CACnBpC,UAAWuD,MAXH,cAGNsD,EAHM,gBAcWA,EAAIC,OAdf,cAcNnC,EAdM,yBAgBLA,GAhBK,kCAkBZtC,QAAQC,IAAR,MACAC,MAAM,kBAnBM,0DAAH,sDCvOQ8F,E,4MAEnBC,MAAQ,CACNC,SAAS,EACTxI,KAAM,KACNyI,OAAQ,M,8FAMV,gCAAA9G,EAAA,2DACQC,EAAQ8G,KAAKrJ,MAAMuC,OAD3B,gCAIsBE,MAjBZhC,+CAiBuB,CAC3BiC,OAAQ,MACRC,QAAS,CACPC,OAAQ,MACRC,cAAeN,KARvB,cAIUkF,EAJV,gBAYuBA,EAAIC,OAZ3B,OAYU/G,EAZV,OAaI0I,KAAKC,SAAS,CACZ3I,KAAMA,EACNwI,SAAS,EACTC,OAAQ3B,EAAI2B,SAhBlB,gD,0EA0BA,WAEE,OACE,mCACGC,KAAKH,MAAMC,QACV,yBAAS9I,UAAU,YAAnB,0BAEA,mCACyB,MAAtBgJ,KAAKH,MAAME,OACV,cAAC,EAAD,CAAWzI,KAAM0I,KAAKH,MAAMvI,KAAM4B,MAAO8G,KAAKrJ,MAAMuC,QAEpD,cAAC,IAAD,CAAUjC,GAAIG,mC,GAhDa8I,IAAMC,WAyDzCC,EAAY,SAACzJ,GAEjB,IAAMW,EAAOX,EAAMW,KACnB,OACE,qCACE,cAAC,EAAD,CAAQC,UAAWD,EAAKG,KAAKF,UAAWP,UAAU,SAClD,yBAASA,UAAU,uDAAnB,SACE,cAAC,IAAD,CACE2H,KAAMvH,kBACNsI,OAAQ,WACN,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CACED,OAAK,EACLd,KAAMvH,kBACNsI,OAAQ,WACN,OACE,mCACE,cAAC,EAAD,CAAMpI,KAAMA,SAKpB,cAAC,IAAD,CACEmI,OAAK,EACLd,KAAMvH,wBACNsI,OAAQ,WACN,OACE,mCACE,cAAC,EAAD,CAAUpI,KAAMA,EAAM4B,MAAOvC,EAAMuC,aAK3C,cAAC,IAAD,CACEuG,OAAK,EACLd,KAAMvH,0BACNsI,OAAQ,WACN,OACE,mCACE,cAAC,EAAD,CAASjI,KAAMH,EAAKG,YAK5B,cAAC,IAAD,CACEkH,KAAMvH,wBACNsI,OAAQ,WACN,OACE,mCACE,cAAC,EAAD,CAAOjI,KAAMH,EAAKG,0BCpH/B4I,EAAa,WACtB,IAAMnH,EAAQrB,IAAQsB,IAAI,SAG1B,OAAO,mCACFD,EACD,qCACA,cAAC,IAAD,CAAUjC,GAAIG,0BACd,cAAC,EAAD,CAAa8B,MAAOA,OAGpB,mCACA,cAAC,IAAD,CAAUjC,GAAIG,gCCVhBkJ,EAAMlJ,qDAGSmJ,E,4MACnBV,MAAQ,CACNW,SAAS,EACTlJ,KAAM,KACNC,UAAW,GACXkJ,SAAU,I,EAEZhD,O,sBAAS,gCAAAxE,EAAA,sEACWG,MAAMkH,EAAK,CAE3BjH,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CACnBpC,UAAW,EAAKsI,MAAMtI,UACtBkJ,SAAU,EAAKZ,MAAMY,aAVlB,cACDrC,EADC,gBAaYA,EAAIC,OAbhB,YAaD/G,EAbC,QAcE4B,MAdF,wBAeCA,EAAQ,UAAY5B,EAAK4B,MAf1B,UAgBCrB,IAAQ6I,IAAI,QAASxH,GAhBtB,QAiBL,EAAK+G,SAAS,CAAEU,SAAU,GAAIF,SAAU,GAAID,SAAS,IAjBhD,wBAoBL1G,MAAMxC,EAAKsJ,OACX,EAAKX,SAAS,CAAE1I,UAAW,GAAIkJ,SAAU,KArBpC,4C,4CAyBT,WAAU,IAAD,OACP,OACE,mCACGT,KAAKH,MAAMW,QACV,cAAC,IAAD,CAAUvJ,GAAIG,0BAEd,mCACE,yBAASJ,UAAU,YAAnB,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,eAAd,mBACA,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOyD,QAAQ,YAAf,uBACA,uBACEC,KAAK,OACLC,MAAOqF,KAAKH,MAAMtI,UAClBqD,SAAU,SAAC5B,GACT,EAAKiH,SAAS,CAAE1I,UAAWyB,EAAEH,OAAO8B,cAI1C,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLC,MAAOqF,KAAKH,MAAMY,SAClB7F,SAAU,SAAC5B,GACT,EAAKiH,SAAS,CAAEQ,SAAUzH,EAAEH,OAAO8B,SAErCuD,iBAAkB,SAAClF,GAAD,MACN,UAAVA,EAAEmF,IAAkB,EAAKV,OAAOzE,GAAK,WAI3C,qBAAKhC,UAAU,YAAf,SACE,wBACEE,QAAS,WACP,EAAKuG,UAFT,wBASJ,cAAC,IAAD,CACEzG,UAAU,YACVC,GAAIG,yBAFN,mD,GA5EoB8I,IAAMC,WCJpCG,EAAMlJ,qDAESyJ,E,4MAEnBhB,MAAQ,CACNW,SAAS,EACTlJ,KAAM,KACNI,KAAM,GACNH,UAAW,GACXI,MAAO,GACP8I,SAAU,GACV7I,MAAO,I,EAET6F,O,sBAAS,8BAAAxE,EAAA,sEACWG,MAAMkH,EAAK,CAS3BjH,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CACnBjC,KAAM,EAAKmI,MAAMnI,KACjBH,UAAW,EAAKsI,MAAMtI,UACtBI,MAAO,EAAKkI,MAAMlI,MAClB8I,SAAU,EAAKZ,MAAMY,SACrB7I,MAAO,EAAKiI,MAAMjI,UApBf,cACDwG,EADC,gBAuBYA,EAAIC,OAvBhB,QAuBD/G,EAvBC,QAwBE4B,OAGPY,MAAM,gCACN,EAAKmG,SAAS,CACZvI,KAAM,GACNH,UAAW,GACXI,MAAO,GACP8I,SAAU,GACV7I,MAAO,EACP4I,SAAS,KAKX1G,MAAMxC,EAAKsJ,OAvCN,2C,4CA6CT,WAAU,IAAD,OACP,OACE,mCACGZ,KAAKH,MAAMW,QACV,cAAC,IAAD,CAAUvJ,GAAIG,2BAEd,mCACE,yBAASJ,UAAU,YAAnB,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,eAAd,qBACA,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOyD,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLC,MAAOqF,KAAKH,MAAMnI,KAClBkD,SAAU,SAAC5B,GACT,EAAKiH,SAAS,CAAEvI,KAAMsB,EAAEH,OAAO8B,cAIrC,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,YAAf,uBACA,uBACEC,KAAK,OACLC,MAAOqF,KAAKH,MAAMtI,UAClBqD,SAAU,SAAC5B,GACT,EAAKiH,SAAS,CAAE1I,UAAWyB,EAAEH,OAAO8B,cAI1C,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,YAAf,mBACA,uBACEC,KAAK,OACLC,MAAOqF,KAAKH,MAAMlI,MAClBiD,SAAU,SAAC5B,GACT,EAAKiH,SAAS,CAAEtI,MAAOqB,EAAEH,OAAO8B,cAItC,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLC,MAAOqF,KAAKH,MAAMY,SAClB7F,SAAU,SAAC5B,GACT,EAAKiH,SAAS,CAAEQ,SAAUzH,EAAEH,OAAO8B,cAIzC,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,QAAf,sBACA,uBACEC,KAAK,SACLC,MAAOqF,KAAKH,MAAMjI,MAClBgD,SAAU,SAAC5B,GACT,EAAKiH,SAAS,CAAErI,MAAOoB,EAAEH,OAAO8B,cAItC,qBAAK3D,UAAU,YAAf,SACE,wBACEE,QAAS,WACP,EAAKuG,UAFT,yBASJ,cAAC,IAAD,CAAMzG,UAAU,YAAYC,GAAIG,yBAAhC,2D,GA/HoB8I,IAAMC,WCJ7BW,G,MAAW,SAACnK,GACrB,IAAMW,EAAOX,EAAMW,KAEnB,OACI,mCACI,sBAAKH,GAAG,YAAR,UACI,iCACI,gCACI,8BACI,4CAEJ,sBAAKH,UAAU,OAAf,UACI,qBAAKG,GAAG,SACR,qBAAKA,GAAG,iBAIpB,0BAASH,UAAU,OAAnB,UACI,sBAAKA,UAAU,aAAf,UACI,oBAAIA,UAAU,OAAd,wBACA,oBAAIA,UAAU,YAAd,kBACA,oBAAIA,UAAU,cAAd,0BACA,oBAAIA,UAAU,SAAd,8BAEJ,4CAEA,oBAAIA,UAAU,UAAd,sCACA,qBAAKA,UAAU,iBAAf,SAEQM,EAAK2C,KAAI,SAAC6D,EAAK5D,GACX,OACI,cAAC,EAAD,CAEI5C,KAAMwG,EACNiD,MAAO,QAFF7G,QASzB,oBAAIlD,UAAU,QAAd,uCACA,qBAAKA,UAAU,iBAAf,SAEQM,EAAK2C,KAAI,SAAC6D,EAAK5D,GACX,OACI,cAAC,EAAD,CAEI5C,KAAMwG,EACNiD,MAAO,SAFF7G,QASzB,2DACA,qBAAKlD,UAAU,iBAAf,SAEQM,EAAK2C,KAAI,SAAC6D,EAAK5D,GACX,OACI,cAAC,EAAD,CAEI5C,KAAMwG,EACNiD,MAAO,iBAFF7G,kBAcvC8G,EAAa,SAACrK,GAEhB,OAAQ,mCACJ,sBAAKK,UAAWL,EAAMoK,MAAtB,UACI,6BAAKpK,EAAMW,KAAK2J,SAEZtK,EAAMW,KAAKiE,KAAKtB,KAAI,SAAC6D,EAAK5D,GACtB,OACI,cAAC,EAAD,CAEI5C,KAAMwG,GADD5D,YAU3BgH,EAAS,SAACvK,GAEZ,OACI,qCACI,oBAAIK,UAAU,OAAd,SAAsBL,EAAMW,KAAKiE,OAE7B5E,EAAMW,KAAK6J,QAAQlH,KAAI,SAAC6D,EAAK5D,GACzB,OACI,cAAC,GAAD,CAEI5C,KAAMwG,GADD5D,UAU3BkH,GAAY,SAACzK,GAEf,OAAQ,mCACJ,6BACI,mBAAGsB,KAAMtB,EAAMW,KAAKqB,KAAME,OAAO,QAAjC,SAA0ClC,EAAMW,KAAK6J,eCtHpDE,GAAa,SAAC1K,GACvB,IAAMW,EAAOX,EAAMW,KAEnB,OACI,mCACI,qBAAKH,GAAG,YAAR,SAEI,yBAASH,UAAU,OAAnB,SACI,qBAAKA,UAAU,iBAAf,SAEQM,EAAK2C,KAAI,SAAC6D,EAAK5D,GACX,OACI,cAAC,GAAD,CAEI5C,KAAMwG,GADD5D,eAavCoH,GAAO,SAAC3K,GAEV,OAAQ,mCACJ,qBAAKK,UAAU,gBAAf,SACI,mBAAGiB,KAAMtB,EAAMW,KAAKqB,KAAME,OAAO,QAAjC,SAA0ClC,EAAMW,KAAKoB,aC1B5C6I,G,4MACnB1B,MAAQ,CACNC,SAAS,EACTxI,KAAM,M,8FAGR,8BAAA2B,EAAA,sEAEoBG,MAXVhC,oDAWsB4I,KAAKrJ,MAAMQ,IAF3C,UAGqB,OADbiH,EAFR,QAGU2B,OAHV,gBAIIC,KAAKC,SAAS,CAAEH,SAAS,IAJ7B,uCAMuB1B,EAAIC,OAN3B,OAMU/G,EANV,OAOI0I,KAAKC,SAAS,CAAE3I,KAAMA,EAAMwI,SAAS,IAPzC,iD,0EAWA,WACE,OACE,mCACGE,KAAKH,MAAMC,QACV,yBAAS9I,UAAU,YAAnB,SACE,gDAGF,mCACGgJ,KAAKH,MAAMvI,KACV,mCACqB,YAAlB0I,KAAKrJ,MAAMQ,GACV,8BACE,cAAC,GAAD,CAAYG,KAAM0I,KAAKH,MAAMvI,SAG/B,8BACE,cAAC,EAAD,CAAUA,KAAM0I,KAAKH,MAAMvI,WAKjC,mCACE,yBAASN,UAAU,YAAnB,SACE,4D,GAzCuBkJ,IAAMC,WCLlCqB,GAAO,SAAC7K,GAGnB,OAAQ,qCACN,qBAAKK,UAAU,0CAAf,wBAGA,mBAAGiB,KAAK,uBAAR,0BACA,wBAAQjB,UAAU,YAAlB,4BACA,uBAAO0D,KAAK,aC8FD+G,GAjFI,WAEjB,IAAIC,EAAS9C,OAAOC,SAAS8C,OAAO5C,MAAM,KAAKC,MAAM,EAAG,GAAG4C,OAK3D,OACE,mCACE,eAAC,IAAD,WACGF,EAAS,cAAC,IAAD,CAAUzK,GAAIG,iBAAyBsK,IAAa,6BAC9D,eAAC,IAAD,WASE,cAAC,IAAD,CACEjC,OAAK,EACLd,KAAMvH,yBACNyK,UAAWtB,IAEb,cAAC,IAAD,CACEd,OAAK,EACLd,KAAMvH,yBACNyK,UAAWhB,IAOb,cAAC,IAAD,CACEpB,OAAK,EACLd,KAAMvH,0BACNsI,OAAQ,SAAC/I,GACP,OACE,mCACE,cAAC,GAAD,CAAaQ,GAAIR,EAAMgJ,MAAMtI,OAAOF,UAK5C,cAAC,IAAD,CACEsI,OAAK,EACLd,KAAMvH,uBACNsI,OAAQ,SAAC/I,GACP,OACE,mCACE,cAAC,GAAD,SAoBR,cAAC,EAAD,CAAYgI,KAAMvH,6BCtFb0K,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS7C,OACP,cAAC,IAAM8C,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M,iBCdA,IAyHMa,EAAQC,aAAY,WACXH,SAASC,eAAe,WA1HxB,WACb,IAAIG,EAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEEC,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAClDC,EAAc,IAAIrF,KAClBsF,EAAMD,EAAYE,SAClBC,EAAOH,EAAYI,WACnBD,EAAKE,WAAWpJ,OAAS,IAC3BkJ,EAAO,IAAMA,GAGf,IAAIG,EAASN,EAAYO,aACrBD,EAAOD,WAAWpJ,OAAS,IAC7BqJ,EAAS,IAAMA,GAGjB,IAAIE,EAASR,EAAYS,aACrBD,EAAOH,WAAWpJ,OAAS,IAC7BuJ,EAAS,IAAMA,GAGjB,IAAIE,EAAOV,EAAYW,UACnBD,EAAKL,WAAWpJ,OAAS,IAC3ByJ,EAAO,IAAMA,GAGf,IAAIE,EAAQZ,EAAYa,WAIpBrI,EAAO2H,EAAO,IAAMG,EAEpBQ,EAAUpB,SAASqB,iBAAiB,sBAEpCC,EAActB,SAASqB,iBAAiB,oBAExCE,EAAevB,SAASqB,iBAAiB,qBAE7CD,EAAQI,SAAQ,SAACnG,EAAKoG,GAEpBpG,EAAIqG,UAAUpF,MAAM,MAAMkF,SAAQ,SAACnG,EAAKsG,GACV,MAAxBtG,EAAIA,EAAI9D,OAAS,IACF8D,EAAIiB,MAAM,KAChBkF,SAAQ,SAACtJ,EAAOT,GACzB,IAAImK,EAAY1J,EAAMoE,MAAM,KAE1BxD,EAAO8I,EAAUA,EAAUrK,OAAS,KACF,IAAlCqK,EAAUC,QAAQxB,EAAKE,MAEvBP,SAASqB,iBAAiB,UAAU,GAAGS,UACrC,uBACFP,EAAaE,GAAGM,aAAa,QAAS,qBAGtCjJ,GAAQ8I,EAAUA,EAAUrK,OAAS,IACrCuB,EAAO8I,EAAUA,EAAUrK,OAAS,KACF,IAAlCqK,EAAUC,QAAQxB,EAAKE,MAEvBP,SAASqB,iBAAiB,YAAY,GAAGS,UACvC,qBACFR,EAAYG,GAAGM,aAAa,QAAS,iBAED,IAAlCH,EAAUC,QAAQxB,EAAKE,KACzBa,EAAQK,GAAGM,aAAa,QAAS,+BAO3C,IAAMC,EAAQ7B,aAAY,WACxBG,EAAc,IAAIrF,KAClBsF,EAAMD,EAAYE,UAClBC,EAAOH,EAAYI,YACVC,WAAWpJ,OAAS,IAC3BkJ,EAAO,IAAMA,IAGfG,EAASN,EAAYO,cACVF,WAAWpJ,OAAS,IAC7BqJ,EAAS,IAAMA,IAGjBE,EAASR,EAAYS,cACVJ,WAAWpJ,OAAS,IAC7BuJ,EAAS,IAAMA,GAEjB,IACEd,SAASC,eAAe,QAAQyB,UAC9BjB,EAAO,IAAMG,EAAS,IAAME,EAC9Bd,SAASC,eAAe,QAAQyB,UAC9BrB,EAAKE,GAAO,KAAOH,EAAOc,GAAS,IAAMF,EAC3C,SAEAiB,cAAcD,GAIS,OAAtBpB,EAAOD,YAA6C,OAAtBC,EAAOD,YAChB,OAAtBG,EAAOH,YAEPxE,OAAOC,SAASU,WAEjB,KASDoF,GACAD,cAAc/B,MAEf,M","file":"static/js/main.538ef484.chunk.js","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { IconName } from \"react-icons/vsc\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nexport const Header = (props) => {\r\n\r\n  const [navToggle, setNavToggle] = useState(\"hidden\");\r\n  const navToggler = () =>{\r\n    if (navToggle === \"\") {\r\n      setNavToggle(\"hidden\");\r\n      // console.log(navToggle)\r\n    }\r\n    else{\r\n      // console.log(navToggle, \"else\")\r\n      setNavToggle(\"\");\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n        <nav className={ props.className + \" fixed top-0 w-full flex items-center bg-mukul-400 p-2 flex-wrap\"}>\r\n          <NavLink to=\"#\" className=\"px-2 mr-4 inline-flex items-center\">\r\n            <span className=\"text-xl text-white font-bold uppercase tracking-wide\" data-target=\"#navigation\">Alpha</span>\r\n          </NavLink>\r\n          <button className=\"nav-toggler text-white inline-flex p-2 hover:bg-gray-900 lg:hidden ml-auto\" onClick={()=>navToggler()}>\r\n            <MenuIcon />\r\n          </button>\r\n          <div className={navToggle+\" top-nav w-full lg:inline-flex lg:flex-grow lg:w-auto\"} id=\"navigation\"  onClick={()=>navToggler()}>\r\n            <div className=\"lg:inline-flex lg:flex-row lg:ml-auto flex flex-col\">\r\n              <NavLink to={process.env.PUBLIC_URL + \"/\"} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\">\r\n                <span>Home</span>\r\n              </NavLink>\r\n              <NavLink  to={process.env.PUBLIC_URL + \"/inbox/\"} params={{ data: props.user_name }} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\">\r\n                <span>Inbox</span>\r\n              </NavLink>\r\n              <NavLink to={process.env.PUBLIC_URL + \"/profile/\"} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\">\r\n                <span>{props.user_name}</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    </>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const Profile = (props) => {\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n  };\r\n  const user = props.user;\r\n  // console.log(user);\r\n  return (\r\n    <>\r\n      <div className=\"mt-16\">\r\n        <h1> Login Successful </h1>\r\n        <h4>Name : {user.name}</h4>\r\n        <h4>User Name : {user.user_name}</h4>\r\n        <h4>email : {user.email}</h4>\r\n        <h4>Phone No : {user.phone}</h4>\r\n      </div>\r\n      <Link to={process.env.PUBLIC_URL+\"/\"}>\r\n        <button\r\n          onClick={() => {\r\n            logout();\r\n          }}\r\n        >\r\n          Log out\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { Route, Switch} from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\n// import { Header } from \"./Header\";\r\n// import \"../style/header.css\";\r\n// import { LinkPage } from \"./LinkPage\";\r\n// import \"../style/home.css\";\r\n// import { Profile } from \"./Profile\";\r\n\r\n\r\nexport const Home = (props) => {\r\n  const user = props.data.user;\r\n  const data = props.data.user_data;\r\n  // console.log(data)\r\n  return (<div>\r\n\r\n    <div className=\"mt-16\">\r\n      <h1>Hello {user.name}</h1>\r\n      <h2> Welcome to the Website Alpha</h2>\r\n    </div>\r\n    <div>\r\n      {data.data[0] ?\r\n      <>\r\n      <p>Your link is available <a href={process.env.PUBLIC_URL+\"/page/\"+data.user_name}>Here</a></p>\r\n      <Link to={process.env.PUBLIC_URL+\"/links/\"} params={{data: data}} ><button>Add Links</button></Link>\r\n      </>\r\n      :\r\n      <>\r\n      <p>You have not saved anything yet</p>\r\n      <Link to={process.env.PUBLIC_URL+\"/links/\"} params={{data: data}} ><button>Add Links</button></Link>\r\n      </>}\r\n    </div>\r\n  </div>)\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst UPDATE_URL = process.env.REACT_APP_SERVER + \"/update/link\";\r\n\r\n// console.log(UPDATE_URL)\r\n// console.log(process.env.PUBLIC_URL)\r\n\r\nlet firstRun = true;\r\nlet initLinks = [];\r\n\r\nexport const AddLinks = (props) => {\r\n  // console.log(props.data.user_data.user_name)\r\n\r\n  // let initLinks = props.data.user_data.data;\r\n\r\n  if (firstRun) {\r\n    // console.log(\"first run\")\r\n    initLinks = props.data.user_data.data;\r\n    firstRun = false;\r\n  }\r\n\r\n  const onDelete = (link) => {\r\n    // console.log(\"deleting the link \");\r\n    setLinks(\r\n      links.filter((e) => {\r\n        return e !== link;\r\n      })\r\n    );\r\n  };\r\n\r\n  const addLink = (title, link) => {\r\n    const newLink = {\r\n      title: title,\r\n      link: link,\r\n    };\r\n    setLinks([...links, newLink]);\r\n    // console.log(newLink)\r\n  };\r\n\r\n  const [links, setLinks] = useState(initLinks);\r\n\r\n  useEffect(() => {\r\n    update(links);\r\n    initLinks = links;\r\n  }, [links]);\r\n\r\n  return (\r\n    <div className=\"mt-16 grid justify-center justify-items-center\">\r\n      <AddLink addLink={addLink} />\r\n      <h3>\r\n        Your link is available on{\" \"}\r\n        <a\r\n          href={\r\n            process.env.PUBLIC_URL + \"/page/\" + props.data.user_data.user_name\r\n          }\r\n          target=\"blank\"\r\n        >\r\n          {process.env.PUBLIC_URL + \"/page/\" + props.data.user_data.user_name}\r\n        </a>\r\n      </h3>\r\n      <Links links={links} onDelete={onDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst update = async (links) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(UPDATE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        // public\r\n        data: links,\r\n      }),\r\n    });\r\n    // const user_data = await res.json();\r\n    // console.log(user_data.data);\r\n    // return user_data.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nconst Links = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"grid justify-center justify-items-center\">\r\n        <h3>Your Links</h3>\r\n        {props.links.length === 0\r\n          ? \"No links to display\"\r\n          : props.links.map((link, ind) => {\r\n              return (\r\n                <OneLink key={ind} link={link} onDelete={props.onDelete} />\r\n              );\r\n            })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst OneLink = ({ link, onDelete }) => {\r\n  return (\r\n    <>\r\n      <div className=\"grid justify-items-center pt-5\">\r\n        <div className=\"flex flex-wrap\">\r\n          <h3 className=\"mx-2\">{link.title}</h3>\r\n          <button\r\n            onClick={() => {\r\n              onDelete(link);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <a href={link.link} target=\"blank\">\r\n            {link.link}\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddLink = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !link) {\r\n      alert(\"Title or Link cannot be blank\");\r\n    } else {\r\n      props.addLink(title, link);\r\n      setTitle(\"\");\r\n      setLink(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form className=\"form\" onSubmit={submit}>\r\n          <h2>Add a Link</h2>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link</label>\r\n            <input\r\n              type=\"text\"\r\n              value={link}\r\n              onChange={(e) => {\r\n                setLink(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Add Link</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\n\r\n{\"data\": [{\"title\": \"hello\",\r\n    \"link\": \"hello.com\"\r\n},\r\n{\"title\": \"hello2\",\r\n    \"link\": \"hello2.com\"\r\n}\r\n],\r\n\"public\" : true\r\n}\r\n\r\n\r\n*/\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const Friend = (props) => {\r\n    // console.log(props.data.chat_id);\r\n    return (\r\n      <>\r\n        {/* <div\r\n          onClick={() => {\r\n            props.openChat(props.data.to_user_name);\r\n          }}\r\n        > */}\r\n        <Link to={props.data.chat_id} className=\"bg-white\">\r\n          <div className=\"flex sm:justify-center cursor-pointer mt-0.5 px-4 py-2 bg-gray-300\">\r\n            <h3>{props.data.to_user_name}</h3>\r\n          </div>\r\n        {/* </div> */}\r\n        </Link>\r\n        {/* <Link to={props.data.chat_id} className=\"bg-white\">Open chat</Link> */}\r\n      </>\r\n    );\r\n  };\r\n  ","import React from \"react\";\r\nimport { format } from \"timeago.js\";\r\n\r\n\r\nexport const Message = (props) => {\r\n    let name = \"\";\r\n    let classes = \"middle\";\r\n    let classes2 = \"\";\r\n    if (props.data) {\r\n      name = props.own ? \"\" : props.data.name;\r\n      classes = props.own ? \"float-right clear-both\" : \"float-left clear-both\";\r\n      classes2 = props.own ? \"bg-gray-300\" : \"bg-white\";\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        {props.data ? (\r\n          <div ref={props.scrollRef} className={\"message_box \" + classes}>\r\n            <label className=\"text-xs text-white opacity-40\">{name}</label>\r\n            <div\r\n              className={\"overflow-x-hidden px-3.5 py-1.5 rounded-xl \" + classes2}\r\n            >\r\n              {props.data.message}\r\n              <br />\r\n              {/* <TimeAgo date={props.data.time} /> */}\r\n            </div>\r\n            <p\r\n              className={\r\n                props.own\r\n                  ? \"justify-end flex text-xs p-0 m-0\"\r\n                  : \"justify-start flex text-xsm p-0 m-0\"\r\n              }\r\n            >\r\n              <span className=\"text-white opacity-80\">\r\n                {props.data.time ? format(props.data.time) : \"\"}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div ref={props.scrollRef} className={\"message_box float-left clear-both\"}>\r\n            <label className=\"text-xs text-white opacity-40\">{props.inMsgLive.from_user_name}</label>\r\n            <div\r\n              className={\"overflow-x-hidden px-3.5 py-1.5 rounded-xl bg-gray-200\"}\r\n            >\r\n              {props.inMsgLive.message}\r\n              <br />\r\n              {/* <TimeAgo date={props.data.time} /> */}\r\n            </div>\r\n            <p\r\n              className={\r\n                props.own\r\n                  ? \"justify-end flex text-xs p-0 m-0\"\r\n                  : \"justify-start flex text-xsm p-0 m-0\"\r\n              }\r\n            >\r\n              <span className=\"text-white opacity-80\">\r\n                {props.inMsgLive ? \"typing...\" : \"\"}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  ","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ArrowBackIosNewRoundedIcon from \"@mui/icons-material/ArrowBackIosNewRounded\";\r\nimport { Message } from \"./Message\";\r\nimport Cookies from \"js-cookie\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { collapseClasses } from \"@mui/material\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/add/chats/\";\r\nconst SEND_URL = process.env.REACT_APP_SERVER + \"/update/chat\";\r\n\r\nexport const ChatWindow = (props) => {\r\n  // console.log(props.chat_id)\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [userName, setUserName] = useState(null);\r\n  const [currentChat, setCurrentChat] = useState(\"\");\r\n  const [messages, setMeassages] = useState([]);\r\n  const [inMsg, setInMsg] = useState(null);\r\n  const [inMsgLive, setInMsgLive] = useState(null);\r\n  const [msgLive, setMsgLive] = useState({\r\n    from_user_name: \"\",\r\n    message: \"\",\r\n  });\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  const [chatData, setChatData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io(URL);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      // console.log(data);\r\n      setInMsg({\r\n        message: data.message,\r\n        name: data.from_user_name,\r\n        time: data.time,\r\n      });\r\n\r\n      setMsgLive({ from_user_name: \"\", message: \"\" });\r\n    });\r\n    socket.current.on(\"getMsgLive\", (data) => {\r\n      // if (data.from_user_name === currentChat) {\r\n      //   setInMsgLive(data);\r\n      // }\r\n      setInMsgLive({\r\n        from_user_name: data.from_user_name,\r\n        message: data.message,\r\n      });\r\n      // console.log(inMsgLive);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userName) {\r\n      socket.current.emit(\"addUser\", { user_name: userName, user_id: \"data\" });\r\n    }\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    // console.log(inMsgLive);\r\n    if (inMsgLive && currentChat === inMsgLive.from_user_name) {\r\n      setMsgLive(inMsgLive);\r\n    }\r\n    // else if (inMsgLive && currentChat !== inMsgLive.from_user_name) {\r\n    //   setMsgLive({ from_user_name: \"\", message: \"\" });\r\n    // }\r\n  }, [inMsgLive, currentChat]);\r\n\r\n  useEffect(() => {\r\n    // console.log(inMsg);\r\n    if (inMsg && currentChat === inMsg.name) {\r\n      setMeassages((prev) => [...prev, inMsg]);\r\n    }\r\n  }, [inMsg, currentChat]);\r\n\r\n  // const [chat_window, setChat_windoe] = useState(\"hidden\");\r\n  // const [chat_list, setChat_list] = useState(\"flex\");\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const data = await getChat(props.chat_id);\r\n      setChatData(data);\r\n      // console.log(data);\r\n      // setChat_windoe(\"flex\");\r\n      // setChat_list(\"hidden\");\r\n      setMeassages(data.chat_data);\r\n      setCurrentChat(data.chats_of.with);\r\n      setUserName(data.chats_of.owner);\r\n    }\r\n    fetchData();\r\n  }, [props.chat_id]);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (msg) {\r\n      socket.current.emit(\"sendMessage\", {\r\n        from_user_name: userName,\r\n        to_user_name: currentChat,\r\n        message: msg,\r\n        time: new Date(),\r\n      });\r\n\r\n      const data = {\r\n        message: msg,\r\n        name: userName,\r\n        time: new Date(),\r\n      };\r\n      updateChat(currentChat, data);\r\n      setMeassages([...messages, data]);\r\n      // console.log(msg);f\r\n      setMsg(\"\");\r\n      // setTimeout(() => {\r\n\r\n      //   console.log(msg);\r\n      // }, 1000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const to_user_name = currentChat;\r\n    // console.log(to_user_name)\r\n    socket.current.emit(\"sendMsgLive\", {\r\n      from_user_name: userName,\r\n      to_user_name: to_user_name,\r\n      message: msg,\r\n    });\r\n  }, [msg, currentChat, userName]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, msgLive]);\r\n\r\n  return (\r\n    <>\r\n      {!chatData ? (\r\n        <>\r\n          <span className=\"flex justify-center text-6xl mt-16 text-white p-3 opacity-50 cursor-default\">\r\n            Loading...\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"fixed w-full z-10 sm:w-96 flex justify-center p-3 bg-gray-700 text-white\">\r\n            <Link\r\n              to={process.env.PUBLIC_URL + \"/inbox/\"}\r\n              className=\"sm:hidden absolute left-3 text-white cursor-pointer\"\r\n            >\r\n              <ArrowBackIosNewRoundedIcon />\r\n            </Link>\r\n            <h2>{currentChat}</h2>\r\n          </div>\r\n          <div className=\"flex-grow pt-16 pb-5 mb-8 overflow-y-auto\" id=\"scrollBottom\">\r\n            {messages.map((val, ind) => {\r\n              return (\r\n                //   <div>\r\n                <Message\r\n                  key={ind}\r\n                  user={userName}\r\n                  data={val}\r\n                  own={userName === val.name}\r\n                  scrollRef={scrollRef}\r\n                />\r\n                //   </div>\r\n              );\r\n            })}\r\n            {msgLive.message ? (\r\n              <>\r\n                <Message\r\n                  friend={currentChat}\r\n                  inMsgLive={msgLive}\r\n                  scrollRef={scrollRef}\r\n                />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <form className=\"fixed bottom-0 w-full flex h-12\" id=\"chats-send-container\">\r\n            <input\r\n              className=\"flex-grow p-2.5\"\r\n              type=\"text\"\r\n              placeholder=\" Message...\"\r\n              value={msg}\r\n              onChange={(e) => setMsg(e.currentTarget.value)}\r\n              id=\"chats-messageInp\"\r\n              onKeyDownCapture={(e) => (e.key === \"Enter\" ? submit(e) : null)}\r\n            />\r\n            <button\r\n              className=\"px-4 border-none rounded-none\"\r\n              id=\"chats-btn\"\r\n              onClick={(e) => {\r\n                submit(e);\r\n              }}\r\n            >\r\n              Send\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst getChat = async (chat_id) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL + chat_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    });\r\n    const messages = await res.json();\r\n    //   console.log(messages);\r\n    return messages;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"user not found\");\r\n  }\r\n};\r\n\r\nconst updateChat = async (to_user_name, message) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(SEND_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        to_user_name,\r\n        message,\r\n      }),\r\n    });\r\n    // const result = await res.json();\r\n    // console.log(res);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// import React, { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"../../script/chats\";\r\nimport { Friend } from \"./components/Friend\";\r\nimport { ChatWindow } from \"./components/ChatWindow\";\r\nimport { Route, Switch } from \"react-router\";\r\n\r\n// import TimeAgo from \"timeago-react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import \"../style/chats.css\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/add/chats\";\r\n// const SEND_URL = process.env.REACT_APP_SERVER + \"/update/chat\";\r\n// console.log(URL)\r\n\r\nexport const Inbox = (props) => {\r\n  // console.log(props.user.chats_id);\r\n\r\n  // const [msg, setMsg] = useState(\"\");\r\n  // const [currentChat, setCurrentChat] = useState(null);\r\n  const [addFrndInp, setAddFrndInp] = useState(\"\");\r\n  // const [inMsg, setInMsg] = useState(null);\r\n  // const [inMsgLive, setInMsgLive] = useState({\r\n  //   from_user_name: \"\",\r\n  //   message: \"\",\r\n  // });\r\n  // const [messages, setMeassages] = useState([]);\r\n  const socket = useRef();\r\n  // const scrollRef = useRef();\r\n\r\n  // useEffect(() => {\r\n    // socket.current = io(URL);\r\n  //   socket.current.on(\"getMessage\", (data) => {\r\n  //     setInMsg({\r\n  //       message: data.message,\r\n  //       name: data.from_user_name,\r\n  //       time: data.time,\r\n  //     });\r\n  //     setInMsgLive({ from_user_name: \"\", message: \"\" });\r\n  //   });\r\n  //   socket.current.on(\"getMsgLive\", (data) => {\r\n  //     setInMsgLive(data);\r\n  //   });\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const to_user_name = currentChat;\r\n  //   // console.log(to_user_name)\r\n  //   socket.current.emit(\"sendMsgLive\", {\r\n  //     from_user_name: props.user.user_name,\r\n  //     to_user_name: to_user_name,\r\n  //     message: msg,\r\n  //   });\r\n  // }, [msg, currentChat, props.user.user_name]);\r\n\r\n  // useEffect(() => {\r\n  //   if (inMsg && currentChat === inMsg.name) {\r\n  //     setMeassages((prev) => [...prev, inMsg]);\r\n  //   }\r\n  // }, [inMsg, currentChat]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"props user change\")\r\n    socket.current = io(URL);\r\n    socket.current.emit(\"addUser\", {user_name: props.user.user_name, user_id: props.user._id });\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      console.log(users);\r\n    });\r\n  }, [props.user]);\r\n\r\n  // const submit = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (msg) {\r\n  //     const to_user_name = currentChat;\r\n  //     socket.current.emit(\"sendMessage\", {\r\n  //       from_user_name: props.user.user_name,\r\n  //       to_user_name: to_user_name,\r\n  //       message: msg,\r\n  //       time: new Date(),\r\n  //     });\r\n\r\n  //     const data = {\r\n  //       message: msg,\r\n  //       name: props.user.user_name,\r\n  //       time: new Date(),\r\n  //     };\r\n  //     updateChat(currentChat, data);\r\n  //     setMeassages([...messages, data]);\r\n  //     setMsg(\"\");\r\n  //     // console.log(data);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  // }, [messages, inMsgLive]);\r\n\r\n  const path = window.location.pathname.split(\"/\").slice(2,4);\r\n  // console.log(path[0])\r\n  // console.log(path[1])\r\n\r\n  const [chat_window, setChat_windoe] = useState(\"hidden\");\r\n  const [chat_list, setChat_list] = useState(\"flex\");\r\n  useEffect(() => {\r\n    if (path[0]===\"inbox\" && path[1] ) {\r\n      // console.log(\"chat open\")\r\n      setChat_windoe(\"flex\");\r\n      setChat_list(\"hidden\");\r\n    } else {\r\n      setChat_windoe(\"hidden\");\r\n      setChat_list(\"flex\");\r\n    }\r\n  }, [path])\r\n  // openChat()\r\n  // const back = () => {\r\n  //   // console.log(\"i am back\")\r\n  //   setChat_windoe(\"hidden\");\r\n  //   setChat_list(\"flex\");\r\n  // };\r\n\r\n  const addFriend = async (e) => {\r\n    e.preventDefault();\r\n    if (addFrndInp) {\r\n      console.log(addFrndInp);\r\n      const chat = await addChat(addFrndInp);\r\n      if (chat) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"flex sm:pt-16 h-screen justify-center\">\r\n        <div className=\"flex h-full sm:border-2 rounded-lg\">\r\n          <div\r\n            className={\r\n              chat_list +\r\n              \" chat_list mt-16 sm:mt-0 w-screen sm:w-auto bg-gray-500 sm:flex flex-col\"\r\n            }\r\n          >\r\n            <div className=\"grid justify-center bg-gray-700 text-white px-1 py-3\">\r\n              <h2>{props.user.user_name}</h2>\r\n            </div>\r\n\r\n            <div className=\"overflow-y-auto\">\r\n              {props.user.chats_id.map((val, ind) => {\r\n                return <Friend key={ind} data={val} />;\r\n              })}\r\n              <div className=\"flex flex-col m-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter friend's user name\"\r\n                  value={addFrndInp}\r\n                  onChange={(e) => setAddFrndInp(e.currentTarget.value)}\r\n                />\r\n                <button\r\n                  className=\"m-1\"\r\n                  onClick={(e) => {\r\n                    addFriend(e);\r\n                  }}\r\n                >\r\n                  Add friend\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div\r\n            className={\r\n              chat_window +\r\n              \" sm:flex h-screen sm:h-auto z-50 sm:z-0 flex-col w-screen sm:w-96 bg-blue-600\"\r\n            }\r\n          >\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path={process.env.PUBLIC_URL + \"/inbox/\"}\r\n                render={() => {\r\n                  return (\r\n                    <>\r\n                      <span className=\"flex justify-center text-6xl mt-16 text-white p-3 opacity-50 cursor-default\">\r\n                        open a chat\r\n                      </span>\r\n                    </>\r\n                  );\r\n                }}\r\n              />\r\n              <Route\r\n                exact\r\n                path={process.env.PUBLIC_URL + \"/inbox/:id\"}\r\n                render={(props) => {\r\n                  // console.log(props.match.params.id);\r\n                  // console.log(props);\r\n                  return (\r\n                    <>\r\n                      <ChatWindow\r\n                        chat_id={props.match.params.id}\r\n                        // currentChat={currentChat}\r\n                        // messages={messages}\r\n                        // scrollRef={scrollRef}\r\n                        // user={props.user.user_name}\r\n                        // msg={msg}\r\n                        // setMsg={setMsg}\r\n                        // submit={submit}\r\n                        // back={back}\r\n                        // inMsgLive={inMsgLive}\r\n                      />\r\n                    </>\r\n                  );\r\n                }}\r\n              />\r\n            </Switch>\r\n            {/* {currentChat ? (\r\n              <>\r\n                <ChatWindow\r\n                  currentChat={currentChat}\r\n                  messages={messages}\r\n                  scrollRef={scrollRef}\r\n                  user={props.user.user_name}\r\n                  msg={msg}\r\n                  setMsg={setMsg}\r\n                  submit={submit}\r\n                  back={back}\r\n                  inMsgLive={inMsgLive}\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"flex justify-center text-6xl mt-16 text-white p-3 opacity-50 cursor-default\">\r\n                  open a chat\r\n                </span>\r\n              </>\r\n            )} */}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst addChat = async (chat_id) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: chat_id,\r\n      }),\r\n    });\r\n    const messages = await res.json();\r\n    // console.log(messages);\r\n    return messages;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"user not found\");\r\n  }\r\n};\r\n\r\n\r\n// const updateChat = async (to_user_name, message) => {\r\n//   const token = Cookies.get(\"token\");\r\n//   try {\r\n//     // const res =\r\n//     await fetch(SEND_URL, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         Accept: \"application/json\",\r\n//         \"Content-Type\": \"application/json\",\r\n//         Authorization: token,\r\n//       },\r\n//       body: JSON.stringify({\r\n//         to_user_name,\r\n//         message,\r\n//       }),\r\n//     });\r\n//     // const result = await res.json();\r\n//     // console.log(res);\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//     alert(\"Something went wrong\");\r\n//   }\r\n// };\r\n\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport { Header } from \"../components/Header\";\r\n// import \"../style/header.css\";\r\n// import \"../style/home.css\";\r\nimport { Profile } from \"../containers/profile/Profile\";\r\nimport { Home } from \"../containers/home/Home\";\r\nimport { AddLinks } from \"../containers/addLink/AddLink\";\r\nimport { Inbox } from \"../containers/inbox/Inbox\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/\";\r\n// console.log(URL)\r\nexport default class LoginRouter extends React.Component {\r\n  // const token = \"Bearer \" + props.route.params.token;\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n    status: null,\r\n  };\r\n\r\n  // logout = () => {\r\n  //   Cookies.remove(\"token\");\r\n  // };\r\n  async componentDidMount() {\r\n    const token = this.props.token;\r\n    if (token) {\r\n      // Fetch data for home page\r\n      const res = await fetch(URL, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"*/*\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      const data = await res.json();\r\n      this.setState({\r\n        data: data,\r\n        loading: false,\r\n        status: res.status,\r\n      });\r\n      // console.log(res.status);\r\n      // console.log(data);\r\n      // console.log(this.state.user);\r\n      // console.log(this.state.data);\r\n      // Cookies.remove(\"token\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.data)\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <section className=\"main_body\"> Loading... </section>\r\n        ) : (\r\n          <>\r\n            {this.state.status === 200 ? (\r\n              <UserFound data={this.state.data} token={this.props.token} />\r\n              ) : (\r\n              <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserFound = (props) => {\r\n  // console.log(props);\r\n  const data = props.data;\r\n  return (\r\n    <>\r\n      <Header user_name={data.user.user_name} className=\"z-10\" />\r\n      <section className=\"grid justify-center align-middle h-full bg-mukul-100\">\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/\"}\r\n          render={() => {\r\n            return (\r\n              <>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Home data={data} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/links/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <AddLinks data={data} token={props.token} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/profile/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Profile user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    path={process.env.PUBLIC_URL + \"/inbox/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Inbox user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  {/* <Route exact path=\"/inbox\" component={Inbox} /> */}\r\n                </Switch>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React, {} from \"react\";\r\nimport { Redirect} from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginRouter from \"./LoginRouter\";\r\n\r\n\r\nexport const MainRouter = () =>{\r\n    const token = Cookies.get(\"token\");\r\n    \r\n\r\n    return(<> \r\n        {token ? \r\n        <>\r\n        <Redirect to={process.env.PUBLIC_URL+\"/inbox/\"} />\r\n        <LoginRouter token={token}/> \r\n        </>\r\n        :\r\n        <>\r\n        <Redirect to={process.env.PUBLIC_URL+\"/signin/\"} />\r\n        </>\r\n        }\r\n    </>)\r\n}","import React from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\n// const cookies = require(\"js-cookie\");\r\n\r\n// import \"fetch\"\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/signin\";\r\n// console.log(URL)\r\n\r\nexport default class Signin extends React.Component {\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    user_name: \"\",\r\n    password: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: this.state.user_name,\r\n        password: this.state.password,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      const token = \"Bearer \" + data.token;\r\n      await Cookies.set(\"token\", token);\r\n      this.setState({ username: \"\", password: \"\", islogin: true });\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n      this.setState({ user_name: \"\", password: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"main_body\">\r\n              <div className=\"form\">\r\n                <h2 className=\"form-heading\">Login</h2>\r\n                <div className=\"signin-form\">\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.submit(e) : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <button\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <Link\r\n                  className=\"form-link\"\r\n                  to={process.env.PUBLIC_URL + \"/signup/\"}\r\n                >\r\n                  Click to make an account\r\n                </Link>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\n// import Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n// const cookies = require(\"js-cookie\");\r\n\r\n// import \"fetch\"\r\nconst URL = process.env.REACT_APP_SERVER+\"/signup\";\r\n\r\nexport default class Signup extends React.Component {\r\n  // const token = \"Bearer \" + props.route.params.token;\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    name: \"\",\r\n    user_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // // Fetch data for home page\r\n      // method: \"GET\",\r\n      // headers: {\r\n      //   Accept: \"*/*\",\r\n      //   Authorization: token,\r\n      // },\r\n\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        user_name: this.state.user_name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        phone: this.state.phone,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      // const token = \"Bearer \" + data.token;\r\n      //   await Cookies.set(\"token\", token);\r\n      alert(\"account created please login\");\r\n      this.setState({\r\n        name: \"\",\r\n        user_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        phone: 0,\r\n        islogin: true,\r\n      });\r\n      // console.log(token)\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n    }\r\n    // alert(data.error)\r\n    // console.log(data.token)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL+\"/signin/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"main_body\">\r\n              <div className=\"form\">\r\n                <h2 className=\"form-heading\">Sign UP</h2>\r\n                <div className=\"signup-form\">\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.setState({ name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">Email</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.email}\r\n                      onChange={(e) => {\r\n                        this.setState({ email: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"phone\">Phone No</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={this.state.phone}\r\n                      onChange={(e) => {\r\n                        this.setState({ phone: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <button\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Signup\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <Link className=\"form-link\" to={process.env.PUBLIC_URL+\"/signin/\"}>\r\n                  Already have an account ?? Login\r\n                </Link>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\r\n// import \"../style/link_page.css\"\r\nimport \"../../script/link_page\"\r\n\r\n\r\nexport const LinkPage = (props) => {\r\n    const data = props.data;\r\n    //   console.log(data);\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n                <header>\r\n                    <nav>\r\n                        <div>\r\n                            <h1>BTech 20</h1>\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            <div id=\"time\"></div>\r\n                            <div id=\"date\"></div>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n                <section className=\"body\">\r\n                    <div className=\"color_code\">\r\n                        <h5 className=\"live\">Running...</h5>\r\n                        <h5 className=\"leftToday\">Left</h5>\r\n                        <h5 className=\"today_class\">Todays Class</h5>\r\n                        <h5 className=\"status\">Not for Today</h5>\r\n                    </div>\r\n                    <h2>Semester 3</h2>\r\n\r\n                    <h2 className=\"running\">No Class is Running Now </h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2 className=\"today\">No Classes are Left Today</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide2\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2>All Class Timing and Link</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"course status\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CourseCard = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <div className={props.class}>\r\n            <h3>{props.data.course}</h3>\r\n            {\r\n                props.data.time.map((val, ind) => {\r\n                    return (\r\n                        <Timing\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst Timing = (props) => {\r\n    // console.log(props.data)\r\n    return (\r\n        <>\r\n            <h4 className=\"time\">{props.data.time}</h4>\r\n            {\r\n                props.data.section.map((val, ind) => {\r\n                    return (\r\n                        <ClassLink\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst ClassLink = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <h5>\r\n            <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n        </h5>\r\n    </>)\r\n}\r\n","\r\n// import \"../style/link_page.css\"\r\nimport \"../../script/link_page\"\r\n\r\n\r\nexport const PublicPage = (props) => {\r\n    const data = props.data;\r\n    //   console.log(data);\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n\r\n                <section className=\"body\">\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <Card\r\n                                        key={ind}\r\n                                        data={val}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Card = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <div className=\"status course\">\r\n            <a href={props.data.link} target=\"blank\">{props.data.title}</a>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n// const Timing = (props) => {\r\n//     // console.log(props.data)\r\n//     return (\r\n//         <>\r\n//             <h4 className=\"time\">{props.data.time}</h4>\r\n//             {\r\n//                 props.data.section.map((val, ind) => {\r\n//                     return (\r\n//                         <ClassLink\r\n//                             key={ind}\r\n//                             data={val}\r\n//                         />\r\n//                     )\r\n//                 })\r\n//             }\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// const ClassLink = (props) => {\r\n//     // console.log(props.data)\r\n//     return (<>\r\n//         <h5>\r\n//             <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n//         </h5>\r\n//     </>)\r\n// }\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { LinkPage } from \"./LinkPage\";\r\nimport { PublicPage } from \"../public/PublicPage\";\r\n// import { Redirect} from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER+\"/link/\";\r\n// console.log(URL)\r\n\r\nexport default class LinkWebsite extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // console.log(this.props.id)\r\n    const res = await fetch(URL + this.props.id);\r\n    if (res.status === 404) {\r\n      this.setState({ loading: false });\r\n    } else {\r\n      const data = await res.json();\r\n      this.setState({ data: data, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <section className=\"main_body\">\r\n            <h2> Loading... </h2>\r\n          </section>\r\n        ) : (\r\n          <>\r\n            {this.state.data ? (\r\n              <>\r\n                {this.props.id !== \"btech20\" ? (\r\n                  <div>\r\n                    <PublicPage data={this.state.data} />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <LinkPage data={this.state.data} />\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <section className=\"main_body\">\r\n                  <h2>Page not found</h2>\r\n                </section>\r\n                {/* <Redirect to=\"/\" /> */}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\n\r\n\r\nexport const Test = (props) => {\r\n\r\n  // console.log(data)\r\n  return (<>\r\n    <div className=\"w-56 h-56 sm:bg-gray-300 md:bg-gray-400\">\r\n      Hello Test\r\n    </div>\r\n    <a href=\"https://whatsapp.com\">This is link</a>\r\n    <button className=\"m-4 block\">This is button</button>\r\n    <input type=\"text\" />\r\n  </>)\r\n}\r\n","// import \"./style/main.css\";\r\n// import \"./style/header.css\";\r\n// import \"./style/home.css\";\r\nimport \"./style/link_page.css\";\r\n// import \"./style/chats.css\";\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // useLocation,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport { MainRouter } from \"./routes/MainRouter\";\r\nimport Signin from \"./containers/auth/Signin\";\r\nimport Signup from \"./containers/auth/Signup\";\r\n// import Home from \"./containers/Home\";\r\nimport LinkWebsite from \"./containers/public/LinkWebsite\";\r\n// import { Profile } from \"./containers/Profile\";\r\nimport { Test } from \"./containers/Test\";\r\n\r\n\r\nexport const App = () => {\r\n  // console.log(process.env.PUBLIC_URL)\r\n  let querry = window.location.search.split(\"?\").slice(1, 2).join();\r\n  // console.log(window.location);\r\n  // console.log(querry);\r\n  // console.log(querry2);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {querry ? <Redirect to={process.env.PUBLIC_URL + querry} /> : <></>}\r\n        <Switch>\r\n          {/* <Route exact path=\"/\" render={() => {\r\n                // console.log(data)\r\n                return (\r\n                  <>\r\n                    <MainRouter token={this.state.token}/>\r\n                  </>\r\n                );\r\n              }}/> */}\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signin/\"}\r\n            component={Signin}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signup/\"}\r\n            component={Signup}\r\n          />\r\n          {/* <Route exact path=\"/profile\" component={Profile} /> */}\r\n          {/* <Route exact path=\"/signup\" component={Signup} /> */}\r\n          {/* <Route exact path=\"/home\" component={Home} /> */}\r\n          {/* <Route exact path=\"/link/:id\" component={LinkWebsite} /> */}\r\n\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/page/:id\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite id={props.match.params.id} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/test/\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <Test/>\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n\r\n          {/* <Route\r\n            exact\r\n            path=\"/page/:id\"\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite\r\n                    id={props.match.params.id}\r\n                  />\r\n                </>\r\n              );\r\n            }}\r\n          /> */}\r\n\r\n          <MainRouter path={process.env.PUBLIC_URL + \"/\"} />\r\n\r\n          {/* <Redirect to={process.env.PUBLIC_URL} /> */}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// /*\r\n\r\nconst script = () => {\r\n  let months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  let currentDate = new Date();\r\n  let day = currentDate.getDay();\r\n  let hour = currentDate.getHours();\r\n  if (hour.toString().length < 2) {\r\n    hour = \"0\" + hour;\r\n  }\r\n\r\n  let minute = currentDate.getMinutes();\r\n  if (minute.toString().length < 2) {\r\n    minute = \"0\" + minute;\r\n  }\r\n\r\n  let second = currentDate.getSeconds();\r\n  if (second.toString().length < 2) {\r\n    second = \"0\" + second;\r\n  }\r\n\r\n  let date = currentDate.getDate();\r\n  if (date.toString().length < 2) {\r\n    date = \"0\" + date;\r\n  }\r\n\r\n  let month = currentDate.getMonth();\r\n\r\n  // let year = currentDate.getFullYear();\r\n\r\n  let time = hour + \":\" + minute;\r\n\r\n  let courses = document.querySelectorAll(\"#link-page .course\");\r\n\r\n  let liveClasses = document.querySelectorAll(\"#link-page .hide\");\r\n\r\n  let todayClasses = document.querySelectorAll(\"#link-page .hide2\");\r\n\r\n  courses.forEach((val, i) => {\r\n    // console.log(val)\r\n    val.innerText.split(\"\\n\").forEach((val, temp) => {\r\n      if (val[val.length - 3] === \":\") {\r\n        let classTimes = val.split(\",\");\r\n        classTimes.forEach((value, ind) => {\r\n          let classTime = value.split(\" \");\r\n          if (\r\n            time < classTime[classTime.length - 3] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".today\")[0].innerHTML =\r\n              \"Today's Classes Left\";\r\n            todayClasses[i].setAttribute(\"class\", \"course leftToday\");\r\n          }\r\n          if (\r\n            time >= classTime[classTime.length - 3] &&\r\n            time < classTime[classTime.length - 1] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".running\")[0].innerHTML =\r\n              \"Classes Running...\";\r\n            liveClasses[i].setAttribute(\"class\", \"course live\");\r\n          }\r\n          if (classTime.indexOf(days[day]) !== -1) {\r\n            courses[i].setAttribute(\"class\", \"course today_class\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const timer = setInterval(() => {\r\n    currentDate = new Date();\r\n    day = currentDate.getDay();\r\n    hour = currentDate.getHours();\r\n    if (hour.toString().length < 2) {\r\n      hour = \"0\" + hour;\r\n    }\r\n\r\n    minute = currentDate.getMinutes();\r\n    if (minute.toString().length < 2) {\r\n      minute = \"0\" + minute;\r\n    }\r\n\r\n    second = currentDate.getSeconds();\r\n    if (second.toString().length < 2) {\r\n      second = \"0\" + second;\r\n    }\r\n    try {\r\n      document.getElementById(\"time\").innerText =\r\n        hour + \":\" + minute + \":\" + second;\r\n      document.getElementById(\"date\").innerText =\r\n        days[day] + \", \" + months[month] + \" \" + date;\r\n    } catch {\r\n      //   console.log(\"timer timer\")\r\n      clearInterval(timer);\r\n    }\r\n\r\n    if (\r\n      (minute.toString() === \"00\" || minute.toString() === \"30\") &&\r\n      second.toString() === \"00\"\r\n    ) {\r\n      window.location.reload();\r\n    }\r\n  }, 1000);\r\n\r\n  // console.log(\"hello\")\r\n};\r\n\r\n\r\nconst start = setInterval(() => {\r\n  const load = document.getElementById(\"time\");\r\n  if (load) {\r\n    script();\r\n    clearInterval(start)\r\n  }\r\n}, 100);\r\n\r\n\r\n// */"],"sourceRoot":""}