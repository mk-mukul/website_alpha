{"version":3,"sources":["components/Header.js","containers/profile/Profile.js","containers/inbox/components/Friend.js","containers/inbox/components/Message.js","containers/inbox/components/ChatWindow.js","containers/assets/sounds/message_in.mp3","containers/inbox/Inbox.js","components/Loading.js","routes/LoginRouter.js","routes/MainRouter.js","containers/auth/Signin.js","containers/auth/Signup.js","containers/public/LinkPage.js","containers/public/PublicPage.js","containers/public/LinkWebsite.js","containers/auth/VerificationId.js","containers/auth/Verification.js","containers/auth/ChangePassword.js","containers/auth/ChangePasswordId.js","App.js","reportWebVitals.js","index.js","script/link_page.js"],"names":["Header","props","useState","navToggle","setNavToggle","navToggler","className","to","onClick","id","process","params","data","user_name","Profile","user","name","email","phone","Cookies","remove","window","location","reload","Friend","active","i","actives","length","to_user_name","activeClass","chat_id","path","ref","scrollRef","LastMsg","seenClass","lastMsg","mySeen","time","format","seen","fontSize","message","Message","classes","classes2","reply","own","friend","first","isTime","setIsTime","useEffect","isSeen","isReply","setIsReply","selectMsg","seenTime","ChatWindow","msg","setMsg","userName","setUserName","currentChat","setCurrentChat","messages","setMeassages","inMsg","setInMsg","inMsgLive","setInMsgLive","from_user_name","msgLive","setMsgLive","chatId","setChatId","selectedMsg","setSelectedMsg","setActives","isActive","setIsActives","setSeen","setMySeen","setSeenTime","lastSeen","setLastSeen","settings","setSettings","showTyping","setShowTyping","socket","useRef","inputMessageRef","unMounted","current","io","on","emit","users","Date","prev","from","a","getChat","reverseArr","chat_data","chats_of","with","owner","updatedAt","focus","setTimeout","scrollIntoView","behavior","console","log","fetchData","submit","e","preventDefault","updateChat","map","val","ind","last","type","placeholder","value","onChange","currentTarget","onKeyDownCapture","key","arr","reverseArray","push","token","get","fetch","method","headers","Accept","Authorization","res","json","chat","body","JSON","stringify","alert","Inbox","addFrndInp","setAddFrndInp","chats_id","friends","setFriends","getMessage","setGetMessage","notificationSound","playSound","setPlaySound","isOptions","setIsOptions","seenData","setSeenData","mySeenData","setMySeenData","user_id","_id","audio","Audio","message_in","updateFriends","play","pathname","split","slice","chat_window","setChat_windoe","chat_list","setChat_list","addFriend","addChat","logout","updateShowTypingSetting","updateSeetings","sortTime","exact","render","match","chats","sort","b","setting","Loading","LoginRouter","state","loading","status","this","setState","React","Component","UserFound","MainRouter","querry","search","join","Signin","password","set","username","islogin","error","inputUserNameRef","createRef","inputPasswordRef","target","Signup","swal","change","inputNameRef","inputEmailRef","inputPhoneRef","htmlFor","LinkPage","class","CourseCard","course","Timing","section","ClassLink","href","link","PublicPage","Card","title","LinkWebsite","url","VerificationId","setLoading","verify","Verification","setEmail","inputRef","setStatus","ChangePassword","ChangePasswordId","setPassword","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","start","setInterval","months","days","currentDate","day","getDay","hour","getHours","toString","minute","getMinutes","second","getSeconds","date","getDate","month","getMonth","courses","querySelectorAll","liveClasses","todayClasses","forEach","innerText","temp","classTime","indexOf","innerHTML","setAttribute","timer","clearInterval","script"],"mappings":"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","file":"static/js/main.545e6c19.chunk.js","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nexport const Header = (props) => {\r\n\r\n  const [navToggle, setNavToggle] = useState(\"hidden\");\r\n  const navToggler = () =>{\r\n    if (navToggle === \"\") {\r\n      setNavToggle(\"hidden\");\r\n    }\r\n    else{\r\n      setNavToggle(\"\");\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n        <nav className={ props.className + \" fixed top-0 w-full flex items-center bg-background-801 p-2 flex-wrap\"}>\r\n          <NavLink to=\"#\" className=\"px-2 mr-4 inline-flex items-center\">\r\n            <span className=\"text-xl text-light-101 font-bold uppercase tracking-wide\" data-target=\"#navigation\">Alpha</span>\r\n          </NavLink>\r\n          <button className=\"nav-toggler text-light-101 inline-flex p-2 hover:bg-background-301 lg:hidden ml-auto\" onClick={()=>navToggler()}>\r\n            <MenuIcon />\r\n          </button>\r\n          <div className={navToggle+\" top-nav w-full lg:inline-flex lg:flex-grow lg:w-auto\"} id=\"navigation\"  onClick={()=>navToggler()}>\r\n            <div className=\"lg:inline-flex lg:flex-row lg:ml-auto flex flex-col\">\r\n              {/* <NavLink to={process.env.PUBLIC_URL + \"/\"} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded font-medium text-light-101 hover:text-dark-801 hover:bg-primary-101\">\r\n                <span>Home</span>\r\n              </NavLink> */}\r\n              <NavLink  to={process.env.PUBLIC_URL + \"/inbox/\"} params={{ data: props.user_name }} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded font-medium text-light-101 hover:text-dark-801 hover:bg-primary-101\">\r\n                <span>Inbox</span>\r\n              </NavLink>\r\n              <NavLink to={process.env.PUBLIC_URL + \"/profile/\"} className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded font-medium text-light-101 hover:text-dark-801 hover:bg-primary-101\">\r\n                <span>{props.user_name}</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    </>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const Profile = (props) => {\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n    window.location.reload()\r\n  };\r\n  const user = props.user;\r\n  return (\r\n    <div className=\"min-h-screen text-primary-101\">\r\n      <div className=\"mt-16\">\r\n        <h1>Hii... {user.name}</h1>\r\n        <h4>Name : {user.name}</h4>\r\n        <h4>User Name : {user.user_name}</h4>\r\n        <h4>email : {user.email}</h4>\r\n        <h4>Phone No : {user.phone}</h4>\r\n      </div>\r\n      <Link to={process.env.PUBLIC_URL+\"/\"}>\r\n        <button className=\"bg-background-401 hover:bg-background-501\"\r\n          onClick={() => {\r\n            logout();\r\n          }}\r\n        >\r\n          Log out\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"timeago.js\";\r\nimport DoneRoundedIcon from \"@mui/icons-material/DoneRounded\";\r\nimport DoneAllRoundedIcon from \"@mui/icons-material/DoneAllRounded\";\r\n\r\nexport const Friend = (props) => {\r\n\r\n  var active = false;\r\n  for (let i = 0; i < props.actives.length; i++) {\r\n    active =\r\n      props.actives[i].user_name === props.data.to_user_name ? true : false;\r\n    if (active) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  let activeClass = \"hover:bg-background-401 cursor-pointer\"\r\n  if (props.data.chat_id===props.path) {\r\n    activeClass = \"bg-background-301 cursor-default\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to={props.data.chat_id} className=\"\">\r\n        <div\r\n          ref={props.scrollRef ? props.scrollRef : null} \r\n          className={\"flex mt-0.5 px-2 py-2 text-light-101 \"+activeClass}\r\n        >\r\n          <div className=\"h-10 w-10 flex-shrink-0 relative rounded-full bg-light-301\">\r\n            {active ? (\r\n              <>\r\n                <div className=\"h-2.5 w-2.5 rounded-full absolute bottom-0 right-1 bg-green-400\"></div>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <LastMsg user_name={props.user_name} data={props.data} />\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nconst LastMsg = (props) => {\r\n  let seenClass = \"text-light-401\";\r\n\r\n  if (props.data.lastMsg) {\r\n    if (props.data.lastMsg.name === props.data.to_user_name) {\r\n      seenClass = props.data.mySeen\r\n        ? \"text-light-401\"\r\n        : \"font-medium text-light-201 pl-3\";\r\n    }\r\n  }\r\n  // console.log(props.data.to_user_name)\r\n  // console.log(props.data.lastMsg.name)\r\n  return (\r\n    <>\r\n      <div className=\"pl-2 flex-grow w-20\">\r\n        <div className=\"flex justify-between\">\r\n          <h4 className=\"font-bold text-sm truncate\">\r\n            {props.data.to_user_name}\r\n          </h4>\r\n          <p className=\"text-xs text-light-401 truncate\">\r\n            {props.data.lastMsg\r\n              ? props.data.lastMsg.time\r\n                ? format(props.data.lastMsg.time)\r\n                : \"\"\r\n              : \"\"}\r\n          </p>\r\n        </div>\r\n        {props.data.lastMsg ? (\r\n          <div className=\"text-sm relative flex text-center text-light-401\">\r\n            {props.data.lastMsg.name !== props.data.to_user_name ? (\r\n              <>\r\n                {props.data.seen ? (\r\n                  <DoneAllRoundedIcon\r\n                    fontSize=\"small\"\r\n                    className=\"text-blue-500\"\r\n                  />\r\n                ) : (\r\n                  <DoneRoundedIcon fontSize=\"small\" />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                {props.data.mySeen ? (\r\n                  <></>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"h-2 w-2 absolute bottom-1 rounded-full bg-light-201\"></div>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <p className={\"truncate \" + seenClass}>\r\n              {props.data.lastMsg.message}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { format } from \"timeago.js\";\r\nimport ReplyIcon from \"@mui/icons-material/Reply\";\r\n\r\nexport const Message = (props) => {\r\n  // let name = \"\";\r\n  let classes = \"middle\";\r\n  let classes2 = \"\";\r\n  let reply = \"\";\r\n  if (props.data) {\r\n    // name = props.own ? \"\" : props.data.name;\r\n    classes = props.own ? \" flex-row-reverse pl-6\" : \"pr-6\";\r\n    classes2 = props.own ? \"bg-background-501\" : \"bg-background-401\";\r\n  }\r\n  if (props.data.reply) {\r\n    reply =\r\n      props.data.reply.name === props.user\r\n        ? \"bg-background-501\"\r\n        : \"bg-background-401\";\r\n  }\r\n  if (props.friend) {\r\n    classes2 = \"bg-background-201\";\r\n  }\r\n\r\n  const [isTime, setIsTime] = useState(props.first);\r\n  const time = () => {\r\n    isTime ? setIsTime(false) : setIsTime(true);\r\n    // console.log(props.first && !props.isSeen)\r\n  };\r\n  useEffect(() => {\r\n    setIsTime(props.first && !props.isSeen);\r\n  }, [props.first, props.isSeen]);\r\n\r\n  const [isReply, setIsReply] = useState(\"truncate\");\r\n  const showReply = () => {\r\n    isReply ? setIsReply(\"\") : setIsReply(\"truncate\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={props.first ? props.scrollRef : null}\r\n        className={\"w-full clear-both mb-1 px-2\"}\r\n      >\r\n        <div className={\"flex \" + classes}>\r\n          <div\r\n            className={\r\n              \" overflow-x-hidden px-1 py-1 rounded-xl cursor-default \" +\r\n              classes2\r\n            }\r\n          >\r\n            {props.data.reply ? (\r\n              <div\r\n                onClick={() => showReply()}\r\n                className={\r\n                  \" px-3 pb-1 border-black rounded-xl cursor-pointer \" + reply\r\n                }\r\n              >\r\n                <p className=\"text-xs text-light-701\">\r\n                  {props.data.reply.name === props.user\r\n                    ? \"you\"\r\n                    : props.data.reply.name}\r\n                </p>\r\n                <p className={\"text-xs text-light-501 pb-0.5 \" + isReply}>\r\n                  {props.data.reply.message}\r\n                </p>\r\n                <hr className=\"border-white opacity-20\" />\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div\r\n              className=\"px-2.5 py-0.5 text-light-201 text-sm\"\r\n              onClick={() => {\r\n                time();\r\n              }}\r\n            >\r\n              <p className=\"\">{props.data.message}</p>\r\n            </div>\r\n          </div>\r\n          {props.friend ? (\r\n            <></>\r\n          ) : (\r\n            <div\r\n              className=\"flex cursor-pointer text-white opacity-30 hover:opacity-80 flex-col mx-1 justify-center\"\r\n              onClick={() => {\r\n                props.selectMsg(props.data);\r\n              }}\r\n            >\r\n              <ReplyIcon />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            props.own\r\n              ? \"justify-end flex text-xsm p-0 m-0\"\r\n              : \"justify-start flex text-xsm p-0 m-0\"\r\n          }\r\n        >\r\n          <span className=\"text-white opacity-80 cursor-default\">\r\n            {props.friend ? <label>typing...</label> : <></>}\r\n            {isTime ? (\r\n              <>\r\n                {/* <label className=\"text-xs text-white opacity-70\">{name} </label> */}\r\n                {props.data.time ? format(props.data.time) : \"\"}\r\n              </>\r\n            ) : (\r\n              <>\r\n                {props.first && props.isSeen && props.own ? (\r\n                  <div className=\"flex justify-end\">seen {props.seenTime?format(props.seenTime):\"\"}</div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </>\r\n            )}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ArrowBackIosNewRoundedIcon from \"@mui/icons-material/ArrowBackIosNewRounded\";\r\nimport ClearRoundedIcon from \"@mui/icons-material/ClearRounded\";\r\nimport { Message } from \"./Message\";\r\nimport Cookies from \"js-cookie\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { format } from \"timeago.js\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/chats/\";\r\nconst SEND_URL = process.env.REACT_APP_SERVER + \"/update/chat\";\r\n\r\nexport const ChatWindow = (props) => {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [userName, setUserName] = useState(null);\r\n  const [currentChat, setCurrentChat] = useState(\"\");\r\n  const [messages, setMeassages] = useState([]);\r\n  const [inMsg, setInMsg] = useState(null);\r\n  const [inMsgLive, setInMsgLive] = useState(null);\r\n  const [msgLive, setMsgLive] = useState({\r\n    from_user_name: \"\",\r\n    message: \"\",\r\n  });\r\n  const [chatId, setChatId] = useState(null);\r\n  const [selectedMsg, setSelectedMsg] = useState(null);\r\n  const [actives, setActives] = useState([]);\r\n  const [isActive, setIsActives] = useState(false);\r\n  const [seen, setSeen] = useState(false);\r\n  const [mySeen, setMySeen] = useState(true);\r\n  const [seenTime, setSeenTime] = useState(\"\");\r\n  const [lastSeen, setLastSeen] = useState(null);\r\n  const [settings, setSettings] = useState({});\r\n  const [showTyping, setShowTyping] = useState(true);\r\n\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n  const inputMessageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      if (chatId !== props.chat_id) {\r\n        setChatId(null);\r\n        setMeassages([]);\r\n        setCurrentChat(\"\");\r\n        setUserName(null);\r\n        setSeen(false);\r\n        setSeenTime(\"\");\r\n        setMySeen(true);\r\n        setLastSeen(null);\r\n        setSelectedMsg(null);\r\n        setMsg(\"\");\r\n        setMsgLive({\r\n          from_user_name: \"\",\r\n          message: \"\",\r\n        });\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [props.chat_id, chatId]);\r\n\r\n  // get message from socket io\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      socket.current = io(URL);\r\n      socket.current.on(\"getMessage\", (data) => {\r\n        if (!unMounted) {\r\n          setInMsg(data);\r\n        }\r\n        setMsgLive({ from_user_name: \"\", message: \"\" });\r\n      });\r\n      socket.current.on(\"getMsgLive\", (data) => {\r\n        if (!unMounted) {\r\n          setInMsgLive(data);\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, []);\r\n\r\n  // inform socket io that user has joined\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      if (userName) {\r\n        socket.current.emit(\"addUser\", { user_name: userName });\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      socket.current.on(\"getUsers\", (users) => {\r\n        if (!unMounted) {\r\n          setActives(users);\r\n        }\r\n      });\r\n      socket.current.on(\"getSeen\", (data) => {\r\n        if (data.from_user_name === currentChat) {\r\n          if (!unMounted) {\r\n            setSeen(true);\r\n            setSeenTime(data.seenTime);\r\n            // console.log(data);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [currentChat]);\r\n\r\n  // find whether friend is active or not\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      setIsActives(false);\r\n      setMsgLive({\r\n        from_user_name: \"\",\r\n        message: \"\",\r\n      });\r\n    }\r\n    for (let i = 0; i < actives.length; i++) {\r\n      if (actives[i].user_name === currentChat) {\r\n        if (!unMounted) {\r\n          setIsActives(true);\r\n        }\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [currentChat, actives]);\r\n\r\n  // set active on offline\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      if (isActive === false) {\r\n        setLastSeen(new Date());\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [isActive]);\r\n\r\n  // display live typing...\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (inMsgLive && currentChat === inMsgLive.from_user_name) {\r\n      if (!unMounted) {\r\n        setMsgLive(inMsgLive);\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [inMsgLive, currentChat]);\r\n\r\n  // desplay new message\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (\r\n      inMsg &&\r\n      (currentChat === inMsg.from_user_name ||\r\n        userName === inMsg.from_user_name)\r\n    ) {\r\n      if (!unMounted) {\r\n        setMeassages((prev) => [inMsg, ...prev]);\r\n      }\r\n      setInMsg(null);\r\n      socket.current.emit(\"seen\", {\r\n        from_user_name: userName,\r\n        to_user_name: currentChat,\r\n        name: userName,\r\n        isSeen: true,\r\n        lastMsg: inMsg,\r\n        seenTime: new Date(),\r\n        from: \"live\",\r\n      });\r\n      socket.current.emit(\"self\", {\r\n        from_user_name: userName,\r\n        to_user_name: currentChat,\r\n        name: userName,\r\n        lastMsg: inMsg,\r\n        from: \"live\",\r\n      });\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [inMsg, currentChat, userName]);\r\n\r\n  // send seen status\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    const lastMsg = messages.length > 0 ? messages[0] : \"\";\r\n    if (\r\n      !mySeen &&\r\n      !unMounted &&\r\n      currentChat === lastMsg.name &&\r\n      lastMsg.name !== userName &&\r\n      userName\r\n    ) {\r\n      socket.current.emit(\"seen\", {\r\n        from_user_name: userName,\r\n        to_user_name: currentChat,\r\n        name: userName,\r\n        isSeen: true,\r\n        lastMsg: lastMsg,\r\n        seenTime: new Date(),\r\n        from: \"open\",\r\n      });\r\n      socket.current.emit(\"self\", {\r\n        from_user_name: userName,\r\n        to_user_name: currentChat,\r\n        name: userName,\r\n        lastMsg: lastMsg,\r\n        from: \"open\",\r\n      });\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [currentChat, userName, messages, mySeen]);\r\n\r\n  // fetch chat data\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    async function fetchData() {\r\n      try {\r\n        const data = await getChat(props.chat_id, setLastSeen, setSettings);\r\n        if (!data) {\r\n          return;\r\n        }\r\n        if (!unMounted) {\r\n          setChatId(data.chat_id);\r\n          setMeassages(reverseArr(data.chat_data));\r\n          setCurrentChat(data.chats_of.with);\r\n          setUserName(data.chats_of.owner);\r\n          setSeen(data.seen);\r\n          setSeenTime(data.updatedAt);\r\n          setMySeen(data.mySeen);\r\n        }\r\n        inputMessageRef.current.focus();\r\n        setTimeout(() => {\r\n          scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        }, 1000);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchData();\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [props.chat_id]);\r\n\r\n  // send message\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (msg) {\r\n      socket.current.emit(\"sendMessage\", {\r\n        from_user_name: userName,\r\n        to_user_name: currentChat,\r\n        name: userName,\r\n        message: msg,\r\n        reply: selectedMsg,\r\n        time: new Date(),\r\n      });\r\n      const data = {\r\n        message: msg,\r\n        name: userName,\r\n        reply: selectedMsg,\r\n        time: new Date(),\r\n      };\r\n      updateChat(currentChat, data);\r\n      setSeen(false);\r\n      setMeassages([data, ...messages]);\r\n      setMsg(\"\");\r\n      setSelectedMsg(null);\r\n    }\r\n    inputMessageRef.current.focus();\r\n  };\r\n\r\n  // send live typing...\r\n  useEffect(() => {\r\n    const to_user_name = currentChat;\r\n    if (showTyping) {\r\n      socket.current.emit(\"sendMsgLive\", {\r\n        from_user_name: userName,\r\n        to_user_name: to_user_name,\r\n        name: to_user_name,\r\n        message: msg,\r\n        reply: selectedMsg,\r\n      });\r\n    }\r\n  }, [msg, currentChat, userName, selectedMsg, showTyping]);\r\n\r\n  // automatic scroll\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [messages, msgLive]);\r\n\r\n  // set selected message for reply\r\n  const selectMsg = (data) => {\r\n    inputMessageRef.current.focus();\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      setSelectedMsg(data);\r\n      // setTimeout(() => {\r\n      //   scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n      // }, 1000);\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      setShowTyping(settings.showTyping);\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [settings]);\r\n\r\n  const info = () => {\r\n    // console.log(chatId);\r\n    // console.log(props.chat_id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.chat_id !== chatId ? (\r\n        <>\r\n          {false ? (\r\n            <></>\r\n          ) : (\r\n            <span className=\"flex justify-center text-6xl mt-16 text-primary-101 p-3 opacity-50 cursor-default\">\r\n              Loading...\r\n            </span>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"fixed w-full z-10 sm:w-96 flex items-center justify-between py-2 px-3 bg-background-801 text-primary-101\">\r\n            <Link\r\n              to={process.env.PUBLIC_URL + \"/inbox/\"}\r\n              className=\" cursor-pointer\"\r\n            >\r\n              <ArrowBackIosNewRoundedIcon />\r\n            </Link>\r\n            <div className=\"relative grid justify-items-center cursor-default\">\r\n              <h3>{currentChat}</h3>\r\n              {isActive ? (\r\n                <>\r\n                  <div className=\"pl-2.5 text-xsm relative flex\">\r\n                    <div className=\"w-1.5 h-1.5 absolute rounded-full top-1 left-0 bg-green-400\"></div>\r\n                    Active now\r\n                  </div>\r\n                </>\r\n              ) : lastSeen ? (\r\n                <div className=\"text-xsm\">{\"Active \" + format(lastSeen)}</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n            <div onClick={() => info()} className=\"cursor-not-allowed \">\r\n              <InfoIcon />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"flex-grow flex flex-col-reverse pt-16 pb-2 overflow-y-auto\"\r\n            id=\"scrollBottom\"\r\n          >\r\n            {msgLive.message ? (\r\n              <>\r\n                <Message\r\n                  user={userName}\r\n                  friend={currentChat}\r\n                  data={msgLive}\r\n                  scrollRef={scrollRef}\r\n                />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {messages.map((val, ind) => {\r\n              const last = messages.length === ind + 1;\r\n              const own = userName === val.name;\r\n              const first = ind === 0;\r\n              return (\r\n                <Message\r\n                  key={ind}\r\n                  first={first}\r\n                  last={last}\r\n                  user={userName}\r\n                  data={val}\r\n                  own={own}\r\n                  scrollRef={scrollRef}\r\n                  selectMsg={selectMsg}\r\n                  isSeen={seen}\r\n                  seenTime={seenTime}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div>\r\n            {selectedMsg ? (\r\n              <>\r\n                <div className=\"clear-both px-3 py-1 bg-background-301\">\r\n                  <div className=\"flex text-sm justify-between items-center text-light-301 opacity-60\">\r\n                    {selectedMsg.name === userName ? \"you\" : selectedMsg.name}\r\n                    <div\r\n                      onClick={() => {\r\n                        setSelectedMsg(null);\r\n                        inputMessageRef.current.focus();\r\n                      }}\r\n                      className=\"mr-1 cursor-pointer\"\r\n                    >\r\n                      <ClearRoundedIcon fontSize=\"medium\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"truncate text-sm pt-1 pb-2 text-light-101 \">\r\n                    {selectedMsg.message}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <form className=\" bottom-0 w-full flex \" id=\"chats-send-container\">\r\n              <input\r\n                className=\"flex-grow p-2.5\"\r\n                type=\"text\"\r\n                placeholder=\" Message...\"\r\n                ref={inputMessageRef}\r\n                value={msg}\r\n                onChange={(e) => setMsg(e.currentTarget.value)}\r\n                id=\"chats-messageInp\"\r\n                onKeyDownCapture={(e) => (e.key === \"Enter\" ? submit(e) : null)}\r\n              />\r\n              <button\r\n                className=\"px-4 border-none rounded-none text-light-101 bg-background-301\"\r\n                id=\"chats-btn\"\r\n                onClick={(e) => {\r\n                  submit(e);\r\n                }}\r\n              >\r\n                <SendIcon />\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst reverseArr = (arr) => {\r\n  const reverseArray = [];\r\n  for (let i = arr.length - 1; i >= 0; i--) {\r\n    reverseArray.push(arr[i]);\r\n  }\r\n  // console.log(reverseArray);\r\n  return reverseArray;\r\n};\r\n\r\nconst getChat = async (chat_id, setLastSeen, setSettings) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL + chat_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    setLastSeen(data.lastSeen);\r\n    setSettings(data.settings);\r\n    return data.chat;\r\n  } catch (err) {\r\n    console.log(err);\r\n\r\n    return false;\r\n    // alert(\"user not found\");\r\n  }\r\n};\r\n\r\nconst updateChat = async (to_user_name, message) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(SEND_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        to_user_name,\r\n        message,\r\n      }),\r\n    });\r\n    // const result = await res.json();\r\n    // console.log(res);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong, Please Refress the page\");\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/message_in.fd21b5ef.mp3\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { io } from \"socket.io-client\";\r\nimport { Friend } from \"./components/Friend\";\r\nimport { ChatWindow } from \"./components/ChatWindow\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n// import LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n// import VolumeUpIcon from \"@mui/icons-material/VolumeUp\";\r\n// import VolumeOffIcon from \"@mui/icons-material/VolumeOff\";\r\nimport message_in from \"../assets/sounds/message_in.mp3\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/add/chats\";\r\nconst SETINGS_URL = process.env.REACT_APP_SERVER + \"/update/settings\";\r\n\r\nexport const Inbox = (props) => {\r\n  const [addFrndInp, setAddFrndInp] = useState(\"\");\r\n  const [actives, setActives] = useState([]);\r\n  const [friends, setFriends] = useState(props.user.chats_id);\r\n  // const [inMsg, setInMsg] = useState(null);\r\n  const [getMessage, setGetMessage] = useState(null);\r\n  const [playSound, setPlaySound] = useState(\r\n    props.user.settings.notificationSound\r\n  );\r\n  const [showTyping, setShowTyping] = useState(props.user.settings.showTyping);\r\n\r\n  const [isOptions, setIsOptions] = useState(false);\r\n\r\n  const [seenData, setSeenData] = useState(null);\r\n  const [mySeenData, setMySeenData] = useState(null);\r\n\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      socket.current = io(URL);\r\n      socket.current.emit(\"addUser\", {\r\n        user_name: props.user.user_name,\r\n        user_id: props.user._id,\r\n      });\r\n      socket.current.on(\"getUsers\", (users) => {\r\n        setActives(users);\r\n      });\r\n      socket.current.on(\"getMessage\", (data) => {\r\n        setGetMessage(data);\r\n      });\r\n      socket.current.on(\"getSeen\", (data) => {\r\n        setSeenData(data);\r\n      });\r\n      socket.current.on(\"getSelf\", (data) => {\r\n        setMySeenData(data);\r\n      });\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [props.user]);\r\n\r\n  // update incoming message in friends list\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    const audio = new Audio(message_in);\r\n    if (!unMounted) {\r\n      if (getMessage) {\r\n        const arr = friends;\r\n        const i = updateFriends(arr, getMessage, props.user.user_name);\r\n        if (i !== -1) {\r\n          const data = friends[i];\r\n          data.lastMsg = getMessage;\r\n          data.seen = false;\r\n          data.mySeen = false;\r\n          // console.log(data.lastMsg.name)\r\n          setFriends([...friends], (friends[i] = data));\r\n          if (data.lastMsg.name !== props.user.user_name && playSound) {\r\n            // audio.pause();\r\n            audio.play();\r\n          }\r\n        }\r\n        setGetMessage(null);\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [getMessage, friends, props.user, playSound]);\r\n\r\n  // update seen by friends in message list\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      if (seenData) {\r\n        const arr = friends;\r\n        const i = updateFriends(arr, seenData, props.user.user_name);\r\n        setSeenData(null);\r\n        if (i !== -1) {\r\n          setFriends([...friends], (friends[i].seen = true));\r\n        }\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [seenData, friends, props.user]);\r\n\r\n  // update seen my me in friends list\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      if (mySeenData) {\r\n        const arr = friends;\r\n        const i = updateFriends(arr, mySeenData, props.user.user_name);\r\n        setMySeenData(null);\r\n        if (i !== -1) {\r\n          setFriends([...friends], (friends[i].mySeen = true));\r\n        }\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [mySeenData, friends, props.user]);\r\n\r\n  // logic for mobile or small device\r\n  const path = window.location.pathname.split(\"/\").slice(2, 4);\r\n  const [chat_window, setChat_windoe] = useState(\"hidden\");\r\n  const [chat_list, setChat_list] = useState(\"flex\");\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      if (path[0] === \"inbox\" && path[1]) {\r\n        setChat_windoe(\"flex\");\r\n        setChat_list(\"hidden\");\r\n      } else {\r\n        setChat_windoe(\"hidden\");\r\n        setChat_list(\"flex\");\r\n      }\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [path]);\r\n\r\n  // add new friend\r\n  const addFriend = async (e) => {\r\n    e.preventDefault();\r\n    if (addFrndInp) {\r\n      console.log(addFrndInp);\r\n      const chat = await addChat(addFrndInp);\r\n      if (chat) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    await Cookies.remove(\"token\");\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    if (!unMounted) {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, []);\r\n\r\n  const updateSoundSetting = () => {\r\n    updateSeetings(\"notificationSound\", !playSound);\r\n    setPlaySound(!playSound);\r\n  };\r\n  const updateShowTypingSetting = async () => {\r\n    await updateSeetings(\"showTyping\", !showTyping);\r\n    setShowTyping(!showTyping);\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"flex sm:pt-16 h-screen sm:pb-2 justify-center\">\r\n        <div className=\"flex h-full w-auto sm:border-2\">\r\n          <div\r\n            className={\r\n              chat_list +\r\n              \" chat_list z-50 sm:z-0 h-screen sm:h-auto w-screen sm:w-auto bg-background-701 sm:border-r-2 sm:flex flex-col\"\r\n            }\r\n          >\r\n            <div className=\" z-50 w-full font-semibold sm:relative flex justify-between bg-background-801 text-light-101 px-3 py-3\">\r\n              <Link to={process.env.PUBLIC_URL + \"/profile/\"}>\r\n                <div className=\"h-6 w-6 relative rounded-full bg-white\"></div>\r\n              </Link>\r\n              <Link to={process.env.PUBLIC_URL + \"/inbox/\"}>\r\n                <h3 className=\"cursor-pointer\">{props.user.user_name}</h3>\r\n              </Link>\r\n              <div>\r\n                <div\r\n                  className=\"cursor-pointer\"\r\n                  onClick={() => {\r\n                    setIsOptions((prev) => !prev);\r\n                  }}\r\n                >\r\n                  <MoreVertIcon />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {isOptions ? (\r\n              <>\r\n                <div className=\"cursor-pointer text-light-101 grid p-3 gap-3 right-12 rounded-sm bg-background-801\">\r\n                  <div\r\n                    className=\"flex\"\r\n                    onClick={() => {\r\n                      updateSoundSetting();\r\n                    }}\r\n                  >\r\n                    {playSound ? <>Mute</> : <>Unmute</>}\r\n                  </div>\r\n                  <div\r\n                    className=\"flex\"\r\n                    onClick={() => {\r\n                      updateShowTypingSetting();\r\n                    }}\r\n                  >\r\n                    {showTyping ? <>Live Typing on</> : <>Live Typing off</>}\r\n                  </div>\r\n                  <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n                    <div className=\"cursor-pointer\" onClick={() => logout()}>\r\n                      Logout\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <div className=\"overflow-y-auto w-screen sm:w-60\">\r\n              {friends ? (\r\n                sortTime(friends).map((val, ind) => {\r\n                  return (\r\n                    <Friend\r\n                      key={val.chat_id}\r\n                      data={val}\r\n                      // user_name={props.user.user_name}\r\n                      actives={actives}\r\n                      scrollRef={ind === 0 ? scrollRef : null}\r\n                      path={path[0] === \"inbox\" && path[1] ? path[1] : null}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <div className=\"flex flex-col m-1\">\r\n                <input\r\n                  className=\"rounded-sm\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter friend's user name\"\r\n                  value={addFrndInp}\r\n                  onChange={(e) => setAddFrndInp(e.currentTarget.value)}\r\n                />\r\n                <button\r\n                  className=\"mt-1 bg-background-301 text-light-101\"\r\n                  onClick={(e) => {\r\n                    addFriend(e);\r\n                  }}\r\n                >\r\n                  Add friend\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              chat_window +\r\n              \" sm:flex h-screen sm:h-auto z-50 sm:z-0 flex-col w-screen sm:w-96 bg-background-701\"\r\n            }\r\n          >\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path={process.env.PUBLIC_URL + \"/inbox/\"}\r\n                render={() => {\r\n                  return (\r\n                    <>\r\n                      <span className=\"flex justify-center text-3xl mt-16 text-primary-101 p-3 opacity-50 cursor-default\">\r\n                        Welcome to Alpha Chats\r\n                      </span>\r\n                    </>\r\n                  );\r\n                }}\r\n              />\r\n              <Route\r\n                exact\r\n                path={process.env.PUBLIC_URL + \"/inbox/:id\"}\r\n                render={(props) => {\r\n                  return (\r\n                    <>\r\n                      <ChatWindow chat_id={props.match.params.id} />\r\n                    </>\r\n                  );\r\n                }}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst addChat = async (chat_id) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: chat_id,\r\n      }),\r\n    });\r\n    const messages = await res.json();\r\n    return messages;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"user not found\");\r\n  }\r\n};\r\n\r\nconst sortTime = (chats_id) => {\r\n  const chats = chats_id;\r\n  chats.sort((a, b) => {\r\n    if (a.lastMsg && b.lastMsg) {\r\n      return a.lastMsg.time < b.lastMsg.time\r\n        ? 1\r\n        : b.lastMsg.time < a.lastMsg.time\r\n        ? -1\r\n        : 0;\r\n    } else if (a.lastMsg && !b.lastMsg) {\r\n      return -1;\r\n    } else if (!a.lastMsg && b.lastMsg) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n  return chats;\r\n};\r\n\r\nconst updateFriends = (friends, data, user_name) => {\r\n  // console.log(data)\r\n  for (let i = 0; i < friends.length; i++) {\r\n    if (\r\n      friends[i].to_user_name === data.from_user_name &&\r\n      friends[i].to_user_name !== user_name\r\n    ) {\r\n      return i;\r\n    }\r\n  }\r\n  for (let i = 0; i < friends.length; i++) {\r\n    if (friends[i].to_user_name === data.to_user_name) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n\r\nconst updateSeetings = async (setting, value) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(SETINGS_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({ setting, value }),\r\n    });\r\n    // const result = await res.json();\r\n    // console.log(res);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong, Please Refress the page\");\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <>\r\n            <section className=\"grid justify-center h-screen bg-background-101\">\r\n                <div className=\"text-4xl text-light-101\">\r\n                    Loading...\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Header } from \"../components/Header\";\r\nimport { Profile } from \"../containers/profile/Profile\";\r\n// import { Home } from \"../containers/home/Home\";\r\n// import { AddLinks } from \"../containers/addLink/AddLink\";\r\nimport { Inbox } from \"../containers/inbox/Inbox\";\r\nimport { Loading } from \"../components/Loading\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/\";\r\nexport default class LoginRouter extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n    status: null,\r\n  };\r\n  async componentDidMount() {\r\n    const token = this.props.token;\r\n    if (token) {\r\n      // Fetch data for home page\r\n      try {\r\n        const res = await fetch(URL, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"*/*\",\r\n            Authorization: token,\r\n          },\r\n        });\r\n        const data = await res.json();\r\n        this.setState({\r\n          data: data,\r\n          loading: false,\r\n          status: res.status,\r\n        });\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            {this.state.status === 200 ? (\r\n              <UserFound data={this.state.data} token={this.props.token} />\r\n            ) : (\r\n              <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserFound = (props) => {\r\n  const data = props.data;\r\n  return (\r\n    <>\r\n      <Header user_name={data.user.user_name} className=\"z-10\" />\r\n      <section className=\"grid justify-center align-middle h-full bg-background-101\">\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/\"}\r\n          render={() => {\r\n            return (\r\n              <>\r\n                <Switch>\r\n                  {/* <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Home data={data} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  /> */}\r\n                  {/* <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/links/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <AddLinks data={data} token={props.token} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  /> */}\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/profile/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Profile user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    path={process.env.PUBLIC_URL + \"/inbox/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Inbox user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                </Switch>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginRouter from \"./LoginRouter\";\r\n\r\nexport const MainRouter = () => {\r\n  const token = Cookies.get(\"token\");\r\n  let querry = window.location.search.split(\"?\").slice(1, 2).join();\r\n  return (\r\n    <>\r\n      {querry ? (\r\n        <Redirect to={process.env.PUBLIC_URL + querry} />\r\n      ) : (\r\n        <>\r\n          {token ? (\r\n            <>\r\n              <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n              <LoginRouter token={token} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/signin\";\r\n\r\nexport default class Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      islogin: false,\r\n      data: null,\r\n      user_name: \"\",\r\n      password: \"\",\r\n    };\r\n    this.inputUserNameRef = React.createRef();\r\n    this.inputPasswordRef = React.createRef();\r\n  }\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: this.state.user_name,\r\n        password: this.state.password,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      const token = \"Bearer \" + data.token;\r\n      await Cookies.set(\"token\", token);\r\n      this.setState({ username: \"\", password: \"\", islogin: true });\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n      this.setState({ user_name: \"\", password: \"\" });\r\n      this.inputUserNameRef.current.focus();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.inputUserNameRef.current.focus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"pt-4 pb-4 min-h-screen flex justify-center items-center text-light-101 bg-background-101\">\r\n              <div className=\"flex items-center w-56 flex-col\">\r\n                <h2 className=\"mb-2 font-medium\">Log In</h2>\r\n                <div className=\"grid gap-2 w-full bg-background-201 text-dark-901 px-3 py-6 rounded-md shadow-xl\">\r\n                  <div className=\"w-full\">\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-light-201\"\r\n                      type=\"text\"\r\n                      placeholder=\" username\"\r\n                      ref={this.inputUserNameRef}\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\"\r\n                          ? this.inputPasswordRef.current.focus()\r\n                          : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-light-201\"\r\n                      type=\"password\"\r\n                      placeholder=\" Password\"\r\n                      ref={this.inputPasswordRef}\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.submit(e) : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-sm flex flex-row-reverse text-light-101\">\r\n                    <Link\r\n                      className=\"hover:text-blue-800 font-medium\"\r\n                      to={process.env.PUBLIC_URL + \"/changePassword/\"}\r\n                    >\r\n                      Forgot password ??\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <button\r\n                      className=\"w-full mt-4 p-0 bg-background-401 text-light-101\"\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Log In\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-light-101 mt-4\">\r\n                  {\"Don't have an account?? \"}\r\n                  <Link\r\n                    className=\"hover:text-blue-800 font-medium\"\r\n                    to={process.env.PUBLIC_URL + \"/signup/\"}\r\n                  >\r\n                    Sign Up\r\n                  </Link>\r\n                </div>\r\n                <div className=\"text-sm text-light-101 mt-4\">\r\n                  <Link\r\n                    className=\"hover:text-blue-800 font-medium\"\r\n                    to={process.env.PUBLIC_URL + \"/verification/\"}\r\n                  >\r\n                    Resend Verification Link\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/signup\";\r\n\r\nexport default class Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      islogin: false,\r\n      data: null,\r\n      name: \"\",\r\n      user_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone: \"\",\r\n    };\r\n    this.inputNameRef = React.createRef();\r\n    this.inputUserNameRef = React.createRef();\r\n    this.inputEmailRef = React.createRef();\r\n    this.inputPasswordRef = React.createRef();\r\n    this.inputPhoneRef = React.createRef();\r\n  }\r\n  submit = async () => {\r\n    try {\r\n      const res = await fetch(URL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: this.state.name,\r\n          user_name: this.state.user_name,\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n          phone: this.state.phone,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.token) {\r\n        // alert(\"account created please login\");\r\n        swal(\"Account created, Please Verify\", \"We have sent you an verification link on your email please verify and then login\", \"success\");\r\n        this.setState({\r\n          name: \"\",\r\n          user_name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          phone: 0,\r\n          islogin: true,\r\n        });\r\n      } else {\r\n        if (data.change===\"name\") {\r\n          this.inputNameRef.current.focus();\r\n          swal(data.error)\r\n        }\r\n        if (data.change===\"user_name\") {\r\n          this.inputUserNameRef.current.focus();\r\n          alert(data.error)\r\n        }\r\n        if (data.change===\"email\") {\r\n          this.inputEmailRef.current.focus();\r\n          alert(data.error)\r\n        }\r\n        if (data.change===\"password\") {\r\n          this.inputPasswordRef.current.focus();\r\n          alert(data.error)\r\n        }\r\n        // console.log(data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.inputNameRef.current.focus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\" min-h-screen flex justify-center items-center text-light-101 bg-background-101\">\r\n              <div className=\"flex items-center w-56 flex-col\">\r\n                <h2 className=\"mb-2 font-medium\">Sign Up</h2>\r\n                <div className=\"grid gap-2 w-full bg-background-201 text-dark-901 px-3 py-6 rounded-md shadow-xl\">\r\n                  <div className=\"w-full\">\r\n                    <label className=\"text-xs text-light-201\" htmlFor=\"name\">\r\n                      Name\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"text\"\r\n                      placeholder=\" Alpha\"\r\n                      ref={this.inputNameRef}\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.setState({ name: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.inputUserNameRef.current.focus() : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <label\r\n                      className=\"text-xs text-light-201\"\r\n                      htmlFor=\"user_name\"\r\n                    >\r\n                      User Name\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"text\"\r\n                      placeholder=\" alpha\"\r\n                      ref={this.inputUserNameRef}\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.inputEmailRef.current.focus() : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <label\r\n                      className=\"text-xs text-light-201\"\r\n                      htmlFor=\"user_name\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"text\"\r\n                      placeholder=\" example@alpha.in\"\r\n                      ref={this.inputEmailRef}\r\n                      value={this.state.email}\r\n                      onChange={(e) => {\r\n                        this.setState({ email: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.inputPasswordRef.current.focus() : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <label\r\n                      className=\"text-xs text-light-201\"\r\n                      htmlFor=\"password\"\r\n                    >\r\n                      Password\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"text\"\r\n                      placeholder=\" Password\"\r\n                      ref={this.inputPasswordRef}\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.inputPhoneRef.current.focus() : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <label className=\"text-xs text-light-201\" htmlFor=\"phone\">\r\n                      Phone No\r\n                    </label>\r\n                    <input\r\n                      className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-dark-501\"\r\n                      type=\"number\"\r\n                      placeholder=\" 123...\"\r\n                      ref={this.inputPhoneRef}\r\n                      value={this.state.phone}\r\n                      onChange={(e) => {\r\n                        this.setState({ phone: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.submit() : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full\">\r\n                    <button\r\n                      className=\"w-full mt-4 p-0 bg-background-401 text-light-101\"\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Signup\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-light-101 mt-4\">\r\n                  {\"Already have an account?? \"}\r\n                  <Link\r\n                    className=\"hover:text-blue-800 font-medium\"\r\n                    to={process.env.PUBLIC_URL + \"/signin/\"}\r\n                  >\r\n                    Log In\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\r\nimport \"../../script/link_page\"\r\n\r\n\r\nexport const LinkPage = (props) => {\r\n    const data = props.data;\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n                <header>\r\n                    <nav>\r\n                        <div>\r\n                            <h1>BTech 20</h1>\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            <div id=\"time\"></div>\r\n                            <div id=\"date\"></div>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n                <section className=\"body\">\r\n                    <div className=\"color_code\">\r\n                        <h5 className=\"live\">Running...</h5>\r\n                        <h5 className=\"leftToday\">Left</h5>\r\n                        <h5 className=\"today_class\">Todays Class</h5>\r\n                        <h5 className=\"status\">Not for Today</h5>\r\n                    </div>\r\n                    <h2>Semester 3</h2>\r\n\r\n                    <h2 className=\"running\">No Class is Running Now </h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2 className=\"today\">No Classes are Left Today</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide2\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2>All Class Timing and Link</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"course status\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CourseCard = (props) => {\r\n    return (<>\r\n        <div className={props.class}>\r\n            <h3>{props.data.course}</h3>\r\n            {\r\n                props.data.time.map((val, ind) => {\r\n                    return (\r\n                        <Timing\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst Timing = (props) => {\r\n    return (\r\n        <>\r\n            <h4 className=\"time\">{props.data.time}</h4>\r\n            {\r\n                props.data.section.map((val, ind) => {\r\n                    return (\r\n                        <ClassLink\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst ClassLink = (props) => {\r\n    return (<>\r\n        <h5>\r\n            <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n        </h5>\r\n    </>)\r\n}\r\n","import \"../../script/link_page\"\r\n\r\nexport const PublicPage = (props) => {\r\n    const data = props.data;\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n\r\n                <section className=\"body\">\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <Card\r\n                                        key={ind}\r\n                                        data={val}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Card = (props) => {\r\n    return (<>\r\n        <div className=\"status course\">\r\n            <a href={props.data.link} target=\"blank\">{props.data.title}</a>\r\n        </div>\r\n    </>)\r\n}","import React from \"react\";\r\nimport { LinkPage } from \"./LinkPage\";\r\nimport { PublicPage } from \"../public/PublicPage\";\r\nimport { Loading } from \"../../components/Loading\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/link/\";\r\nexport default class LinkWebsite extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await fetch(URL + this.props.id);\r\n    if (res.status === 404) {\r\n      this.setState({ loading: false });\r\n    } else {\r\n      const data = await res.json();\r\n      this.setState({ data: data, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            {this.state.data ? (\r\n              <>\r\n                {this.props.id !== \"btech20\" ? (\r\n                  <div className=\"min-h-screen bg-background-101\">\r\n                    <PublicPage data={this.state.data} />\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"min-h-screen bg-background-401\">\r\n                    <LinkPage data={this.state.data} />\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <section className=\"main_body\">\r\n                  <h2>Page not found</h2>\r\n                </section>\r\n                {/* <Redirect to=\"/\" /> */}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Loading } from \"../../components/Loading\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst url = process.env.REACT_APP_SERVER + \"/verification/\";\r\n\r\nexport const VerificationId = (props) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let unMounted = false;\r\n    async function verify() {\r\n      try {\r\n        const res = await fetch(url + props.id);\r\n        if (res.status === 200) {\r\n          alert(\"Account Verified, Please Login\");\r\n        } else {\r\n          alert(\"Invalid Link\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        alert(\"Invalid Link\");\r\n      }\r\n    }\r\n    if (!unMounted&&loading) {\r\n      verify();\r\n    }\r\n    setLoading(false);\r\n    return () => {\r\n      unMounted = true;\r\n    };\r\n  }, [props.id, loading]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst url = process.env.REACT_APP_SERVER + \"/verification/\";\r\n\r\nexport const Verification = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const inputRef = React.createRef();\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const submit = async () => {\r\n    try {\r\n      const res = await fetch(url, {\r\n        // login\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.status === 200) {\r\n        alert(data.status);\r\n        setStatus(true);\r\n      } else {\r\n        alert(data.error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(\"Invalid Link\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, [inputRef]);\r\n\r\n  return (\r\n    <>\r\n      {status ? <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} /> : \"\"}\r\n      <section className=\"pt-4 pb-4 min-h-screen flex justify-center items-center text-light-101 bg-background-101\">\r\n        <div className=\"flex items-center w-56 flex-col\">\r\n          <div className=\"grid gap-2 w-full bg-background-201 text-dark-901 px-3 py-6 rounded-md shadow-xl\">\r\n            <div className=\"w-full\">\r\n              <input\r\n                className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-light-201\"\r\n                type=\"text\"\r\n                placeholder=\" Email\"\r\n                ref={inputRef}\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"w-full\">\r\n              <button\r\n                className=\"w-full mt-4 p-0 bg-background-401 text-light-101\"\r\n                onClick={() => {\r\n                  submit();\r\n                }}\r\n              >\r\n                Send Verification link\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-sm text-light-101 mt-4\">\r\n            <Link\r\n              className=\"hover:text-blue-800 font-medium\"\r\n              to={process.env.PUBLIC_URL + \"/signin/\"}\r\n            >\r\n              Log In\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst url = process.env.REACT_APP_SERVER + \"/resetPassword/\";\r\n\r\nexport const ChangePassword = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const inputRef = React.createRef();\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const submit = async () => {\r\n    try {\r\n      const res = await fetch(url, {\r\n        // login\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.status === 200) {\r\n        alert(data.status);\r\n        setStatus(true);\r\n      } else {\r\n        alert(data.error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(\"Invalid Link\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, [inputRef]);\r\n\r\n  return (\r\n    <>\r\n      {status ? <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} /> : \"\"}\r\n      <section className=\"pt-4 pb-4 min-h-screen flex justify-center items-center text-light-101 bg-background-101\">\r\n        <div className=\"flex items-center w-56 flex-col\">\r\n          <div className=\"grid gap-2 w-full bg-background-201 text-dark-901 px-3 py-6 rounded-md shadow-xl\">\r\n            <div className=\"w-full\">\r\n              <input\r\n                className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-light-201\"\r\n                type=\"text\"\r\n                placeholder=\" Email\"\r\n                ref={inputRef}\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"w-full\">\r\n              <button\r\n                className=\"w-full mt-4 p-0 bg-background-401 text-light-101\"\r\n                onClick={() => {\r\n                  submit();\r\n                }}\r\n              >\r\n                Send Password Link\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-sm text-light-101 mt-4\">\r\n            <Link\r\n              className=\"hover:text-blue-800 font-medium\"\r\n              to={process.env.PUBLIC_URL + \"/signin/\"}\r\n            >\r\n              Log In\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst url = process.env.REACT_APP_SERVER + \"/changePassword/\";\r\n\r\nexport const ChangePasswordId = (props) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const inputRef = React.createRef();\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const submit = async () => {\r\n    try {\r\n      const res = await fetch(url+props.id, {\r\n        // login\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          password: password,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.status === 200) {\r\n        alert(data.status);\r\n        setStatus(true);\r\n      } else {\r\n        alert(data.error);\r\n      }\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(\"Invalid Link\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, [inputRef]);\r\n\r\n  return (\r\n    <>\r\n      {status ? (\r\n        <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <section className=\"pt-4 pb-4 min-h-screen flex justify-center items-center text-light-101 bg-background-101\">\r\n        <div className=\"flex items-center w-56 flex-col\">\r\n          <div className=\"grid gap-2 w-full bg-background-201 text-dark-901 px-3 py-6 rounded-md shadow-xl\">\r\n            <div className=\"w-full\">\r\n              <input\r\n                className=\"py-1 w-full px-2 rounded-md bg-light-101 focus:border-light-201\"\r\n                type=\"text\"\r\n                placeholder=\" Password\"\r\n                ref={inputRef}\r\n                value={password}\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"w-full\">\r\n              <button\r\n                className=\"w-full mt-4 p-0 bg-background-401 text-light-101\"\r\n                onClick={() => {\r\n                  submit();\r\n                }}\r\n              >\r\n                Submit Password\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-sm text-light-101 mt-4\">\r\n            <Link\r\n              className=\"hover:text-blue-800 font-medium\"\r\n              to={process.env.PUBLIC_URL + \"/signin/\"}\r\n            >\r\n              Log In\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","\r\nimport \"./style/link_page.css\";\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { MainRouter } from \"./routes/MainRouter\";\r\nimport Signin from \"./containers/auth/Signin\";\r\nimport Signup from \"./containers/auth/Signup\";\r\nimport LinkWebsite from \"./containers/public/LinkWebsite\";\r\nimport { VerificationId } from \"./containers/auth/VerificationId\";\r\nimport { Verification } from \"./containers/auth/Verification\";\r\nimport { ChangePassword } from \"./containers/auth/ChangePassword\";\r\nimport { ChangePasswordId } from \"./containers/auth/ChangePasswordId\";\r\n\r\nexport const App = () => {\r\n  let querry = window.location.search.split(\"?\").slice(1, 2).join();\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {querry ? <Redirect to={process.env.PUBLIC_URL + querry} /> : <></>}\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signin/\"}\r\n            component={Signin}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signup/\"}\r\n            component={Signup}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/page/:id\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite id={props.match.params.id} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/verification/\"}\r\n            render={() => {\r\n              return (\r\n                <>\r\n                  <Verification />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/changePassword/\"}\r\n            render={() => {\r\n              return (\r\n                <>\r\n                  <ChangePassword />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/verification/:id\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <VerificationId id={props.match.params.id} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/changePassword/:id\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <ChangePasswordId id={props.match.params.id} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <MainRouter path={process.env.PUBLIC_URL + \"/\"} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// /*\r\n\r\nconst script = () => {\r\n  let months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  let currentDate = new Date();\r\n  let day = currentDate.getDay();\r\n  let hour = currentDate.getHours();\r\n  if (hour.toString().length < 2) {\r\n    hour = \"0\" + hour;\r\n  }\r\n\r\n  let minute = currentDate.getMinutes();\r\n  if (minute.toString().length < 2) {\r\n    minute = \"0\" + minute;\r\n  }\r\n\r\n  let second = currentDate.getSeconds();\r\n  if (second.toString().length < 2) {\r\n    second = \"0\" + second;\r\n  }\r\n\r\n  let date = currentDate.getDate();\r\n  if (date.toString().length < 2) {\r\n    date = \"0\" + date;\r\n  }\r\n\r\n  let month = currentDate.getMonth();\r\n\r\n  // let year = currentDate.getFullYear();\r\n\r\n  let time = hour + \":\" + minute;\r\n\r\n  let courses = document.querySelectorAll(\"#link-page .course\");\r\n\r\n  let liveClasses = document.querySelectorAll(\"#link-page .hide\");\r\n\r\n  let todayClasses = document.querySelectorAll(\"#link-page .hide2\");\r\n\r\n  courses.forEach((val, i) => {\r\n    // console.log(val)\r\n    val.innerText.split(\"\\n\").forEach((val, temp) => {\r\n      if (val[val.length - 3] === \":\") {\r\n        let classTimes = val.split(\",\");\r\n        classTimes.forEach((value, ind) => {\r\n          let classTime = value.split(\" \");\r\n          if (\r\n            time < classTime[classTime.length - 3] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".today\")[0].innerHTML =\r\n              \"Today's Classes Left\";\r\n            todayClasses[i].setAttribute(\"class\", \"course leftToday\");\r\n          }\r\n          if (\r\n            time >= classTime[classTime.length - 3] &&\r\n            time < classTime[classTime.length - 1] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".running\")[0].innerHTML =\r\n              \"Classes Running...\";\r\n            liveClasses[i].setAttribute(\"class\", \"course live\");\r\n          }\r\n          if (classTime.indexOf(days[day]) !== -1) {\r\n            courses[i].setAttribute(\"class\", \"course today_class\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const timer = setInterval(() => {\r\n    currentDate = new Date();\r\n    day = currentDate.getDay();\r\n    hour = currentDate.getHours();\r\n    if (hour.toString().length < 2) {\r\n      hour = \"0\" + hour;\r\n    }\r\n\r\n    minute = currentDate.getMinutes();\r\n    if (minute.toString().length < 2) {\r\n      minute = \"0\" + minute;\r\n    }\r\n\r\n    second = currentDate.getSeconds();\r\n    if (second.toString().length < 2) {\r\n      second = \"0\" + second;\r\n    }\r\n    try {\r\n      document.getElementById(\"time\").innerText =\r\n        hour + \":\" + minute + \":\" + second;\r\n      document.getElementById(\"date\").innerText =\r\n        days[day] + \", \" + months[month] + \" \" + date;\r\n    } catch {\r\n      //   console.log(\"timer timer\")\r\n      clearInterval(timer);\r\n    }\r\n\r\n    if (\r\n      (minute.toString() === \"00\" || minute.toString() === \"30\") &&\r\n      second.toString() === \"00\"\r\n    ) {\r\n      window.location.reload();\r\n    }\r\n  }, 1000);\r\n\r\n  // console.log(\"hello\")\r\n};\r\n\r\n\r\nconst start = setInterval(() => {\r\n  const load = document.getElementById(\"time\");\r\n  if (load) {\r\n    script();\r\n    clearInterval(start)\r\n  }\r\n}, 100);\r\n\r\n\r\n// */"],"sourceRoot":""}