{"version":3,"sources":["containers/Header.js","containers/Profile.js","containers/Home.js","containers/AddData.js","containers/Inbox.js","routes/LoginRouter.js","routes/MainRouter.js","containers/auth/Signin.js","containers/auth/Signup.js","containers/LinkPage.js","containers/PublicPage.js","containers/LinkWebsite.js","App.js","reportWebVitals.js","index.js","script/link_page.js"],"names":["Header","props","className","type","id","htmlFor","to","process","params","data","user_name","Profile","user","name","email","phone","onClick","Cookies","remove","Home","user_data","href","firstRun","initLinks","AddData","useState","links","setLinks","useEffect","update","addLink","title","link","newLink","target","onDelete","filter","e","a","token","get","fetch","method","headers","Accept","Authorization","body","JSON","stringify","console","log","alert","Links","length","map","ind","OneLink","AddLink","setTitle","setLink","onSubmit","preventDefault","value","onChange","Inbox","msg","setMsg","currentChat","setCurrentChat","inMsg","setInMsg","messages","setMeassages","socket","useRef","scrollRef","current","io","on","message","from_user_name","prev","emit","users","submit","to_user_name","updateChat","scrollIntoView","behavior","openChat","getChat","chats_id","val","placeholder","currentTarget","onKeyDownCapture","key","chat_id","res","json","Friend","Message","classes","ref","LoginRouter","state","loading","status","this","setState","React","Component","UserFound","path","render","exact","MainRouter","URL","Signin","islogin","password","set","username","error","Signup","LinkPage","class","CourseCard","course","time","Timing","section","ClassLink","PublicPage","Card","LinkWebsite","App","querry","window","location","search","split","slice","join","component","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","start","setInterval","months","days","currentDate","Date","day","getDay","hour","getHours","toString","minute","getMinutes","second","getSeconds","date","getDate","month","getMonth","courses","querySelectorAll","liveClasses","todayClasses","forEach","i","innerText","temp","classTime","indexOf","innerHTML","setAttribute","timer","clearInterval","reload","script"],"mappings":"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","file":"static/js/main.442532a8.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nexport const Header = (props) => {\r\n  // console.log(props)\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav>\r\n          <div>\r\n            <h1 className=\"title\">Website Alpha</h1>\r\n          </div>\r\n          <input type=\"checkbox\" id=\"check\" />\r\n          <label htmlFor=\"check\" className=\"nav-checkbtn\">\r\n            <span className=\"bar\"></span>\r\n            <span className=\"bar\"></span>\r\n            <span className=\"bar\"></span>\r\n          </label>\r\n          <div className=\"nav-link\">\r\n            <NavLink to={process.env.PUBLIC_URL+\"/\"}>\r\n              <h3>Home</h3>\r\n            </NavLink>\r\n            <NavLink to={process.env.PUBLIC_URL+\"/inbox\"} params={{ data: props.user_name }}>\r\n              <h3>Inbox</h3>\r\n            </NavLink>\r\n            <NavLink to={process.env.PUBLIC_URL+\"/profile\"}>\r\n              <h3>{props.user_name}</h3>\r\n            </NavLink>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const Profile = (props) => {\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n  };\r\n  const user = props.user;\r\n  // console.log(user);\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1> Login Successful </h1>\r\n        <h4>Name : {user.name}</h4>\r\n        <h4>User Name : {user.user_name}</h4>\r\n        <h4>email : {user.email}</h4>\r\n        <h4>Phone No : {user.phone}</h4>\r\n      </div>\r\n      <Link to={process.env.PUBLIC_URL+\"/\"}>\r\n        <button\r\n          onClick={() => {\r\n            logout();\r\n          }}\r\n        >\r\n          Log out\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { Route, Switch} from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\n// import { Header } from \"./Header\";\r\nimport \"../style/header.css\";\r\n// import { LinkPage } from \"./LinkPage\";\r\nimport \"../style/home.css\";\r\n// import { Profile } from \"./Profile\";\r\n\r\n\r\nexport const Home = (props) => {\r\n  const user = props.data.user;\r\n  const data = props.data.user_data;\r\n  // console.log(data)\r\n  return (<>\r\n\r\n    <div className=\"\">\r\n      <h1>Hello {user.name}</h1>\r\n      <h2> Welcome to the Website Alpha</h2>\r\n    </div>\r\n    <div>\r\n      {data.data[0] ?\r\n      <>\r\n      <h3>Your link is available <a href={process.env.PUBLIC_URL+\"/page/\"+data.user_name}>Here</a></h3>\r\n      <Link to={process.env.PUBLIC_URL+\"/add_data\"} params={{data: data}} ><button>Add Links</button></Link>\r\n      </>\r\n      :\r\n      <>\r\n      <h3>You have not saved anything yet</h3>\r\n      <Link to={process.env.PUBLIC_URL+\"/add_data\"} params={{data: data}} ><button>Add Links</button></Link>\r\n      </>}\r\n    </div>\r\n  </>)\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst UPDATE_URL = process.env.REACT_APP_SERVER + \"/update/link\";\r\n\r\n// console.log(UPDATE_URL)\r\n\r\nlet firstRun = true;\r\nlet initLinks = [];\r\n\r\nexport const AddData = (props) => {\r\n  // console.log(props.data.user_data.user_name)\r\n\r\n  // let initLinks = props.data.user_data.data;\r\n\r\n  if (firstRun) {\r\n    // console.log(\"first run\")\r\n    initLinks = props.data.user_data.data;\r\n    firstRun = false\r\n  }\r\n\r\n  const onDelete = (link) => {\r\n    // console.log(\"deleting the link \");\r\n    setLinks(\r\n      links.filter((e) => {\r\n        return e !== link;\r\n      })\r\n    );\r\n  };\r\n\r\n  const addLink = (title, link) => {\r\n    const newLink = {\r\n      title: title,\r\n      link: link,\r\n    };\r\n    setLinks([...links, newLink]);\r\n    // console.log(newLink)\r\n  };\r\n\r\n  const [links, setLinks] = useState(initLinks);\r\n\r\n  useEffect(() => {\r\n    update(links);\r\n    initLinks = links;\r\n  }, [links]);\r\n\r\n  return (\r\n    <>\r\n      <AddLink addLink={addLink} />\r\n      <h3>\r\n        Your link is available on{\" \"}\r\n        <a href={process.env.PUBLIC_URL+\"/page/\" + props.data.user_data.user_name} target=\"blank\">\r\n          {process.env.PUBLIC_URL+\"/page/\" + props.data.user_data.user_name}\r\n        </a>\r\n      </h3>\r\n      <Links links={links} onDelete={onDelete} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst update = async (links) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res = \r\n    await fetch(UPDATE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        // public\r\n        data: links,\r\n      }),\r\n    });\r\n    // const user_data = await res.json();\r\n    // console.log(user_data.data);\r\n    // return user_data.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nconst Links = (props) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3>Your Links</h3>\r\n        {props.links.length === 0\r\n          ? \"No links to display\"\r\n          : props.links.map((link, ind) => {\r\n              return (\r\n                <OneLink key={ind} link={link} onDelete={props.onDelete} />\r\n              );\r\n            })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst OneLink = ({ link, onDelete }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3>{link.title}</h3>\r\n        <a href={link.link} target=\"blank\">\r\n          {link.link}\r\n        </a>\r\n        <button\r\n          onClick={() => {\r\n            onDelete(link);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddLink = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !link) {\r\n      alert(\"Title or Link cannot be blank\");\r\n    } else {\r\n      props.addLink(title, link);\r\n      setTitle(\"\");\r\n      setLink(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form className=\"form\" onSubmit={submit}>\r\n          <h2>Add a Link</h2>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link</label>\r\n            <input\r\n              type=\"text\"\r\n              value={link}\r\n              onChange={(e) => {\r\n                setLink(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Add Link</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\n\r\n{\"data\": [{\"title\": \"hello\",\r\n    \"link\": \"hello.com\"\r\n},\r\n{\"title\": \"hello2\",\r\n    \"link\": \"hello2.com\"\r\n}\r\n],\r\n\"public\" : true\r\n}\r\n\r\n\r\n*/\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { io } from \"socket.io-client\";\r\n// import { animateScroll } from 'react-scroll'\r\n\r\nimport \"../style/chats.css\";\r\nimport \"../script/chats\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/add/chats\";\r\nconst SEND_URL = process.env.REACT_APP_SERVER + \"/update/chat\";\r\n// console.log(URL)\r\n\r\nexport const Inbox = (props) => {\r\n  // console.log(props.user.chats_id);\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [inMsg, setInMsg] = useState(null);\r\n  const [messages, setMeassages] = useState([]);\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io(URL);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setInMsg({\r\n        message: data.message,\r\n        name: data.from_user_name,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    inMsg && setMeassages((prev) => [...prev, inMsg]);\r\n  }, [inMsg]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", props.user.user_name);\r\n    // console.log(socket)\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      // console.log(users);\r\n    });\r\n  }, [props.user]);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (msg) {\r\n      const to_user_name = currentChat;\r\n      socket.current.emit(\"sendMessage\", {\r\n        from_user_name: props.user.user_name,\r\n        to_user_name: to_user_name,\r\n        message: msg,\r\n      });\r\n\r\n      const data = {\r\n        message: msg,\r\n        name: props.user.user_name,\r\n      };\r\n      updateChat(currentChat, data);\r\n      setMeassages([...messages, data]);\r\n      setMsg(\"\");\r\n      // console.log(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const openChat = async (user_name) => {\r\n    // console.log(\"open chat run\");\r\n    const messages = await getChat(user_name);\r\n    setCurrentChat(user_name);\r\n    // console.log(messages);\r\n    setMeassages(messages);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"chats_page\">\r\n        <div className=\"partition\">\r\n          <div className=\"chat_list\">\r\n            <div className=\"user_name\">\r\n              <h2>{props.user.user_name}</h2>\r\n            </div>\r\n            <div className=\"chat_wrapper\">\r\n              {props.user.chats_id.map((val, ind) => {\r\n                return <Friend key={ind} data={val} openChat={openChat} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"chat_window\">\r\n            <div className=\"chats_display scroll-y\" id=\"scrollBottom\">\r\n              {/* <div className=\"message right\">Rohan: Hey how are you?</div>\r\n                        <div className=\"message left\">Harry: I am fine rohan.fasdasfa sdsaffsafsdfa sdfasfdsfasdfasdfasfas dfasd</div> */}\r\n              {messages.map((val, ind) => {\r\n                return (\r\n                  //   <div>\r\n                  <Message\r\n                    key={ind}\r\n                    user={props.user.user_name}\r\n                    data={val}\r\n                    scrollRef={scrollRef}\r\n                  />\r\n                  //   </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <form className=\"send\" id=\"chats-send-container\">\r\n              <input\r\n                className=\"formchat\"\r\n                type=\"text\"\r\n                placeholder=\" Message...\"\r\n                value={msg}\r\n                onChange={(e) => setMsg(e.currentTarget.value)}\r\n                id=\"chats-messageInp\"\r\n                onKeyDownCapture={(e) => (e.key === \"Enter\" ? submit(e) : null)}\r\n              />\r\n              <button className=\"btn\" id=\"chats-btn\" onClick={(e) =>{submit(e);}}>Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst updateChat = async (to_user_name, message) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res = \r\n    await fetch(SEND_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        to_user_name,\r\n        message,\r\n      }),\r\n    });\r\n    // const result = await res.json();\r\n    // console.log(res);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\n\r\nconst getChat = async (chat_id) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: chat_id,\r\n      }),\r\n    });\r\n    const messages = await res.json();\r\n    // console.log(messages);\r\n    return messages;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\n\r\nconst Friend = (props) => {\r\n  // console.log(props.data.to_user_name);\r\n  return (\r\n    <>\r\n      <div onClick={() => {props.openChat(props.data.to_user_name);}}>\r\n        <div className=\"chat\">\r\n          <h2>{props.data.to_user_name}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Message = (props) => {\r\n  let name = \"\";\r\n  let classes = \"middle\";\r\n  if (props.data.name) {\r\n    name = props.data.name === props.user ? \"\" : props.data.name;\r\n    classes = props.data.name === props.user ? \"right\" : \"left\";\r\n  }\r\n\r\n  // console.log(classes)\r\n  return (\r\n    <>\r\n      <div ref={props.scrollRef} className={\"message_box \" + classes}>\r\n        <label className=\"message_label\">{name}</label>\r\n        <p className={\"message message_\" + classes}>{props.data.message}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport { Header } from \"../containers/Header\";\r\nimport \"../style/header.css\";\r\nimport \"../style/home.css\";\r\nimport { Profile } from \"../containers/Profile\";\r\nimport { Home } from \"../containers/Home\";\r\nimport { AddData } from \"../containers/AddData\";\r\nimport { Inbox } from \"../containers/Inbox\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/\";\r\n// console.log(URL)\r\nexport default class LoginRouter extends React.Component {\r\n  // const token = \"Bearer \" + props.route.params.token;\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n    status: null,\r\n  };\r\n\r\n  // logout = () => {\r\n  //   Cookies.remove(\"token\");\r\n  // };\r\n  async componentDidMount() {\r\n    const token = this.props.token;\r\n    if (token) {\r\n      // Fetch data for home page\r\n      const res = await fetch(URL, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"*/*\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      const data = await res.json();\r\n      this.setState({\r\n        data: data,\r\n        loading: false,\r\n        status: res.status,\r\n      });\r\n      // console.log(res.status);\r\n      // console.log(data);\r\n      // console.log(this.state.user);\r\n      // console.log(this.state.data);\r\n      // Cookies.remove(\"token\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.data)\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <section className=\"main_body\"> Loading... </section>\r\n        ) : (\r\n          <>\r\n            {this.state.status === 200 ? (\r\n              <UserFound data={this.state.data} token={this.props.token} />\r\n              ) : (\r\n              <Redirect to={process.env.PUBLIC_URL + \"/signin\"} />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserFound = (props) => {\r\n  // console.log(props);\r\n  const data = props.data;\r\n  return (\r\n    <>\r\n      <Header user_name={data.user.user_name} />\r\n      <section className=\"main_body\">\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/\"}\r\n          render={() => {\r\n            return (\r\n              <>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Home data={data} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/add_data\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <AddData data={data} token={props.token} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/profile\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Profile user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/inbox\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Inbox user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  {/* <Route exact path=\"/inbox\" component={Inbox} /> */}\r\n                </Switch>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React, {} from \"react\";\r\nimport { Redirect} from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginRouter from \"./LoginRouter\";\r\n\r\n\r\nexport const MainRouter = () =>{\r\n    const token = Cookies.get(\"token\");\r\n    \r\n\r\n    return(<> \r\n        {token ? \r\n        <>\r\n        <LoginRouter token={token}/> \r\n        </>\r\n        :\r\n        <>\r\n        <Redirect to={process.env.PUBLIC_URL+\"/signin\"} />\r\n        </>\r\n        }\r\n    </>)\r\n}","import React from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\n// const cookies = require(\"js-cookie\");\r\n\r\n// import \"fetch\"\r\n\r\nconst URL = process.env.REACT_APP_SERVER+\"/signin\";\r\n// console.log(URL)\r\n\r\nexport default class Signin extends React.Component {\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    user_name: \"\",\r\n    password: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: this.state.user_name,\r\n        password: this.state.password,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      const token = \"Bearer \" + data.token;\r\n      await Cookies.set(\"token\", token);\r\n      this.setState({ username: \"\", password: \"\", islogin: true });\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n      this.setState({ user_name: \"\", password: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL+\"/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"main_body\">\r\n              <div className=\"form\">\r\n                <h2 className=\"form-heading\">Login</h2>\r\n                <div className=\"signin-form\">\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <button\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <Link className=\"form-link\" to={process.env.PUBLIC_URL+\"/signup\"}>\r\n                  Click to make an account\r\n                </Link>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\n// import Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n// const cookies = require(\"js-cookie\");\r\n\r\n// import \"fetch\"\r\nconst URL = process.env.REACT_APP_SERVER+\"/signup\";\r\n\r\nexport default class Signup extends React.Component {\r\n  // const token = \"Bearer \" + props.route.params.token;\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    name: \"\",\r\n    user_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // // Fetch data for home page\r\n      // method: \"GET\",\r\n      // headers: {\r\n      //   Accept: \"*/*\",\r\n      //   Authorization: token,\r\n      // },\r\n\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        user_name: this.state.user_name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        phone: this.state.phone,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      // const token = \"Bearer \" + data.token;\r\n      //   await Cookies.set(\"token\", token);\r\n      alert(\"account created please login\");\r\n      this.setState({\r\n        name: \"\",\r\n        user_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        phone: 0,\r\n        islogin: true,\r\n      });\r\n      // console.log(token)\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n    }\r\n    // alert(data.error)\r\n    // console.log(data.token)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL+\"/signin\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"main_body\">\r\n              <div className=\"form\">\r\n                <h2 className=\"form-heading\">Sign UP</h2>\r\n                <div className=\"signup-form\">\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.setState({ name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">Email</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.email}\r\n                      onChange={(e) => {\r\n                        this.setState({ email: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"phone\">Phone No</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={this.state.phone}\r\n                      onChange={(e) => {\r\n                        this.setState({ phone: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <button\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Signup\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <Link className=\"form-link\" to={process.env.PUBLIC_URL+\"/signin\"}>\r\n                  Already have an account ?? Login\r\n                </Link>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\r\nimport \"../style/link_page.css\"\r\nimport \"../script/link_page\"\r\n\r\n\r\nexport const LinkPage = (props) => {\r\n    const data = props.data;\r\n    //   console.log(data);\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n                <header>\r\n                    <nav>\r\n                        <div>\r\n                            <h1>BTech 20</h1>\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            <div id=\"time\"></div>\r\n                            <div id=\"date\"></div>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n                <section className=\"body\">\r\n                    <div className=\"color_code\">\r\n                        <h5 className=\"live\">Running...</h5>\r\n                        <h5 className=\"leftToday\">Left</h5>\r\n                        <h5 className=\"today_class\">Todays Class</h5>\r\n                        <h5 className=\"status\">Not for Today</h5>\r\n                    </div>\r\n                    <h2>Semester 3</h2>\r\n\r\n                    <h2 className=\"running\">No Class is Running Now </h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2 className=\"today\">No Classes are Left Today</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide2\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2>All Class Timing and Link</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"course status\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CourseCard = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <div className={props.class}>\r\n            <h3>{props.data.course}</h3>\r\n            {\r\n                props.data.time.map((val, ind) => {\r\n                    return (\r\n                        <Timing\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst Timing = (props) => {\r\n    // console.log(props.data)\r\n    return (\r\n        <>\r\n            <h4 className=\"time\">{props.data.time}</h4>\r\n            {\r\n                props.data.section.map((val, ind) => {\r\n                    return (\r\n                        <ClassLink\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst ClassLink = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <h5>\r\n            <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n        </h5>\r\n    </>)\r\n}\r\n","\r\nimport \"../style/link_page.css\"\r\nimport \"../script/link_page\"\r\n\r\n\r\nexport const PublicPage = (props) => {\r\n    const data = props.data;\r\n    //   console.log(data);\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n\r\n                <section className=\"body\">\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <Card\r\n                                        key={ind}\r\n                                        data={val}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Card = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <div className=\"status course\">\r\n            <a href={props.data.link} target=\"blank\">{props.data.title}</a>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n// const Timing = (props) => {\r\n//     // console.log(props.data)\r\n//     return (\r\n//         <>\r\n//             <h4 className=\"time\">{props.data.time}</h4>\r\n//             {\r\n//                 props.data.section.map((val, ind) => {\r\n//                     return (\r\n//                         <ClassLink\r\n//                             key={ind}\r\n//                             data={val}\r\n//                         />\r\n//                     )\r\n//                 })\r\n//             }\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// const ClassLink = (props) => {\r\n//     // console.log(props.data)\r\n//     return (<>\r\n//         <h5>\r\n//             <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n//         </h5>\r\n//     </>)\r\n// }\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { LinkPage } from \"./LinkPage\";\r\nimport { PublicPage } from \"./PublicPage\";\r\n// import { Redirect} from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER+\"/link/\";\r\n// console.log(URL)\r\n\r\nexport default class LinkWebsite extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // console.log(this.props.id)\r\n    const res = await fetch(URL + this.props.id);\r\n    if (res.status === 404) {\r\n      this.setState({ loading: false });\r\n    } else {\r\n      const data = await res.json();\r\n      this.setState({ data: data, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <section className=\"main_body\">\r\n            <h2> Loading... </h2>\r\n          </section>\r\n        ) : (\r\n          <>\r\n            {this.state.data ? (\r\n              <>\r\n                {this.props.id !== \"btech20\" ? (\r\n                  <div>\r\n                    <PublicPage data={this.state.data} />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <LinkPage data={this.state.data} />\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <section className=\"main_body\">\r\n                  <h2>Page not found</h2>\r\n                </section>\r\n                {/* <Redirect to=\"/\" /> */}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // useLocation,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport \"./style/main.css\";\r\nimport { MainRouter } from \"./routes/MainRouter\";\r\nimport Signin from \"./containers/auth/Signin\";\r\nimport Signup from \"./containers/auth/Signup\";\r\n// import Home from \"./containers/Home\";\r\nimport LinkWebsite from \"./containers/LinkWebsite\";\r\n// import { Profile } from \"./containers/Profile\";\r\n\r\n\r\nexport const App = () => {\r\n  // console.log(process.env.PUBLIC_URL)\r\n  let querry = window.location.search.split(\"?\").slice(1, 2).join();\r\n  // console.log(window.location);\r\n  // console.log(querry);\r\n  // console.log(querry2);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {querry ? <Redirect to={process.env.PUBLIC_URL + querry} /> : <></>}\r\n        <Switch>\r\n          {/* <Route exact path=\"/\" render={() => {\r\n                // console.log(data)\r\n                return (\r\n                  <>\r\n                    <MainRouter token={this.state.token}/>\r\n                  </>\r\n                );\r\n              }}/> */}\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signin\"}\r\n            component={Signin}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signup\"}\r\n            component={Signup}\r\n          />\r\n          {/* <Route exact path=\"/profile\" component={Profile} /> */}\r\n          {/* <Route exact path=\"/signup\" component={Signup} /> */}\r\n          {/* <Route exact path=\"/home\" component={Home} /> */}\r\n          {/* <Route exact path=\"/link/:id\" component={LinkWebsite} /> */}\r\n\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/page/:id\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite id={props.match.params.id} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n\r\n          {/* <Route\r\n            exact\r\n            path=\"/page/:id\"\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite\r\n                    id={props.match.params.id}\r\n                  />\r\n                </>\r\n              );\r\n            }}\r\n          /> */}\r\n\r\n          <MainRouter path={process.env.PUBLIC_URL + \"/\"} />\r\n\r\n          {/* <Redirect to={process.env.PUBLIC_URL} /> */}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// /*\r\n\r\nconst script = () => {\r\n  let months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  let currentDate = new Date();\r\n  let day = currentDate.getDay();\r\n  let hour = currentDate.getHours();\r\n  if (hour.toString().length < 2) {\r\n    hour = \"0\" + hour;\r\n  }\r\n\r\n  let minute = currentDate.getMinutes();\r\n  if (minute.toString().length < 2) {\r\n    minute = \"0\" + minute;\r\n  }\r\n\r\n  let second = currentDate.getSeconds();\r\n  if (second.toString().length < 2) {\r\n    second = \"0\" + second;\r\n  }\r\n\r\n  let date = currentDate.getDate();\r\n  if (date.toString().length < 2) {\r\n    date = \"0\" + date;\r\n  }\r\n\r\n  let month = currentDate.getMonth();\r\n\r\n  // let year = currentDate.getFullYear();\r\n\r\n  let time = hour + \":\" + minute;\r\n\r\n  let courses = document.querySelectorAll(\"#link-page .course\");\r\n\r\n  let liveClasses = document.querySelectorAll(\"#link-page .hide\");\r\n\r\n  let todayClasses = document.querySelectorAll(\"#link-page .hide2\");\r\n\r\n  courses.forEach((val, i) => {\r\n    // console.log(val)\r\n    val.innerText.split(\"\\n\").forEach((val, temp) => {\r\n      if (val[val.length - 3] === \":\") {\r\n        let classTimes = val.split(\",\");\r\n        classTimes.forEach((value, ind) => {\r\n          let classTime = value.split(\" \");\r\n          if (\r\n            time < classTime[classTime.length - 3] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".today\")[0].innerHTML =\r\n              \"Today's Classes Left\";\r\n            todayClasses[i].setAttribute(\"class\", \"course leftToday\");\r\n          }\r\n          if (\r\n            time >= classTime[classTime.length - 3] &&\r\n            time < classTime[classTime.length - 1] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".running\")[0].innerHTML =\r\n              \"Classes Running...\";\r\n            liveClasses[i].setAttribute(\"class\", \"course live\");\r\n          }\r\n          if (classTime.indexOf(days[day]) !== -1) {\r\n            courses[i].setAttribute(\"class\", \"course today_class\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const timer = setInterval(() => {\r\n    currentDate = new Date();\r\n    day = currentDate.getDay();\r\n    hour = currentDate.getHours();\r\n    if (hour.toString().length < 2) {\r\n      hour = \"0\" + hour;\r\n    }\r\n\r\n    minute = currentDate.getMinutes();\r\n    if (minute.toString().length < 2) {\r\n      minute = \"0\" + minute;\r\n    }\r\n\r\n    second = currentDate.getSeconds();\r\n    if (second.toString().length < 2) {\r\n      second = \"0\" + second;\r\n    }\r\n    try {\r\n      document.getElementById(\"time\").innerText =\r\n        hour + \":\" + minute + \":\" + second;\r\n      document.getElementById(\"date\").innerText =\r\n        days[day] + \", \" + months[month] + \" \" + date;\r\n    } catch {\r\n      //   console.log(\"timer timer\")\r\n      clearInterval(timer);\r\n    }\r\n\r\n    if (\r\n      (minute.toString() === \"00\" || minute.toString() === \"30\") &&\r\n      second.toString() === \"00\"\r\n    ) {\r\n      window.location.reload();\r\n    }\r\n  }, 1000);\r\n\r\n  // console.log(\"hello\")\r\n};\r\n\r\n\r\nconst start = setInterval(() => {\r\n  const load = document.getElementById(\"time\");\r\n  if (load) {\r\n    script();\r\n    clearInterval(start)\r\n  }\r\n}, 100);\r\n\r\n\r\n// */"],"sourceRoot":""}