{"version":3,"sources":["containers/Header.js","containers/Profile.js","containers/Home.js","containers/AddData.js","containers/Inbox.js","routes/LoginRouter.js","routes/MainRouter.js","containers/auth/Signin.js","containers/auth/Signup.js","containers/LinkPage.js","containers/PublicPage.js","containers/LinkWebsite.js","App.js","reportWebVitals.js","index.js","script/link_page.js"],"names":["Header","props","useState","navToggle","setNavToggle","className","to","onClick","console","log","id","process","params","data","user_name","Profile","user","name","email","phone","Cookies","remove","Home","user_data","href","firstRun","initLinks","AddData","links","setLinks","useEffect","update","addLink","title","link","newLink","target","onDelete","filter","e","a","token","get","fetch","method","headers","Accept","Authorization","body","JSON","stringify","alert","Links","length","map","ind","OneLink","AddLink","setTitle","setLink","onSubmit","preventDefault","htmlFor","type","value","onChange","Inbox","msg","setMsg","currentChat","setCurrentChat","addFrndInp","setAddFrndInp","inMsg","setInMsg","messages","setMeassages","socket","useRef","scrollRef","current","io","on","message","from_user_name","prev","emit","users","scrollIntoView","behavior","openChat","getChat","addFriend","window","location","reload","chats_id","val","placeholder","currentTarget","submit","to_user_name","updateChat","ChatWindow","onKeyDownCapture","key","chat_id","res","json","Friend","Message","classes","ref","LoginRouter","state","loading","status","this","setState","React","Component","UserFound","path","render","exact","MainRouter","URL","Signin","islogin","password","set","username","error","Signup","LinkPage","class","CourseCard","course","time","Timing","section","ClassLink","PublicPage","Card","LinkWebsite","App","querry","search","split","slice","join","component","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","start","setInterval","months","days","currentDate","Date","day","getDay","hour","getHours","toString","minute","getMinutes","second","getSeconds","date","getDate","month","getMonth","courses","querySelectorAll","liveClasses","todayClasses","forEach","i","innerText","temp","classTime","indexOf","innerHTML","setAttribute","timer","clearInterval","script"],"mappings":"yTAOaA,EAAS,SAACC,GAErB,MAAkCC,mBAAS,UAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAYA,OACE,mCACE,iCACE,sBAAKC,UAAU,iEAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,oCAA1B,SACE,sBAAMA,UAAU,uDAAuD,cAAY,cAAnF,qBAEF,wBAAQA,UAAU,6EAA6EE,QAAS,WAjB5F,KAAdJ,GACFC,EAAa,UACbI,QAAQC,IAAIN,KAGZK,QAAQC,IAAIN,EAAW,QACvBC,EAAa,MAWT,SACE,cAAC,IAAD,MAEF,qBAAKC,UAAWF,EAAU,wDAAyDO,GAAG,aAAtF,SACE,sBAAKL,UAAU,sDAAf,UACE,cAAC,IAAD,CAASA,UAAU,4FAA4FC,GAAIK,kBAAnH,SACE,0CAEF,cAAC,IAAD,CAASN,UAAU,4FAA4FC,GAAIK,wBAAoCC,OAAQ,CAAEC,KAAMZ,EAAMa,WAA7K,SACE,2CAEF,cAAC,IAAD,CAAST,UAAU,4FAA4FC,GAAIK,0BAAnH,SACE,+BAAOV,EAAMa,2BCrChBC,EAAU,SAACd,GACtB,IAGMe,EAAOf,EAAMe,KAEnB,OACE,qCACE,gCACE,oDACA,yCAAYA,EAAKC,QACjB,8CAAiBD,EAAKF,aACtB,0CAAaE,EAAKE,SAClB,6CAAgBF,EAAKG,YAEvB,cAAC,IAAD,CAAMb,GAAIK,kBAAV,SACE,wBACEJ,QAAS,WAffa,IAAQC,OAAO,UAcX,2BCNKC,EAAO,SAACrB,GACnB,IAAMe,EAAOf,EAAMY,KAAKG,KAClBH,EAAOZ,EAAMY,KAAKU,UAExB,OAAQ,qCAEN,sBAAKlB,UAAU,GAAf,UACE,wCAAWW,EAAKC,QAChB,kEAEF,8BACGJ,EAAKA,KAAK,GACX,qCACA,yDAA2B,mBAAGW,KAAMb,uBAAgCE,EAAKC,UAA9C,qBAC3B,cAAC,IAAD,CAAMR,GAAIK,2BAAqCC,OAAQ,CAACC,KAAMA,GAA9D,SAAsE,oDAGtE,qCACA,iEACA,cAAC,IAAD,CAAMP,GAAIK,2BAAqCC,OAAQ,CAACC,KAAMA,GAA9D,SAAsE,0D,QCxBxEY,GAAW,EACXC,EAAY,GAEHC,EAAU,SAAC1B,GAKlBwB,IAEFC,EAAYzB,EAAMY,KAAKU,UAAUV,KACjCY,GAAW,GAGb,IAkBA,EAA0BvB,mBAASwB,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAOA,OALAC,qBAAU,WACRC,EAAOH,GACPF,EAAYE,IACX,CAACA,IAGF,qCACE,cAAC,EAAD,CAASI,QAlBG,SAACC,EAAOC,GACtB,IAAMC,EAAU,CACdF,MAAOA,EACPC,KAAMA,GAERL,EAAS,GAAD,mBAAKD,GAAL,CAAYO,QAclB,2DAC4B,IAC1B,mBAAGX,KAAMb,uBAAkCV,EAAMY,KAAKU,UAAUT,UAAWsB,OAAO,QAAlF,SACGzB,uBAAkCV,EAAMY,KAAKU,UAAUT,eAG5D,cAAC,EAAD,CAAOc,MAAOA,EAAOS,SAlCR,SAACH,GAEhBL,EACED,EAAMU,QAAO,SAACC,GACZ,OAAOA,IAAML,aAmCfH,EAAM,uCAAG,WAAOH,GAAP,eAAAY,EAAA,6DACPC,EAAQrB,IAAQsB,IAAI,SADb,kBAILC,MA9DShC,0DA8DS,CACtBiC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAeN,GAEjBO,KAAMC,KAAKC,UAAU,CAEnBrC,KAAMe,MAbC,uDAoBXpB,QAAQC,IAAR,MACA0C,MAAM,wBArBK,yDAAH,sDAyBNC,EAAQ,SAACnD,GACb,OACE,mCACE,gCACE,4CACwB,IAAvBA,EAAM2B,MAAMyB,OACT,sBACApD,EAAM2B,MAAM0B,KAAI,SAACpB,EAAMqB,GACrB,OACE,cAAC,EAAD,CAAmBrB,KAAMA,EAAMG,SAAUpC,EAAMoC,UAAjCkB,YAQxBC,EAAU,SAAC,GAAwB,IAAtBtB,EAAqB,EAArBA,KAAMG,EAAe,EAAfA,SACvB,OACE,mCACE,gCACE,6BAAKH,EAAKD,QACV,mBAAGT,KAAMU,EAAKA,KAAME,OAAO,QAA3B,SACGF,EAAKA,OAER,wBACE3B,QAAS,WACP8B,EAASH,IAFb,0BAYFuB,EAAU,SAACxD,GACf,MAA0BC,mBAAS,IAAnC,mBAAO+B,EAAP,KAAcyB,EAAd,KACA,EAAwBxD,mBAAS,IAAjC,mBAAOgC,EAAP,KAAayB,EAAb,KAWA,OACE,mCACE,8BACE,uBAAMtD,UAAU,OAAOuD,SAbd,SAACrB,GACdA,EAAEsB,iBACG5B,GAAUC,GAGbjC,EAAM+B,QAAQC,EAAOC,GACrBwB,EAAS,IACTC,EAAQ,KAJRR,MAAM,kCAUJ,UACE,4CACA,sBAAK9C,UAAU,YAAf,UACE,uBAAOyD,QAAQ,QAAf,uBACA,uBACEC,KAAK,OACLC,MAAO/B,EACPgC,SAAU,SAAC1B,GACTmB,EAASnB,EAAEH,OAAO4B,aAIxB,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,QAAf,kBACA,uBACEC,KAAK,OACLC,MAAO9B,EACP+B,SAAU,SAAC1B,GACToB,EAAQpB,EAAEH,OAAO4B,aAIvB,wBAAQD,KAAK,SAAb,8B,QCjJGG,G,OAAQ,SAACjE,GAGpB,MAAsBC,mBAAS,IAA/B,mBAAOiE,EAAP,KAAYC,EAAZ,KACA,EAAsClE,mBAAS,MAA/C,mBAAOmE,EAAP,KAAoBC,EAApB,KACA,EAAoCpE,mBAAS,IAA7C,mBAAOqE,EAAP,KAAmBC,EAAnB,KACA,EAA0BtE,mBAAS,MAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KACA,EAAiCxE,mBAAS,IAA1C,mBAAOyE,EAAP,KAAiBC,EAAjB,KACMC,EAASC,mBACTC,EAAYD,mBAElBhD,qBAAU,WACR+C,EAAOG,QAAUC,aAjBTtE,+CAkBRkE,EAAOG,QAAQE,GAAG,cAAc,SAACrE,GAC/B6D,EAAS,CACPS,QAAStE,EAAKsE,QACdlE,KAAMJ,EAAKuE,sBAGd,IAEHtD,qBAAU,WACJ2C,GAASJ,IAAgBI,EAAMxD,MACjC2D,GAAa,SAACS,GAAD,4BAAcA,GAAd,CAAoBZ,SAElC,CAACA,EAAOJ,IAEXvC,qBAAU,WACR+C,EAAOG,QAAQM,KAAK,UAAWrF,EAAMe,KAAKF,WAE1C+D,EAAOG,QAAQE,GAAG,YAAY,SAACK,GAC7B/E,QAAQC,IAAI8E,QAEb,CAACtF,EAAMe,OAuBVc,qBAAU,WAAO,IAAD,EACd,UAAAiD,EAAUC,eAAV,SAAmBQ,eAAe,CAAEC,SAAU,aAC7C,CAACd,IAEJ,IAAMe,EAAQ,uCAAG,WAAO5E,GAAP,eAAA0B,EAAA,sEAEQmD,EAAQ7E,GAFhB,OAET6D,EAFS,OAGfL,EAAexD,GAEf8D,EAAaD,GALE,2CAAH,sDAQRiB,EAAS,uCAAG,WAAOrD,GAAP,SAAAC,EAAA,yDAChBD,EAAEsB,kBACEU,EAFY,uBAGd/D,QAAQC,IAAI8D,GAHE,SAIKoB,EAAQpB,GAJb,eAMZsB,OAAOC,SAASC,SANJ,2CAAH,sDAWf,OACE,mCACE,yBAAS1F,UAAU,aAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,YAAf,SACE,6BAAKJ,EAAMe,KAAKF,cAElB,sBAAKT,UAAU,wBAAf,UACGJ,EAAMe,KAAKgF,SAAS1C,KAAI,SAAC2C,EAAK1C,GAC7B,OAAO,cAAC,EAAD,CAAkB1C,KAAMoF,EAAKP,SAAUA,GAA1BnC,MAEtB,sBAAKlD,UAAU,YAAf,UACE,uBACE0D,KAAK,OACLmC,YAAY,2BACZlC,MAAOO,EACPN,SAAU,SAAC1B,GAAD,OAAOiC,EAAcjC,EAAE4D,cAAcnC,UAGjD,wBACEzD,QAAS,SAACgC,GACRqD,EAAUrD,IAFd,iCAUN,qBAAKlC,UAAU,cAAf,SACGgE,EACC,mCACA,cAAC,EAAD,CACAA,YAAcA,EACdM,SAAUA,EACVI,UAAWA,EACX/D,KAAMf,EAAMe,KAAKF,UACjBqD,IAAKA,EACLC,OAAQA,EACRgC,OApFG,SAAC7D,GAEd,GADAA,EAAEsB,iBACEM,EAAK,CACP,IAAMkC,EAAehC,EACrBQ,EAAOG,QAAQM,KAAK,cAAe,CACjCF,eAAgBnF,EAAMe,KAAKF,UAC3BuF,aAAcA,EACdlB,QAAShB,IAGX,IAAMtD,EAAO,CACXsE,QAAShB,EACTlD,KAAMhB,EAAMe,KAAKF,WAEnBwF,EAAWjC,EAAaxD,GACxB+D,EAAa,GAAD,mBAAKD,GAAL,CAAe9D,KAC3BuD,EAAO,UAwEC,mCACE,sBAAM/D,UAAU,gBAAhB,sCAUVkG,EAAa,SAACtG,GAClB,OACE,qCACE,qBAAKI,UAAU,MAAf,SACE,6BAAKJ,EAAMoE,gBAEb,qBAAKhE,UAAU,yBAAyBK,GAAG,eAA3C,SACGT,EAAM0E,SAASrB,KAAI,SAAC2C,EAAK1C,GACxB,OAEE,aADA,CACC,EAAD,CAEEvC,KAAMf,EAAMe,KACZH,KAAMoF,EACNlB,UAAW9E,EAAM8E,WAHZxB,QASb,uBAAMlD,UAAU,OAAOK,GAAG,uBAA1B,UACE,uBACEL,UAAU,WACV0D,KAAK,OACLmC,YAAY,cACZlC,MAAO/D,EAAMkE,IACbF,SAAU,SAAC1B,GAAD,OAAOtC,EAAMmE,OAAO7B,EAAE4D,cAAcnC,QAC9CtD,GAAG,mBACH8F,iBAAkB,SAACjE,GAAD,MAAkB,UAAVA,EAAEkE,IAAkBxG,EAAMmG,OAAO7D,GAAK,QAElE,wBACElC,UAAU,MACVK,GAAG,YACHH,QAAS,SAACgC,GACRtC,EAAMmG,OAAO7D,IAJjB,yBAcF+D,EAAU,uCAAG,WAAOD,EAAclB,GAArB,eAAA3C,EAAA,6DACXC,EAAQrB,IAAQsB,IAAI,SADT,kBAITC,MAzLOhC,0DAyLS,CACpBiC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAeN,GAEjBO,KAAMC,KAAKC,UAAU,CACnBmD,eACAlB,cAbW,uDAmBf3E,QAAQC,IAAR,MACA0C,MAAM,wBApBS,yDAAH,wDAwBVwC,EAAO,uCAAG,WAAOe,GAAP,mBAAAlE,EAAA,6DACRC,EAAQrB,IAAQsB,IAAI,SADZ,kBAGMC,MAjNNhC,wDAiNqB,CAC/BiC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAeN,GAEjBO,KAAMC,KAAKC,UAAU,CACnBpC,UAAW4F,MAXH,cAGNC,EAHM,gBAcWA,EAAIC,OAdf,cAcNjC,EAdM,yBAgBLA,GAhBK,kCAkBZnE,QAAQC,IAAR,MACA0C,MAAM,kBAnBM,0DAAH,sDAuBP0D,EAAS,SAAC5G,GAEd,OACE,mCACE,qBACEM,QAAS,WACPN,EAAMyF,SAASzF,EAAMY,KAAKwF,eAF9B,SAKE,qBAAKhG,UAAU,OAAf,SACE,6BAAKJ,EAAMY,KAAKwF,sBAOpBS,EAAU,SAAC7G,GACf,IAAIgB,EAAO,GACP8F,EAAU,SAOd,OANI9G,EAAMY,KAAKI,OACbA,EAAOhB,EAAMY,KAAKI,OAAShB,EAAMe,KAAO,GAAKf,EAAMY,KAAKI,KACxD8F,EAAU9G,EAAMY,KAAKI,OAAShB,EAAMe,KAAO,QAAU,QAKrD,mCACE,sBAAKgG,IAAK/G,EAAM8E,UAAW1E,UAAW,eAAiB0G,EAAvD,UACE,uBAAO1G,UAAU,gBAAjB,SAAkCY,IAClC,mBAAGZ,UAAW,mBAAqB0G,EAAnC,SAA6C9G,EAAMY,KAAKsE,gBCjQ3C8B,E,4MAEnBC,MAAQ,CACNC,SAAS,EACTtG,KAAM,KACNuG,OAAQ,M,8FAMV,gCAAA5E,EAAA,2DACQC,EAAQ4E,KAAKpH,MAAMwC,OAD3B,gCAIsBE,MAjBZhC,+CAiBuB,CAC3BiC,OAAQ,MACRC,QAAS,CACPC,OAAQ,MACRC,cAAeN,KARvB,cAIUkE,EAJV,gBAYuBA,EAAIC,OAZ3B,OAYU/F,EAZV,OAaIwG,KAAKC,SAAS,CACZzG,KAAMA,EACNsG,SAAS,EACTC,OAAQT,EAAIS,SAhBlB,gD,0EA0BA,WAEE,OACE,mCACGC,KAAKH,MAAMC,QACV,yBAAS9G,UAAU,YAAnB,0BAEA,mCACyB,MAAtBgH,KAAKH,MAAME,OACV,cAAC,EAAD,CAAWvG,KAAMwG,KAAKH,MAAMrG,KAAM4B,MAAO4E,KAAKpH,MAAMwC,QAEpD,cAAC,IAAD,CAAUnC,GAAIK,mC,GAhDa4G,IAAMC,WAyDzCC,EAAY,SAACxH,GAEjB,IAAMY,EAAOZ,EAAMY,KACnB,OACE,qCACE,cAAC,EAAD,CAAQC,UAAWD,EAAKG,KAAKF,YAC7B,yBAAST,UAAU,YAAnB,SACE,cAAC,IAAD,CACEqH,KAAM/G,kBACNgH,OAAQ,WACN,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLF,KAAM/G,kBACNgH,OAAQ,WACN,OACE,mCACE,cAAC,EAAD,CAAM9G,KAAMA,SAKpB,cAAC,IAAD,CACE+G,OAAK,EACLF,KAAM/G,2BACNgH,OAAQ,WACN,OACE,mCACE,cAAC,EAAD,CAAS9G,KAAMA,EAAM4B,MAAOxC,EAAMwC,aAK1C,cAAC,IAAD,CACEmF,OAAK,EACLF,KAAM/G,0BACNgH,OAAQ,WACN,OACE,mCACE,cAAC,EAAD,CAAS3G,KAAMH,EAAKG,YAK5B,cAAC,IAAD,CACE0G,KAAM/G,wBACNgH,OAAQ,WACN,OACE,mCACE,cAAC,EAAD,CAAO3G,KAAMH,EAAKG,0BCpH/B6G,EAAa,WACtB,IAAMpF,EAAQrB,IAAQsB,IAAI,SAG1B,OAAO,mCACFD,EACD,qCACA,cAAC,IAAD,CAAUnC,GAAIK,0BACd,cAAC,EAAD,CAAa8B,MAAOA,OAGpB,mCACA,cAAC,IAAD,CAAUnC,GAAIK,gCCVhBmH,EAAMnH,qDAGSoH,E,4MACnBb,MAAQ,CACNc,SAAS,EACTnH,KAAM,KACNC,UAAW,GACXmH,SAAU,I,EAEZ7B,O,sBAAS,gCAAA5D,EAAA,sEACWG,MAAMmF,EAAK,CAE3BlF,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CACnBpC,UAAW,EAAKoG,MAAMpG,UACtBmH,SAAU,EAAKf,MAAMe,aAVlB,cACDtB,EADC,gBAaYA,EAAIC,OAbhB,YAaD/F,EAbC,QAcE4B,MAdF,wBAeCA,EAAQ,UAAY5B,EAAK4B,MAf1B,UAgBCrB,IAAQ8G,IAAI,QAASzF,GAhBtB,QAiBL,EAAK6E,SAAS,CAAEa,SAAU,GAAIF,SAAU,GAAID,SAAS,IAjBhD,wBAoBL7E,MAAMtC,EAAKuH,OACX,EAAKd,SAAS,CAAExG,UAAW,GAAImH,SAAU,KArBpC,4C,4CAyBT,WAAU,IAAD,OACP,OACE,mCACGZ,KAAKH,MAAMc,QACV,cAAC,IAAD,CAAU1H,GAAIK,0BAEd,mCACE,yBAASN,UAAU,YAAnB,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,eAAd,mBACA,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOyD,QAAQ,YAAf,uBACA,uBACEC,KAAK,OACLC,MAAOqD,KAAKH,MAAMpG,UAClBmD,SAAU,SAAC1B,GACT,EAAK+E,SAAS,CAAExG,UAAWyB,EAAEH,OAAO4B,cAI1C,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLC,MAAOqD,KAAKH,MAAMe,SAClBhE,SAAU,SAAC1B,GACT,EAAK+E,SAAS,CAAEW,SAAU1F,EAAEH,OAAO4B,SAErCwC,iBAAkB,SAACjE,GAAD,MACN,UAAVA,EAAEkE,IAAkB,EAAKL,OAAO7D,GAAK,WAI3C,qBAAKlC,UAAU,YAAf,SACE,wBACEE,QAAS,WACP,EAAK6F,UAFT,wBASJ,cAAC,IAAD,CACE/F,UAAU,YACVC,GAAIK,yBAFN,mD,GA5EoB4G,IAAMC,WCJpCM,EAAMnH,qDAES0H,E,4MAEnBnB,MAAQ,CACNc,SAAS,EACTnH,KAAM,KACNI,KAAM,GACNH,UAAW,GACXI,MAAO,GACP+G,SAAU,GACV9G,MAAO,I,EAETiF,O,sBAAS,8BAAA5D,EAAA,sEACWG,MAAMmF,EAAK,CAS3BlF,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CACnBjC,KAAM,EAAKiG,MAAMjG,KACjBH,UAAW,EAAKoG,MAAMpG,UACtBI,MAAO,EAAKgG,MAAMhG,MAClB+G,SAAU,EAAKf,MAAMe,SACrB9G,MAAO,EAAK+F,MAAM/F,UApBf,cACDwF,EADC,gBAuBYA,EAAIC,OAvBhB,QAuBD/F,EAvBC,QAwBE4B,OAGPU,MAAM,gCACN,EAAKmE,SAAS,CACZrG,KAAM,GACNH,UAAW,GACXI,MAAO,GACP+G,SAAU,GACV9G,MAAO,EACP6G,SAAS,KAKX7E,MAAMtC,EAAKuH,OAvCN,2C,4CA6CT,WAAU,IAAD,OACP,OACE,mCACGf,KAAKH,MAAMc,QACV,cAAC,IAAD,CAAU1H,GAAIK,2BAEd,mCACE,yBAASN,UAAU,YAAnB,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,eAAd,qBACA,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOyD,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLC,MAAOqD,KAAKH,MAAMjG,KAClBgD,SAAU,SAAC1B,GACT,EAAK+E,SAAS,CAAErG,KAAMsB,EAAEH,OAAO4B,cAIrC,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,YAAf,uBACA,uBACEC,KAAK,OACLC,MAAOqD,KAAKH,MAAMpG,UAClBmD,SAAU,SAAC1B,GACT,EAAK+E,SAAS,CAAExG,UAAWyB,EAAEH,OAAO4B,cAI1C,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,YAAf,mBACA,uBACEC,KAAK,OACLC,MAAOqD,KAAKH,MAAMhG,MAClB+C,SAAU,SAAC1B,GACT,EAAK+E,SAAS,CAAEpG,MAAOqB,EAAEH,OAAO4B,cAItC,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLC,MAAOqD,KAAKH,MAAMe,SAClBhE,SAAU,SAAC1B,GACT,EAAK+E,SAAS,CAAEW,SAAU1F,EAAEH,OAAO4B,cAIzC,sBAAK3D,UAAU,YAAf,UACE,uBAAOyD,QAAQ,QAAf,sBACA,uBACEC,KAAK,SACLC,MAAOqD,KAAKH,MAAM/F,MAClB8C,SAAU,SAAC1B,GACT,EAAK+E,SAAS,CAAEnG,MAAOoB,EAAEH,OAAO4B,cAItC,qBAAK3D,UAAU,YAAf,SACE,wBACEE,QAAS,WACP,EAAK6F,UAFT,yBASJ,cAAC,IAAD,CAAM/F,UAAU,YAAYC,GAAIK,yBAAhC,2D,GA/HoB4G,IAAMC,WCJ7Bc,G,MAAW,SAACrI,GACrB,IAAMY,EAAOZ,EAAMY,KAEnB,OACI,mCACI,sBAAKH,GAAG,YAAR,UACI,iCACI,gCACI,8BACI,4CAEJ,sBAAKL,UAAU,OAAf,UACI,qBAAKK,GAAG,SACR,qBAAKA,GAAG,iBAIpB,0BAASL,UAAU,OAAnB,UACI,sBAAKA,UAAU,aAAf,UACI,oBAAIA,UAAU,OAAd,wBACA,oBAAIA,UAAU,YAAd,kBACA,oBAAIA,UAAU,cAAd,0BACA,oBAAIA,UAAU,SAAd,8BAEJ,4CAEA,oBAAIA,UAAU,UAAd,sCACA,qBAAKA,UAAU,iBAAf,SAEQQ,EAAKyC,KAAI,SAAC2C,EAAK1C,GACX,OACI,cAAC,EAAD,CAEI1C,KAAMoF,EACNsC,MAAO,QAFFhF,QASzB,oBAAIlD,UAAU,QAAd,uCACA,qBAAKA,UAAU,iBAAf,SAEQQ,EAAKyC,KAAI,SAAC2C,EAAK1C,GACX,OACI,cAAC,EAAD,CAEI1C,KAAMoF,EACNsC,MAAO,SAFFhF,QASzB,2DACA,qBAAKlD,UAAU,iBAAf,SAEQQ,EAAKyC,KAAI,SAAC2C,EAAK1C,GACX,OACI,cAAC,EAAD,CAEI1C,KAAMoF,EACNsC,MAAO,iBAFFhF,kBAcvCiF,EAAa,SAACvI,GAEhB,OAAQ,mCACJ,sBAAKI,UAAWJ,EAAMsI,MAAtB,UACI,6BAAKtI,EAAMY,KAAK4H,SAEZxI,EAAMY,KAAK6H,KAAKpF,KAAI,SAAC2C,EAAK1C,GACtB,OACI,cAAC,EAAD,CAEI1C,KAAMoF,GADD1C,YAU3BoF,EAAS,SAAC1I,GAEZ,OACI,qCACI,oBAAII,UAAU,OAAd,SAAsBJ,EAAMY,KAAK6H,OAE7BzI,EAAMY,KAAK+H,QAAQtF,KAAI,SAAC2C,EAAK1C,GACzB,OACI,cAAC,EAAD,CAEI1C,KAAMoF,GADD1C,UAU3BsF,EAAY,SAAC5I,GAEf,OAAQ,mCACJ,6BACI,mBAAGuB,KAAMvB,EAAMY,KAAKqB,KAAME,OAAO,QAAjC,SAA0CnC,EAAMY,KAAK+H,eCtHpDE,EAAa,SAAC7I,GACvB,IAAMY,EAAOZ,EAAMY,KAEnB,OACI,mCACI,qBAAKH,GAAG,YAAR,SAEI,yBAASL,UAAU,OAAnB,SACI,qBAAKA,UAAU,iBAAf,SAEQQ,EAAKyC,KAAI,SAAC2C,EAAK1C,GACX,OACI,cAAC,EAAD,CAEI1C,KAAMoF,GADD1C,eAavCwF,EAAO,SAAC9I,GAEV,OAAQ,mCACJ,qBAAKI,UAAU,gBAAf,SACI,mBAAGmB,KAAMvB,EAAMY,KAAKqB,KAAME,OAAO,QAAjC,SAA0CnC,EAAMY,KAAKoB,aC1B5C+G,E,4MACnB9B,MAAQ,CACNC,SAAS,EACTtG,KAAM,M,8FAGR,8BAAA2B,EAAA,sEAEoBG,MAXVhC,oDAWsB0G,KAAKpH,MAAMS,IAF3C,UAGqB,OADbiG,EAFR,QAGUS,OAHV,gBAIIC,KAAKC,SAAS,CAAEH,SAAS,IAJ7B,uCAMuBR,EAAIC,OAN3B,OAMU/F,EANV,OAOIwG,KAAKC,SAAS,CAAEzG,KAAMA,EAAMsG,SAAS,IAPzC,iD,0EAWA,WACE,OACE,mCACGE,KAAKH,MAAMC,QACV,yBAAS9G,UAAU,YAAnB,SACE,gDAGF,mCACGgH,KAAKH,MAAMrG,KACV,mCACqB,YAAlBwG,KAAKpH,MAAMS,GACV,8BACE,cAAC,EAAD,CAAYG,KAAMwG,KAAKH,MAAMrG,SAG/B,8BACE,cAAC,EAAD,CAAUA,KAAMwG,KAAKH,MAAMrG,WAKjC,mCACE,yBAASR,UAAU,YAAnB,SACE,4D,GAzCuBkH,IAAMC,WCsFhCyB,GAtEI,WAEjB,IAAIC,EAASrD,OAAOC,SAASqD,OAAOC,MAAM,KAAKC,MAAM,EAAG,GAAGC,OAK3D,OACE,mCACE,eAAC,IAAD,WACGJ,EAAS,cAAC,IAAD,CAAU5I,GAAIK,iBAAyBuI,IAAa,6BAC9D,eAAC,IAAD,WASE,cAAC,IAAD,CACEtB,OAAK,EACLF,KAAM/G,yBACN4I,UAAWxB,IAEb,cAAC,IAAD,CACEH,OAAK,EACLF,KAAM/G,yBACN4I,UAAWlB,IAOb,cAAC,IAAD,CACET,OAAK,EACLF,KAAM/G,0BACNgH,OAAQ,SAAC1H,GACP,OACE,mCACE,cAAC,EAAD,CAAaS,GAAIT,EAAMuJ,MAAM5I,OAAOF,UAoB5C,cAAC,EAAD,CAAYgH,KAAM/G,6BC1Eb8I,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASvC,OACP,cAAC,IAAMwC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M,iBCdA,IAyHMa,EAAQC,aAAY,WACXH,SAASC,eAAe,WA1HxB,WACb,IAAIG,EAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEEC,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAClDC,EAAc,IAAIC,KAClBC,EAAMF,EAAYG,SAClBC,EAAOJ,EAAYK,WACnBD,EAAKE,WAAW3H,OAAS,IAC3ByH,EAAO,IAAMA,GAGf,IAAIG,EAASP,EAAYQ,aACrBD,EAAOD,WAAW3H,OAAS,IAC7B4H,EAAS,IAAMA,GAGjB,IAAIE,EAAST,EAAYU,aACrBD,EAAOH,WAAW3H,OAAS,IAC7B8H,EAAS,IAAMA,GAGjB,IAAIE,EAAOX,EAAYY,UACnBD,EAAKL,WAAW3H,OAAS,IAC3BgI,EAAO,IAAMA,GAGf,IAAIE,EAAQb,EAAYc,WAIpB9C,EAAOoC,EAAO,IAAMG,EAEpBQ,EAAUrB,SAASsB,iBAAiB,sBAEpCC,EAAcvB,SAASsB,iBAAiB,oBAExCE,EAAexB,SAASsB,iBAAiB,qBAE7CD,EAAQI,SAAQ,SAAC5F,EAAK6F,GAEpB7F,EAAI8F,UAAU3C,MAAM,MAAMyC,SAAQ,SAAC5F,EAAK+F,GACV,MAAxB/F,EAAIA,EAAI5C,OAAS,IACF4C,EAAImD,MAAM,KAChByC,SAAQ,SAAC7H,EAAOT,GACzB,IAAI0I,EAAYjI,EAAMoF,MAAM,KAE1BV,EAAOuD,EAAUA,EAAU5I,OAAS,KACF,IAAlC4I,EAAUC,QAAQzB,EAAKG,MAEvBR,SAASsB,iBAAiB,UAAU,GAAGS,UACrC,uBACFP,EAAaE,GAAGM,aAAa,QAAS,qBAGtC1D,GAAQuD,EAAUA,EAAU5I,OAAS,IACrCqF,EAAOuD,EAAUA,EAAU5I,OAAS,KACF,IAAlC4I,EAAUC,QAAQzB,EAAKG,MAEvBR,SAASsB,iBAAiB,YAAY,GAAGS,UACvC,qBACFR,EAAYG,GAAGM,aAAa,QAAS,iBAED,IAAlCH,EAAUC,QAAQzB,EAAKG,KACzBa,EAAQK,GAAGM,aAAa,QAAS,+BAO3C,IAAMC,EAAQ9B,aAAY,WACxBG,EAAc,IAAIC,KAClBC,EAAMF,EAAYG,UAClBC,EAAOJ,EAAYK,YACVC,WAAW3H,OAAS,IAC3ByH,EAAO,IAAMA,IAGfG,EAASP,EAAYQ,cACVF,WAAW3H,OAAS,IAC7B4H,EAAS,IAAMA,IAGjBE,EAAST,EAAYU,cACVJ,WAAW3H,OAAS,IAC7B8H,EAAS,IAAMA,GAEjB,IACEf,SAASC,eAAe,QAAQ0B,UAC9BjB,EAAO,IAAMG,EAAS,IAAME,EAC9Bf,SAASC,eAAe,QAAQ0B,UAC9BtB,EAAKG,GAAO,KAAOJ,EAAOe,GAAS,IAAMF,EAC3C,SAEAiB,cAAcD,GAIS,OAAtBpB,EAAOD,YAA6C,OAAtBC,EAAOD,YAChB,OAAtBG,EAAOH,YAEPnF,OAAOC,SAASC,WAEjB,KASDwG,GACAD,cAAchC,MAEf,M","file":"static/js/main.d6d03efb.chunk.js","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { IconName } from \"react-icons/vsc\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nexport const Header = (props) => {\r\n\r\n  const [navToggle, setNavToggle] = useState(\"hidden\");\r\n  const navToggler = () =>{\r\n    if (navToggle === \"\") {\r\n      setNavToggle(\"hidden\");\r\n      console.log(navToggle)\r\n    }\r\n    else{\r\n      console.log(navToggle, \"else\")\r\n      setNavToggle(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"fixed top-0 w-full flex items-center bg-gray-800 p-3 flex-wrap\">\r\n          <NavLink to=\"#\" className=\"p-2 mr-4 inline-flex items-center\">\r\n            <span className=\"text-xl text-white font-bold uppercase tracking-wide\" data-target=\"#navigation\">Alpha</span>\r\n          </NavLink>\r\n          <button className=\"nav-toggler text-white inline-flex p-2 hover:bg-gray-900 lg:hidden ml-auto\" onClick={()=>navToggler()}>\r\n            <MenuIcon />\r\n          </button>\r\n          <div className={navToggle+\" top-nav w-full lg:inline-flex lg:flex-grow lg:w-auto\"} id=\"navigation\">\r\n            <div className=\"lg:inline-flex lg:flex-row lg:ml-auto flex flex-col\">\r\n              <NavLink className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\" to={process.env.PUBLIC_URL + \"/\"}>\r\n                <span>Home</span>\r\n              </NavLink>\r\n              <NavLink className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\" to={process.env.PUBLIC_URL + \"/inbox/\"} params={{ data: props.user_name }}>\r\n                <span>Inbox</span>\r\n              </NavLink>\r\n              <NavLink className=\"lg:inline-flex lg:w-auto px-3 py-2 rounded text-white hover:text-gray-800 hover:bg-red-50\" to={process.env.PUBLIC_URL + \"/profile/\"}>\r\n                <span>{props.user_name}</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* <input type=\"checkbox\" id=\"check\" />\r\n          <label htmlFor=\"check\" className=\"nav-checkbtn\">\r\n            <span className=\"bar\"></span>\r\n            <span className=\"bar\"></span>\r\n            <span className=\"bar\"></span>\r\n          </label> */}\r\n          {/* <div className=\"nav-link\">\r\n            <NavLink className=\"lg:inline-flex\" to={process.env.PUBLIC_URL+\"/\"}>\r\n              <span>Home</span>\r\n            </NavLink>\r\n            <NavLink className=\"lg:inline-flex\" to={process.env.PUBLIC_URL+\"/inbox/\"} params={{ data: props.user_name }}>\r\n              <span>Inbox</span>\r\n            </NavLink>\r\n            <NavLink className=\"lg:inline-flex\" to={process.env.PUBLIC_URL+\"/profile/\"}>\r\n              <span>{props.user_name}</span>\r\n            </NavLink>\r\n          </div> */}\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const Profile = (props) => {\r\n  const logout = () => {\r\n    Cookies.remove(\"token\");\r\n  };\r\n  const user = props.user;\r\n  // console.log(user);\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1> Login Successful </h1>\r\n        <h4>Name : {user.name}</h4>\r\n        <h4>User Name : {user.user_name}</h4>\r\n        <h4>email : {user.email}</h4>\r\n        <h4>Phone No : {user.phone}</h4>\r\n      </div>\r\n      <Link to={process.env.PUBLIC_URL+\"/\"}>\r\n        <button\r\n          onClick={() => {\r\n            logout();\r\n          }}\r\n        >\r\n          Log out\r\n        </button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { Route, Switch} from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\n// import { Header } from \"./Header\";\r\n// import \"../style/header.css\";\r\n// import { LinkPage } from \"./LinkPage\";\r\n// import \"../style/home.css\";\r\n// import { Profile } from \"./Profile\";\r\n\r\n\r\nexport const Home = (props) => {\r\n  const user = props.data.user;\r\n  const data = props.data.user_data;\r\n  // console.log(data)\r\n  return (<>\r\n\r\n    <div className=\"\">\r\n      <h1>Hello {user.name}</h1>\r\n      <h2> Welcome to the Website Alpha</h2>\r\n    </div>\r\n    <div>\r\n      {data.data[0] ?\r\n      <>\r\n      <h3>Your link is available <a href={process.env.PUBLIC_URL+\"/page/\"+data.user_name}>Here</a></h3>\r\n      <Link to={process.env.PUBLIC_URL+\"/add_data/\"} params={{data: data}} ><button>Add Links</button></Link>\r\n      </>\r\n      :\r\n      <>\r\n      <h3>You have not saved anything yet</h3>\r\n      <Link to={process.env.PUBLIC_URL+\"/add_data/\"} params={{data: data}} ><button>Add Links</button></Link>\r\n      </>}\r\n    </div>\r\n  </>)\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst UPDATE_URL = process.env.REACT_APP_SERVER + \"/update/link\";\r\n\r\n// console.log(UPDATE_URL)\r\n// console.log(process.env.PUBLIC_URL)\r\n\r\nlet firstRun = true;\r\nlet initLinks = [];\r\n\r\nexport const AddData = (props) => {\r\n  // console.log(props.data.user_data.user_name)\r\n\r\n  // let initLinks = props.data.user_data.data;\r\n\r\n  if (firstRun) {\r\n    // console.log(\"first run\")\r\n    initLinks = props.data.user_data.data;\r\n    firstRun = false\r\n  }\r\n\r\n  const onDelete = (link) => {\r\n    // console.log(\"deleting the link \");\r\n    setLinks(\r\n      links.filter((e) => {\r\n        return e !== link;\r\n      })\r\n    );\r\n  };\r\n\r\n  const addLink = (title, link) => {\r\n    const newLink = {\r\n      title: title,\r\n      link: link,\r\n    };\r\n    setLinks([...links, newLink]);\r\n    // console.log(newLink)\r\n  };\r\n\r\n  const [links, setLinks] = useState(initLinks);\r\n\r\n  useEffect(() => {\r\n    update(links);\r\n    initLinks = links;\r\n  }, [links]);\r\n\r\n  return (\r\n    <>\r\n      <AddLink addLink={addLink} />\r\n      <h3>\r\n        Your link is available on{\" \"}\r\n        <a href={process.env.PUBLIC_URL+\"/page/\" + props.data.user_data.user_name} target=\"blank\">\r\n          {process.env.PUBLIC_URL+\"/page/\" + props.data.user_data.user_name}\r\n        </a>\r\n      </h3>\r\n      <Links links={links} onDelete={onDelete} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst update = async (links) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res = \r\n    await fetch(UPDATE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        // public\r\n        data: links,\r\n      }),\r\n    });\r\n    // const user_data = await res.json();\r\n    // console.log(user_data.data);\r\n    // return user_data.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nconst Links = (props) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3>Your Links</h3>\r\n        {props.links.length === 0\r\n          ? \"No links to display\"\r\n          : props.links.map((link, ind) => {\r\n              return (\r\n                <OneLink key={ind} link={link} onDelete={props.onDelete} />\r\n              );\r\n            })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst OneLink = ({ link, onDelete }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3>{link.title}</h3>\r\n        <a href={link.link} target=\"blank\">\r\n          {link.link}\r\n        </a>\r\n        <button\r\n          onClick={() => {\r\n            onDelete(link);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddLink = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !link) {\r\n      alert(\"Title or Link cannot be blank\");\r\n    } else {\r\n      props.addLink(title, link);\r\n      setTitle(\"\");\r\n      setLink(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form className=\"form\" onSubmit={submit}>\r\n          <h2>Add a Link</h2>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-cell\">\r\n            <label htmlFor=\"title\">Link</label>\r\n            <input\r\n              type=\"text\"\r\n              value={link}\r\n              onChange={(e) => {\r\n                setLink(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Add Link</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n/*\r\n\r\n{\"data\": [{\"title\": \"hello\",\r\n    \"link\": \"hello.com\"\r\n},\r\n{\"title\": \"hello2\",\r\n    \"link\": \"hello2.com\"\r\n}\r\n],\r\n\"public\" : true\r\n}\r\n\r\n\r\n*/\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { io } from \"socket.io-client\";\r\n// import { animateScroll } from 'react-scroll'\r\n\r\n// import \"../style/chats.css\";\r\nimport \"../script/chats\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER;\r\nconst GET_URL = process.env.REACT_APP_SERVER + \"/add/chats\";\r\nconst SEND_URL = process.env.REACT_APP_SERVER + \"/update/chat\";\r\n// console.log(URL)\r\n\r\nexport const Inbox = (props) => {\r\n  // console.log(props.user.chats_id);\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [addFrndInp, setAddFrndInp] = useState(\"\");\r\n  const [inMsg, setInMsg] = useState(null);\r\n  const [messages, setMeassages] = useState([]);\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io(URL);\r\n    socket.current.on(\"getMessage\", (data) => {\r\n      setInMsg({\r\n        message: data.message,\r\n        name: data.from_user_name,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (inMsg && currentChat === inMsg.name) {\r\n      setMeassages((prev) => [...prev, inMsg])\r\n    };\r\n  }, [inMsg, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", props.user.user_name);\r\n    // console.log(socket)\r\n    socket.current.on(\"getUsers\", (users) => {\r\n      console.log(users);\r\n    });\r\n  }, [props.user]);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (msg) {\r\n      const to_user_name = currentChat;\r\n      socket.current.emit(\"sendMessage\", {\r\n        from_user_name: props.user.user_name,\r\n        to_user_name: to_user_name,\r\n        message: msg,\r\n      });\r\n\r\n      const data = {\r\n        message: msg,\r\n        name: props.user.user_name,\r\n      };\r\n      updateChat(currentChat, data);\r\n      setMeassages([...messages, data]);\r\n      setMsg(\"\");\r\n      // console.log(data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const openChat = async (user_name) => {\r\n    // console.log(\"open chat run\");\r\n    const messages = await getChat(user_name);\r\n    setCurrentChat(user_name);\r\n    // console.log(messages);\r\n    setMeassages(messages);\r\n  };\r\n\r\n  const addFriend = async (e) => {\r\n    e.preventDefault();\r\n    if (addFrndInp) {\r\n      console.log(addFrndInp);\r\n      const chat = await getChat(addFrndInp);\r\n      if (chat) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"chats_page\">\r\n        <div className=\"partition\">\r\n          <div className=\"chat_list\">\r\n            <div className=\"user_name\">\r\n              <h2>{props.user.user_name}</h2>\r\n            </div>\r\n            <div className=\"chat_wrapper scroll-y\">\r\n              {props.user.chats_id.map((val, ind) => {\r\n                return <Friend key={ind} data={val} openChat={openChat} />;\r\n              })}\r\n              <div className=\"addFriend\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter friend's user name\"\r\n                  value={addFrndInp}\r\n                  onChange={(e) => setAddFrndInp(e.currentTarget.value)}\r\n                   \r\n                />\r\n                <button\r\n                  onClick={(e) => {\r\n                    addFriend(e);\r\n                  }}\r\n                >\r\n                  Add friend\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"chat_window\">\r\n            {currentChat ? (\r\n              <>\r\n              <ChatWindow\r\n              currentChat= {currentChat}\r\n              messages={messages}\r\n              scrollRef={scrollRef}\r\n              user={props.user.user_name}\r\n              msg={msg}\r\n              setMsg={setMsg}\r\n              submit={submit}\r\n              />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"noCurrentChat\">open a chat</span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChatWindow = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"top\">\r\n        <h2>{props.currentChat}</h2>\r\n      </div>\r\n      <div className=\"chats_display scroll-y\" id=\"scrollBottom\">\r\n        {props.messages.map((val, ind) => {\r\n          return (\r\n            //   <div>\r\n            <Message\r\n              key={ind}\r\n              user={props.user}\r\n              data={val}\r\n              scrollRef={props.scrollRef}\r\n            />\r\n            //   </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <form className=\"send\" id=\"chats-send-container\">\r\n        <input\r\n          className=\"formchat\"\r\n          type=\"text\"\r\n          placeholder=\" Message...\"\r\n          value={props.msg}\r\n          onChange={(e) => props.setMsg(e.currentTarget.value)}\r\n          id=\"chats-messageInp\"\r\n          onKeyDownCapture={(e) => (e.key === \"Enter\" ? props.submit(e) : null)}\r\n        />\r\n        <button\r\n          className=\"btn\"\r\n          id=\"chats-btn\"\r\n          onClick={(e) => {\r\n            props.submit(e);\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst updateChat = async (to_user_name, message) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    // const res =\r\n    await fetch(SEND_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        to_user_name,\r\n        message,\r\n      }),\r\n    });\r\n    // const result = await res.json();\r\n    // console.log(res);\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"Something went wrong\");\r\n  }\r\n};\r\n\r\nconst getChat = async (chat_id) => {\r\n  const token = Cookies.get(\"token\");\r\n  try {\r\n    const res = await fetch(GET_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: chat_id,\r\n      }),\r\n    });\r\n    const messages = await res.json();\r\n    // console.log(messages);\r\n    return messages;\r\n  } catch (err) {\r\n    console.log(err);\r\n    alert(\"user not found\");\r\n  }\r\n};\r\n\r\nconst Friend = (props) => {\r\n  // console.log(props.data.to_user_name);\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          props.openChat(props.data.to_user_name);\r\n        }}\r\n      >\r\n        <div className=\"chat\">\r\n          <h2>{props.data.to_user_name}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Message = (props) => {\r\n  let name = \"\";\r\n  let classes = \"middle\";\r\n  if (props.data.name) {\r\n    name = props.data.name === props.user ? \"\" : props.data.name;\r\n    classes = props.data.name === props.user ? \"right\" : \"left\";\r\n  }\r\n\r\n  // console.log(classes)\r\n  return (\r\n    <>\r\n      <div ref={props.scrollRef} className={\"message_box \" + classes}>\r\n        <label className=\"message_label\">{name}</label>\r\n        <p className={\"message message_\" + classes}>{props.data.message}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport { Header } from \"../containers/Header\";\r\n// import \"../style/header.css\";\r\n// import \"../style/home.css\";\r\nimport { Profile } from \"../containers/Profile\";\r\nimport { Home } from \"../containers/Home\";\r\nimport { AddData } from \"../containers/AddData\";\r\nimport { Inbox } from \"../containers/Inbox\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/\";\r\n// console.log(URL)\r\nexport default class LoginRouter extends React.Component {\r\n  // const token = \"Bearer \" + props.route.params.token;\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n    status: null,\r\n  };\r\n\r\n  // logout = () => {\r\n  //   Cookies.remove(\"token\");\r\n  // };\r\n  async componentDidMount() {\r\n    const token = this.props.token;\r\n    if (token) {\r\n      // Fetch data for home page\r\n      const res = await fetch(URL, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"*/*\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n\r\n      const data = await res.json();\r\n      this.setState({\r\n        data: data,\r\n        loading: false,\r\n        status: res.status,\r\n      });\r\n      // console.log(res.status);\r\n      // console.log(data);\r\n      // console.log(this.state.user);\r\n      // console.log(this.state.data);\r\n      // Cookies.remove(\"token\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.data)\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <section className=\"main_body\"> Loading... </section>\r\n        ) : (\r\n          <>\r\n            {this.state.status === 200 ? (\r\n              <UserFound data={this.state.data} token={this.props.token} />\r\n              ) : (\r\n              <Redirect to={process.env.PUBLIC_URL + \"/signin/\"} />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserFound = (props) => {\r\n  // console.log(props);\r\n  const data = props.data;\r\n  return (\r\n    <>\r\n      <Header user_name={data.user.user_name} />\r\n      <section className=\"main_body\">\r\n        <Route\r\n          path={process.env.PUBLIC_URL + \"/\"}\r\n          render={() => {\r\n            return (\r\n              <>\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Home data={data} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/add_data/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <AddData data={data} token={props.token} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={process.env.PUBLIC_URL + \"/profile/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Profile user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  <Route\r\n                    path={process.env.PUBLIC_URL + \"/inbox/\"}\r\n                    render={() => {\r\n                      return (\r\n                        <>\r\n                          <Inbox user={data.user} />\r\n                        </>\r\n                      );\r\n                    }}\r\n                  />\r\n                  {/* <Route exact path=\"/inbox\" component={Inbox} /> */}\r\n                </Switch>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import React, {} from \"react\";\r\nimport { Redirect} from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginRouter from \"./LoginRouter\";\r\n\r\n\r\nexport const MainRouter = () =>{\r\n    const token = Cookies.get(\"token\");\r\n    \r\n\r\n    return(<> \r\n        {token ? \r\n        <>\r\n        <Redirect to={process.env.PUBLIC_URL+\"/inbox/\"} />\r\n        <LoginRouter token={token}/> \r\n        </>\r\n        :\r\n        <>\r\n        <Redirect to={process.env.PUBLIC_URL+\"/signin/\"} />\r\n        </>\r\n        }\r\n    </>)\r\n}","import React from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\n// const cookies = require(\"js-cookie\");\r\n\r\n// import \"fetch\"\r\n\r\nconst URL = process.env.REACT_APP_SERVER + \"/signin\";\r\n// console.log(URL)\r\n\r\nexport default class Signin extends React.Component {\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    user_name: \"\",\r\n    password: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: this.state.user_name,\r\n        password: this.state.password,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      const token = \"Bearer \" + data.token;\r\n      await Cookies.set(\"token\", token);\r\n      this.setState({ username: \"\", password: \"\", islogin: true });\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n      this.setState({ user_name: \"\", password: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL + \"/inbox/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"main_body\">\r\n              <div className=\"form\">\r\n                <h2 className=\"form-heading\">Login</h2>\r\n                <div className=\"signin-form\">\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                      onKeyDownCapture={(e) =>\r\n                        e.key === \"Enter\" ? this.submit(e) : null\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <button\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <Link\r\n                  className=\"form-link\"\r\n                  to={process.env.PUBLIC_URL + \"/signup/\"}\r\n                >\r\n                  Click to make an account\r\n                </Link>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\n// import Cookies from \"js-cookie\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n// const cookies = require(\"js-cookie\");\r\n\r\n// import \"fetch\"\r\nconst URL = process.env.REACT_APP_SERVER+\"/signup\";\r\n\r\nexport default class Signup extends React.Component {\r\n  // const token = \"Bearer \" + props.route.params.token;\r\n  state = {\r\n    islogin: false,\r\n    data: null,\r\n    name: \"\",\r\n    user_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n  };\r\n  submit = async () => {\r\n    const res = await fetch(URL, {\r\n      // // Fetch data for home page\r\n      // method: \"GET\",\r\n      // headers: {\r\n      //   Accept: \"*/*\",\r\n      //   Authorization: token,\r\n      // },\r\n\r\n      // login\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        user_name: this.state.user_name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        phone: this.state.phone,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.token) {\r\n      // const token = \"Bearer \" + data.token;\r\n      //   await Cookies.set(\"token\", token);\r\n      alert(\"account created please login\");\r\n      this.setState({\r\n        name: \"\",\r\n        user_name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        phone: 0,\r\n        islogin: true,\r\n      });\r\n      // console.log(token)\r\n    } else {\r\n      // console.log(data)\r\n      alert(data.error);\r\n    }\r\n    // alert(data.error)\r\n    // console.log(data.token)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.islogin ? (\r\n          <Redirect to={process.env.PUBLIC_URL+\"/signin/\"} />\r\n        ) : (\r\n          <>\r\n            <section className=\"main_body\">\r\n              <div className=\"form\">\r\n                <h2 className=\"form-heading\">Sign UP</h2>\r\n                <div className=\"signup-form\">\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.setState({ name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.user_name}\r\n                      onChange={(e) => {\r\n                        this.setState({ user_name: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"user_name\">Email</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.email}\r\n                      onChange={(e) => {\r\n                        this.setState({ email: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => {\r\n                        this.setState({ password: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <label htmlFor=\"phone\">Phone No</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={this.state.phone}\r\n                      onChange={(e) => {\r\n                        this.setState({ phone: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-cell\">\r\n                    <button\r\n                      onClick={() => {\r\n                        this.submit();\r\n                      }}\r\n                    >\r\n                      Signup\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <Link className=\"form-link\" to={process.env.PUBLIC_URL+\"/signin/\"}>\r\n                  Already have an account ?? Login\r\n                </Link>\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\r\n// import \"../style/link_page.css\"\r\nimport \"../script/link_page\"\r\n\r\n\r\nexport const LinkPage = (props) => {\r\n    const data = props.data;\r\n    //   console.log(data);\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n                <header>\r\n                    <nav>\r\n                        <div>\r\n                            <h1>BTech 20</h1>\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            <div id=\"time\"></div>\r\n                            <div id=\"date\"></div>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n                <section className=\"body\">\r\n                    <div className=\"color_code\">\r\n                        <h5 className=\"live\">Running...</h5>\r\n                        <h5 className=\"leftToday\">Left</h5>\r\n                        <h5 className=\"today_class\">Todays Class</h5>\r\n                        <h5 className=\"status\">Not for Today</h5>\r\n                    </div>\r\n                    <h2>Semester 3</h2>\r\n\r\n                    <h2 className=\"running\">No Class is Running Now </h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2 className=\"today\">No Classes are Left Today</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"hide2\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    <h2>All Class Timing and Link</h2>\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <CourseCard\r\n                                        key={ind}\r\n                                        data={val}\r\n                                        class={\"course status\"}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CourseCard = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <div className={props.class}>\r\n            <h3>{props.data.course}</h3>\r\n            {\r\n                props.data.time.map((val, ind) => {\r\n                    return (\r\n                        <Timing\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst Timing = (props) => {\r\n    // console.log(props.data)\r\n    return (\r\n        <>\r\n            <h4 className=\"time\">{props.data.time}</h4>\r\n            {\r\n                props.data.section.map((val, ind) => {\r\n                    return (\r\n                        <ClassLink\r\n                            key={ind}\r\n                            data={val}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst ClassLink = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <h5>\r\n            <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n        </h5>\r\n    </>)\r\n}\r\n","\r\n// import \"../style/link_page.css\"\r\nimport \"../script/link_page\"\r\n\r\n\r\nexport const PublicPage = (props) => {\r\n    const data = props.data;\r\n    //   console.log(data);\r\n    return (\r\n        <>\r\n            <div id=\"link-page\">\r\n\r\n                <section className=\"body\">\r\n                    <div className=\"card-container\">\r\n                        {\r\n                            data.map((val, ind) => {\r\n                                return (\r\n                                    <Card\r\n                                        key={ind}\r\n                                        data={val}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Card = (props) => {\r\n    // console.log(props.data)\r\n    return (<>\r\n        <div className=\"status course\">\r\n            <a href={props.data.link} target=\"blank\">{props.data.title}</a>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n// const Timing = (props) => {\r\n//     // console.log(props.data)\r\n//     return (\r\n//         <>\r\n//             <h4 className=\"time\">{props.data.time}</h4>\r\n//             {\r\n//                 props.data.section.map((val, ind) => {\r\n//                     return (\r\n//                         <ClassLink\r\n//                             key={ind}\r\n//                             data={val}\r\n//                         />\r\n//                     )\r\n//                 })\r\n//             }\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// const ClassLink = (props) => {\r\n//     // console.log(props.data)\r\n//     return (<>\r\n//         <h5>\r\n//             <a href={props.data.link} target=\"blank\">{props.data.section}</a>\r\n//         </h5>\r\n//     </>)\r\n// }\r\n","// require(\"dotenv\").config();\r\nimport React from \"react\";\r\nimport { LinkPage } from \"./LinkPage\";\r\nimport { PublicPage } from \"./PublicPage\";\r\n// import { Redirect} from \"react-router-dom\";\r\n\r\nconst URL = process.env.REACT_APP_SERVER+\"/link/\";\r\n// console.log(URL)\r\n\r\nexport default class LinkWebsite extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    data: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // console.log(this.props.id)\r\n    const res = await fetch(URL + this.props.id);\r\n    if (res.status === 404) {\r\n      this.setState({ loading: false });\r\n    } else {\r\n      const data = await res.json();\r\n      this.setState({ data: data, loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.loading ? (\r\n          <section className=\"main_body\">\r\n            <h2> Loading... </h2>\r\n          </section>\r\n        ) : (\r\n          <>\r\n            {this.state.data ? (\r\n              <>\r\n                {this.props.id !== \"btech20\" ? (\r\n                  <div>\r\n                    <PublicPage data={this.state.data} />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <LinkPage data={this.state.data} />\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <section className=\"main_body\">\r\n                  <h2>Page not found</h2>\r\n                </section>\r\n                {/* <Redirect to=\"/\" /> */}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// import \"./style/main.css\";\r\n// import \"./style/header.css\";\r\n// import \"./style/home.css\";\r\n// import \"./style/link_page.css\";\r\nimport \"./style/chats.css\";\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // useLocation,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport { MainRouter } from \"./routes/MainRouter\";\r\nimport Signin from \"./containers/auth/Signin\";\r\nimport Signup from \"./containers/auth/Signup\";\r\n// import Home from \"./containers/Home\";\r\nimport LinkWebsite from \"./containers/LinkWebsite\";\r\n// import { Profile } from \"./containers/Profile\";\r\n\r\n\r\nexport const App = () => {\r\n  // console.log(process.env.PUBLIC_URL)\r\n  let querry = window.location.search.split(\"?\").slice(1, 2).join();\r\n  // console.log(window.location);\r\n  // console.log(querry);\r\n  // console.log(querry2);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {querry ? <Redirect to={process.env.PUBLIC_URL + querry} /> : <></>}\r\n        <Switch>\r\n          {/* <Route exact path=\"/\" render={() => {\r\n                // console.log(data)\r\n                return (\r\n                  <>\r\n                    <MainRouter token={this.state.token}/>\r\n                  </>\r\n                );\r\n              }}/> */}\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signin/\"}\r\n            component={Signin}\r\n          />\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/signup/\"}\r\n            component={Signup}\r\n          />\r\n          {/* <Route exact path=\"/profile\" component={Profile} /> */}\r\n          {/* <Route exact path=\"/signup\" component={Signup} /> */}\r\n          {/* <Route exact path=\"/home\" component={Home} /> */}\r\n          {/* <Route exact path=\"/link/:id\" component={LinkWebsite} /> */}\r\n\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/page/:id\"}\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite id={props.match.params.id} />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n\r\n          {/* <Route\r\n            exact\r\n            path=\"/page/:id\"\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <LinkWebsite\r\n                    id={props.match.params.id}\r\n                  />\r\n                </>\r\n              );\r\n            }}\r\n          /> */}\r\n\r\n          <MainRouter path={process.env.PUBLIC_URL + \"/\"} />\r\n\r\n          {/* <Redirect to={process.env.PUBLIC_URL} /> */}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// /*\r\n\r\nconst script = () => {\r\n  let months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  let currentDate = new Date();\r\n  let day = currentDate.getDay();\r\n  let hour = currentDate.getHours();\r\n  if (hour.toString().length < 2) {\r\n    hour = \"0\" + hour;\r\n  }\r\n\r\n  let minute = currentDate.getMinutes();\r\n  if (minute.toString().length < 2) {\r\n    minute = \"0\" + minute;\r\n  }\r\n\r\n  let second = currentDate.getSeconds();\r\n  if (second.toString().length < 2) {\r\n    second = \"0\" + second;\r\n  }\r\n\r\n  let date = currentDate.getDate();\r\n  if (date.toString().length < 2) {\r\n    date = \"0\" + date;\r\n  }\r\n\r\n  let month = currentDate.getMonth();\r\n\r\n  // let year = currentDate.getFullYear();\r\n\r\n  let time = hour + \":\" + minute;\r\n\r\n  let courses = document.querySelectorAll(\"#link-page .course\");\r\n\r\n  let liveClasses = document.querySelectorAll(\"#link-page .hide\");\r\n\r\n  let todayClasses = document.querySelectorAll(\"#link-page .hide2\");\r\n\r\n  courses.forEach((val, i) => {\r\n    // console.log(val)\r\n    val.innerText.split(\"\\n\").forEach((val, temp) => {\r\n      if (val[val.length - 3] === \":\") {\r\n        let classTimes = val.split(\",\");\r\n        classTimes.forEach((value, ind) => {\r\n          let classTime = value.split(\" \");\r\n          if (\r\n            time < classTime[classTime.length - 3] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".today\")[0].innerHTML =\r\n              \"Today's Classes Left\";\r\n            todayClasses[i].setAttribute(\"class\", \"course leftToday\");\r\n          }\r\n          if (\r\n            time >= classTime[classTime.length - 3] &&\r\n            time < classTime[classTime.length - 1] &&\r\n            classTime.indexOf(days[day]) !== -1\r\n          ) {\r\n            document.querySelectorAll(\".running\")[0].innerHTML =\r\n              \"Classes Running...\";\r\n            liveClasses[i].setAttribute(\"class\", \"course live\");\r\n          }\r\n          if (classTime.indexOf(days[day]) !== -1) {\r\n            courses[i].setAttribute(\"class\", \"course today_class\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  const timer = setInterval(() => {\r\n    currentDate = new Date();\r\n    day = currentDate.getDay();\r\n    hour = currentDate.getHours();\r\n    if (hour.toString().length < 2) {\r\n      hour = \"0\" + hour;\r\n    }\r\n\r\n    minute = currentDate.getMinutes();\r\n    if (minute.toString().length < 2) {\r\n      minute = \"0\" + minute;\r\n    }\r\n\r\n    second = currentDate.getSeconds();\r\n    if (second.toString().length < 2) {\r\n      second = \"0\" + second;\r\n    }\r\n    try {\r\n      document.getElementById(\"time\").innerText =\r\n        hour + \":\" + minute + \":\" + second;\r\n      document.getElementById(\"date\").innerText =\r\n        days[day] + \", \" + months[month] + \" \" + date;\r\n    } catch {\r\n      //   console.log(\"timer timer\")\r\n      clearInterval(timer);\r\n    }\r\n\r\n    if (\r\n      (minute.toString() === \"00\" || minute.toString() === \"30\") &&\r\n      second.toString() === \"00\"\r\n    ) {\r\n      window.location.reload();\r\n    }\r\n  }, 1000);\r\n\r\n  // console.log(\"hello\")\r\n};\r\n\r\n\r\nconst start = setInterval(() => {\r\n  const load = document.getElementById(\"time\");\r\n  if (load) {\r\n    script();\r\n    clearInterval(start)\r\n  }\r\n}, 100);\r\n\r\n\r\n// */"],"sourceRoot":""}